dgl_g:  (Graph(num_nodes=30, num_edges=64,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(3,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)}), tensor([0]))
dgl_g[0]:  Graph(num_nodes=30, num_edges=64,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(3,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1444091796875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.0967254638671875e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1444091796875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1682510375976562e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1682510375976562e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4781951904296875e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.9311904907226562e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1682510375976562e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 3.0040740966796875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 1 1]
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 1 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 1. 1.]
 [0. 0. 0. ... 1. 1. 0.]
 [0. 0. 0. ... 1. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4543533325195312e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.621246337890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.9073486328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4543533325195312e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5497207641601562e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 1 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 1 0 ... 0 1 1]
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 1 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 1. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 1. 0. ... 1. 1. 1.]
 [0. 0. 0. ... 1. 1. 0.]
 [0. 0. 0. ... 1. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.430511474609375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5497207641601562e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(57, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4066696166992188e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(57, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1682510375976562e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4066696166992188e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.430511474609375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4066696166992188e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(54, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(54, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5497207641601562e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4543533325195312e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(52, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(52, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 2.0742416381835938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5974044799804688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.71661376953125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 1 1]
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 1 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 1. 1.]
 [0. 0. 0. ... 1. 1. 0.]
 [0. 0. 0. ... 1. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(52, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(52, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(53, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(53, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(56, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(56, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 1]
 [0 0 0 ... 0 1 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 1.]
 [0. 0. 0. ... 0. 1. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 1]
 [0 0 0 ... 0 1 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 1.]
 [0. 0. 0. ... 0. 1. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 1. 1. 1.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4543533325195312e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5735626220703125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 1 1]
 [0 0 0 ... 1 0 0]
 [0 0 0 ... 1 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 1. 1.]
 [0. 0. 0. ... 1. 1. 0.]
 [0. 0. 0. ... 1. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 1]
 [0 0 0 ... 0 1 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 1.]
 [0. 0. 0. ... 0. 1. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5735626220703125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(51, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(51, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 1. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 3.24249267578125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(48, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(20, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(20, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(19, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.430511474609375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(19, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(17, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(17, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  1. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 1. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 1. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 1. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(24, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4066696166992188e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(24, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(26, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(26, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 1. 1.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(45, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 4.4345855712890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(45, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4066696166992188e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.430511474609375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.8835067749023438e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(46, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(43, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(47, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(49, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5735626220703125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 1 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 1 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(13, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(13, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 1 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 1 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 1 1 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(13, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(13, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(16, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(16, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5497207641601562e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(21, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(21, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0]
 [0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 1 1]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 1. 1. 1.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(20, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(20, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.430511474609375e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(50, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1682510375976562e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 1. 1. 1.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 1. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(24, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(24, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(24, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(24, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(26, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(26, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5497207641601562e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4543533325195312e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.430511474609375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5497207641601562e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.
  1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 1. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(21, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(21, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(21, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(21, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 1. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(22, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(22, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(42, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(23, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(27, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 1. 1.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 1.]
 [0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1]
 [0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 1.]
 [0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 1. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 2.193450927734375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(41, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(44, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4543533325195312e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(39, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(38, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 1. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 1. 1.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(29, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(25, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 1. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(28, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 1 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  1. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(26, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(26, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(40, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.52587890625e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.430511474609375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4066696166992188e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.71661376953125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(34, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4781951904296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(45, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(45, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.5020370483398438e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.430511474609375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(45, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(45, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.7642974853515625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(45, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(45, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(33, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4066696166992188e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3589859008789062e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2159347534179688e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(37, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.4066696166992188e-05
pred:  0
label:  1
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(35, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(32, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3828277587890625e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2874603271484375e-05
pred:  0
label:  0
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.33514404296875e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(30, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.2636184692382812e-05
pred:  0
label:  0
adjacency: [[0 1 0 ... 0 0 0]
 [1 0 1 ... 0 0 0]
 [0 1 0 ... 0 0 0]
 ...
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]
 [0 0 0 ... 0 0 0]]
adj_Today: [[1. 1. 0. ... 0. 0. 0.]
 [1. 1. 1. ... 0. 0. 0.]
 [0. 1. 1. ... 0. 0. 0.]
 ...
 [0. 0. 0. ... 1. 0. 0.]
 [0. 0. 0. ... 0. 1. 0.]
 [0. 0. 0. ... 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(36, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.239776611328125e-05
pred:  0
label:  1
adjacency: [[0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0]
 [1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]
 [0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0]
 [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0]
 [0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1]
 [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
 [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0]]
adj_Today: [[1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 1. 1. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 1. 1. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [1. 0. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 1. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 1. 1. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 1. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 1. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]
 [1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.
  0. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  1. 0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 1. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 1. 0. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 1. 0. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 1. 0. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 1. 0.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0. 1.]]
dense:  free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
nn.dense(%0, %1, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.3113021850585938e-05
dense:  free_var %conv2.weight: Tensor[(16, 2), float32];
free_var %conv1.weight: Tensor[(3, 16), float32];
free_var %infeats: Tensor[(31, 3), float32];
%0 = transpose(%conv1.weight, axes=None);
%1 = multiply(%infeats, meta[relay.Constant][0]);
%2 = nn.dense(%0, %1, units=None);
%3 = nn.dense(%2, meta[relay.Constant][1], units=None);
%4 = transpose(%3, axes=None);
%5 = multiply(%4, meta[relay.Constant][0]);
free_var %conv1.bias: Tensor[(16, 1), float32];
%6 = nn.bias_add(%5, %conv1.bias, axis=-1);
%7 = nn.relu(%6);
%8 = transpose(%conv2.weight, axes=None);
%9 = multiply(%7, meta[relay.Constant][0]);
nn.dense(%8, %9, units=None)

adj:  meta[relay.Constant][0]

relay_adj:  meta[relay.Constant][0]

one denseMM operator time is: 1.1920928955078125e-05
pred:  0
label:  0
the total dMM time is : 0.010616064071655273
num:  405.0
Test accuracy of TVM results: 78.77%
model inference total time:  0.9100973606109619
