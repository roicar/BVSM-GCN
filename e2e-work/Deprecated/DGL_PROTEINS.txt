Max number of node: 620
Number of graph categories: 2
[Graph(num_nodes=99, num_edges=350,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)}), tensor([[0],
        [0],
        [1],
        [0],
        [0]])]
Number of nodes for each graph element in the batch: tensor([20, 12, 27, 20, 20])
Number of edges for each graph element in the batch: tensor([64, 40, 98, 70, 78])
The original graphs in the minibatch:
[Graph(num_nodes=20, num_edges=64,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)}), Graph(num_nodes=12, num_edges=40,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)}), Graph(num_nodes=27, num_edges=98,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)}), Graph(num_nodes=20, num_edges=70,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)}), Graph(num_nodes=20, num_edges=78,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})]
OK
OK2
batched_graph:  Graph(num_nodes=69, num_edges=258,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3467, -0.3827],
        [ 0.3305, -0.3876],
        [ 0.4989, -0.5167],
        [ 0.4424, -0.2773],
        [ 0.4887, -0.4637]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 0
num_correct_after: 0
batched_graph:  Graph(num_nodes=91, num_edges=342,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4689, -0.3739],
        [ 0.3361, -0.3920],
        [ 0.4549, -0.5149],
        [ 0.4780, -0.4119],
        [ 0.4009, -0.4386]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 0
num_correct_after: 0
batched_graph:  Graph(num_nodes=89, num_edges=324,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4942, -0.4904],
        [ 0.5135, -0.5534],
        [ 0.5345, -0.6361],
        [ 0.4727, -0.4861],
        [ 0.2704, -0.2780]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 0
num_correct_after: 0
batched_graph:  Graph(num_nodes=162, num_edges=566,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3863, -0.4488],
        [ 0.4911, -0.4594],
        [ 0.4201, -0.3510],
        [ 0.4786, -0.5170],
        [ 0.4706, -0.4111]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 0
num_correct_after: 0
batched_graph:  Graph(num_nodes=79, num_edges=264,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3938, -0.4450],
        [ 0.3916, -0.3725],
        [ 0.4630, -0.5387],
        [ 0.2042, -0.2033],
        [ 0.4641, -0.4433]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 0
num_correct_after: 0
batched_graph:  Graph(num_nodes=103, num_edges=436,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3414, -0.3957],
        [ 0.2957, -0.3405],
        [ 0.4980, -0.5445],
        [ 0.4634, -0.3535],
        [ 0.4874, -0.4457]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 0
num_correct_after: 0
batched_graph:  Graph(num_nodes=124, num_edges=492,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4719, -0.3858],
        [ 0.4203, -0.4761],
        [-0.1002,  0.2302],
        [ 0.5038, -0.5290],
        [ 0.4809, -0.5784]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 1, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 1, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 0
num_correct_after: 1
batched_graph:  Graph(num_nodes=65, num_edges=236,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.5203, -0.6327],
        [ 0.4623, -0.4903],
        [ 0.4820, -0.5389],
        [ 0.4146, -0.3894],
        [ 0.3880, -0.4103]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 1
num_correct_after: 1
batched_graph:  Graph(num_nodes=79, num_edges=304,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.5099, -0.6231],
        [ 0.2633, -0.2792],
        [ 0.4568, -0.5499],
        [ 0.4565, -0.4301],
        [ 0.4953, -0.4794]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 1
num_correct_after: 1
batched_graph:  Graph(num_nodes=91, num_edges=328,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4658, -0.3584],
        [ 0.4126, -0.5001],
        [ 0.4815, -0.5747],
        [ 0.5012, -0.5264],
        [ 0.0899, -0.0483]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 1
num_correct_after: 1
batched_graph:  Graph(num_nodes=124, num_edges=476,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.5012, -0.5201],
        [ 0.3531, -0.4117],
        [ 0.1403, -0.1211],
        [ 0.4376, -0.2532],
        [ 0.3463, -0.4039]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 1
num_correct_after: 1
batched_graph:  Graph(num_nodes=72, num_edges=282,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4672, -0.5656],
        [-0.9380,  1.4023],
        [ 0.3994, -0.3912],
        [ 0.4064, -0.1215],
        [ 0.4885, -0.4492]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 1, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 1, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 1
num_correct_after: 2
batched_graph:  Graph(num_nodes=60, num_edges=216,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[-0.0041,  0.0815],
        [ 0.4675, -0.5188],
        [ 0.4892, -0.4502],
        [ 0.0201,  0.0509],
        [ 0.4685, -0.3883]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([1, 0, 0, 1, 0])
pred.argmax(1).squeeze():  tensor([1, 0, 0, 1, 0])
(pred.argmax(1)==labels).sum:  tensor(2)
(pred.argmax(1)==labels).sum.item():  2
num_correct_before: 2
num_correct_after: 4
batched_graph:  Graph(num_nodes=54, num_edges=192,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4055, -0.3548],
        [ 0.4053, -0.1289],
        [ 0.4546, -0.3055],
        [ 0.5005, -0.5160],
        [-0.0245,  0.1133]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 1])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 4
num_correct_after: 5
batched_graph:  Graph(num_nodes=172, num_edges=500,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4365, -0.4671],
        [ 0.4734, -0.4808],
        [ 0.4561, -0.5536],
        [ 0.4621, -0.4620],
        [-1.9106,  2.7752]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 1])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 5
num_correct_after: 6
batched_graph:  Graph(num_nodes=123, num_edges=412,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4440, -0.4746],
        [ 0.1529, -0.1094],
        [ 0.4899, -0.4571],
        [ 0.1039,  0.0416],
        [-0.2493,  0.4300]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 1])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 6
num_correct_after: 7
batched_graph:  Graph(num_nodes=93, num_edges=380,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3824, -0.0240],
        [ 0.4805, -0.5076],
        [-0.4076,  0.7579],
        [ 0.5053, -0.5154],
        [ 0.4256, -0.2057]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 1, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 1, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 7
num_correct_after: 8
batched_graph:  Graph(num_nodes=174, num_edges=638,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4738, -0.5092],
        [ 0.4124, -0.4505],
        [ 0.4706, -0.4621],
        [ 0.4747, -0.5358],
        [ 0.3681, -0.3845]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 8
num_correct_after: 8
batched_graph:  Graph(num_nodes=64, num_edges=244,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[-0.2529,  0.4530],
        [ 0.4669, -0.3728],
        [ 0.4045, -0.4449],
        [ 0.4736, -0.3909],
        [ 0.4891, -0.5727]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([1, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([1, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 8
num_correct_after: 9
batched_graph:  Graph(num_nodes=72, num_edges=272,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4126, -0.4441],
        [ 0.5095, -0.5717],
        [ 0.5302, -0.6272],
        [ 0.4522, -0.3182],
        [ 0.5116, -0.5449]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 9
num_correct_after: 9
batched_graph:  Graph(num_nodes=54, num_edges=190,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4758, -0.4008],
        [-0.2161,  0.3846],
        [ 0.4681, -0.3773],
        [ 0.1160, -0.0832],
        [ 0.4842, -0.5347]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 1, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 1, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 9
num_correct_after: 10
batched_graph:  Graph(num_nodes=154, num_edges=548,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4606, -0.5358],
        [ 0.4826, -0.4242],
        [ 0.3890, -0.4131],
        [-0.1047,  0.2273],
        [-0.1098,  0.2323]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 1, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 1, 1])
(pred.argmax(1)==labels).sum:  tensor(2)
(pred.argmax(1)==labels).sum.item():  2
num_correct_before: 10
num_correct_after: 12
batched_graph:  Graph(num_nodes=73, num_edges=244,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3755, -0.4120],
        [ 0.4637, -0.5275],
        [ 0.3065, -0.3411],
        [ 0.5203, -0.6327],
        [ 0.4701, -0.3853]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 12
num_correct_after: 12
batched_graph:  Graph(num_nodes=88, num_edges=318,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4884, -0.4491],
        [ 0.4525, -0.4659],
        [ 0.0101,  0.0631],
        [ 0.0040,  0.0725],
        [ 0.2855, -0.2896]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 1, 1, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 1, 1, 0])
(pred.argmax(1)==labels).sum:  tensor(2)
(pred.argmax(1)==labels).sum.item():  2
num_correct_before: 12
num_correct_after: 14
batched_graph:  Graph(num_nodes=132, num_edges=464,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3869, -0.0973],
        [ 0.5115, -0.5517],
        [-0.4033,  0.6492],
        [ 0.4056, -0.3422],
        [ 0.3710, -0.3912]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 1, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 1, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 14
num_correct_after: 15
batched_graph:  Graph(num_nodes=65, num_edges=216,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[-0.1664,  0.3125],
        [ 0.5188, -0.5948],
        [ 0.3870, -0.3562],
        [ 0.0649, -0.0128],
        [ 0.4957, -0.6114]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([1, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([1, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 15
num_correct_after: 16
batched_graph:  Graph(num_nodes=75, num_edges=278,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[-0.1242,  0.2533],
        [ 0.0488,  0.0111],
        [ 0.2817, -0.2886],
        [ 0.3503, -0.3187],
        [ 0.3408, -0.3982]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([1, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([1, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 16
num_correct_after: 17
batched_graph:  Graph(num_nodes=95, num_edges=252,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4767, -0.5850],
        [ 0.3125, -0.3595],
        [ 0.4411, -0.4363],
        [-0.0536,  0.1515],
        [-0.7673,  1.1734]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 1, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 1, 1])
(pred.argmax(1)==labels).sum:  tensor(2)
(pred.argmax(1)==labels).sum.item():  2
num_correct_before: 17
num_correct_after: 19
batched_graph:  Graph(num_nodes=119, num_edges=430,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3206, -0.2809],
        [ 0.4892, -0.4541],
        [ 0.4409, -0.2697],
        [ 0.4084, -0.3375],
        [ 0.3786, -0.2776]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 19
num_correct_after: 19
batched_graph:  Graph(num_nodes=154, num_edges=622,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4294, -0.4713],
        [-0.2059,  0.3703],
        [ 0.4012, -0.4780],
        [ 0.4440, -0.3697],
        [ 0.4261, -0.5095]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 1, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 1, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 19
num_correct_after: 20
batched_graph:  Graph(num_nodes=126, num_edges=438,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[-0.0190,  0.1054],
        [ 0.1539,  0.0680],
        [ 0.4940, -0.4771],
        [ 0.1720, -0.0606],
        [ 0.4946, -0.4826]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([1, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([1, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 20
num_correct_after: 21
batched_graph:  Graph(num_nodes=192, num_edges=660,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.2144, -0.1991],
        [ 0.5001, -0.6043],
        [ 0.1535, -0.1004],
        [ 0.4468, -0.4165],
        [ 0.4104, -0.4485]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 21
num_correct_after: 21
batched_graph:  Graph(num_nodes=136, num_edges=492,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[-1.1333,  1.6782],
        [ 0.2889, -0.2778],
        [ 1.2798, -0.9893],
        [ 0.3727, -0.3400],
        [ 0.4590, -0.4568]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([1, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([1, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 21
num_correct_after: 22
batched_graph:  Graph(num_nodes=101, num_edges=378,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4821, -0.4848],
        [ 0.4774, -0.5684],
        [ 0.0222,  0.0462],
        [ 0.4728, -0.5761],
        [ 0.0207,  0.0465]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 1, 0, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 1, 0, 1])
(pred.argmax(1)==labels).sum:  tensor(2)
(pred.argmax(1)==labels).sum.item():  2
num_correct_before: 22
num_correct_after: 24
batched_graph:  Graph(num_nodes=94, num_edges=392,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4798, -0.4203],
        [ 0.4865, -0.4567],
        [ 0.5210, -0.5781],
        [ 0.4215, -0.4274],
        [-0.7609,  1.1545]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 1])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 24
num_correct_after: 25
batched_graph:  Graph(num_nodes=110, num_edges=408,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4869, -0.5498],
        [ 0.4001, -0.4722],
        [ 0.3471, -0.3505],
        [ 0.3806, -0.3832],
        [ 0.1419, -0.1167]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 25
num_correct_after: 25
batched_graph:  Graph(num_nodes=92, num_edges=332,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3919, -0.4237],
        [ 0.4859, -0.4488],
        [-0.9381,  1.4048],
        [ 0.4177, -0.4752],
        [ 0.4459, -0.2902]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 1, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 1, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 25
num_correct_after: 26
batched_graph:  Graph(num_nodes=76, num_edges=280,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4161, -0.4374],
        [ 0.4864, -0.5287],
        [ 0.4821, -0.4813],
        [ 0.0023,  0.0738],
        [-0.2205,  0.3950]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 1, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 1, 1])
(pred.argmax(1)==labels).sum:  tensor(2)
(pred.argmax(1)==labels).sum.item():  2
num_correct_before: 26
num_correct_after: 28
batched_graph:  Graph(num_nodes=137, num_edges=464,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.1798, -0.1249],
        [ 0.4446, -0.2728],
        [ 0.3982, -0.4762],
        [ 0.4838, -0.4332],
        [ 0.5227, -0.5966]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 28
num_correct_after: 28
batched_graph:  Graph(num_nodes=59, num_edges=212,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4823, -0.4247],
        [ 0.4135, -0.4228],
        [ 0.4772, -0.4656],
        [ 0.4148, -0.4214],
        [ 0.2899, -0.3220]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(0)
(pred.argmax(1)==labels).sum.item():  0
num_correct_before: 28
num_correct_after: 28
batched_graph:  Graph(num_nodes=187, num_edges=664,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3399, -0.3725],
        [ 0.4940, -0.5181],
        [ 0.3757, -0.3196],
        [ 0.4825, -0.4565],
        [-0.3837,  0.6231]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 1])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 28
num_correct_after: 29
batched_graph:  Graph(num_nodes=65, num_edges=244,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[-0.7773,  1.1765],
        [ 0.2206, -0.2334],
        [ 0.5012, -0.5201],
        [ 0.2187, -0.2209],
        [ 0.5181, -0.6285]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([1, 0, 0, 0, 0])
pred.argmax(1).squeeze():  tensor([1, 0, 0, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 29
num_correct_after: 30
batched_graph:  Graph(num_nodes=82, num_edges=300,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.3997, -0.4441],
        [ 0.4628, -0.3627],
        [ 0.4710, -0.5264],
        [ 0.4768, -0.4129],
        [-1.1560,  1.7102]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 0, 0, 1])
pred.argmax(1).squeeze():  tensor([0, 0, 0, 0, 1])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 30
num_correct_after: 31
batched_graph:  Graph(num_nodes=69, num_edges=252,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1, 1, 1])
pred:  tensor([[ 0.4930, -0.5872],
        [ 0.5151, -0.6201],
        [-0.5164,  0.8073],
        [ 0.1744, -0.1594],
        [ 0.1601, -0.0878]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 0, 1, 0, 0])
pred.argmax(1).squeeze():  tensor([0, 0, 1, 0, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 31
num_correct_after: 32
batched_graph:  Graph(num_nodes=66, num_edges=256,
      ndata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64), 'node_attr': Scheme(shape=(1,), dtype=torch.float64), 'node_labels': Scheme(shape=(1,), dtype=torch.int64)}
      edata_schemes={'_ID': Scheme(shape=(), dtype=torch.int64)})
labels:  tensor([[1],
        [1],
        [1]])
labels.squeeze():  tensor([1, 1, 1])
pred:  tensor([[ 0.4791, -0.5021],
        [-0.0822,  0.1958],
        [ 0.4172, -0.4860]], grad_fn=<DivBackward0>)
pred.argmax(1):  tensor([0, 1, 0])
pred.argmax(1).squeeze():  tensor([0, 1, 0])
(pred.argmax(1)==labels).sum:  tensor(1)
(pred.argmax(1)==labels).sum.item():  1
num_correct_before: 32
num_correct_after: 33
num_correct:  33
num_tests:  223
Test accuracy: 0.14798206278026907
Infer time: 0.06475400924682617
