----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1732	fail_ct: 164	Time elapsed: 1.03
GA Iter: 0	Max score: 1.0000	Min score: 0.9240	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9899	#Pop: 128	#M+: 1370	#M-: 70
EvolutionarySearch		#s: 128	Time elapsed: 4.60
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [16, 16]
B = PLACEHOLDER [16, 16]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 10.13 / 10.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645954.46)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for i.2 (0,8)
      for k.1 (0,8)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 2	GFLOPS: 2.45 / 10.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696645954.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for k.1 (0,4)
      out.local = ...
  out = ...

==================================================
No: 3	GFLOPS: 9.98 / 10.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645954.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for k.1 (0,8)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 4	GFLOPS: 9.98 / 10.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696645955.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,8)
    for k.0 (0,4)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,4)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 5	GFLOPS: 14.18 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.87, Tstamp:1696645955.48)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for k.0 (0,4)
  for i_c.2 (0,2)
    for j_c.2 (0,8)
      for k.1 (0,4)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
for i.2 (0,16)
  vectorize j.2 (0,16)
    out = ...

==================================================
No: 6	GFLOPS: 11.53 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696645955.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,8)
    for i.2 (0,4)
      for k.1 (0,2)
        vectorize j.3 (0,16)
          out = ...

==================================================
No: 7	GFLOPS: 9.53 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696645955.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,4)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 8	GFLOPS: 7.05 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696645956.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,8)
      for i_c.2 (0,4)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 9	GFLOPS: 9.94 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696645956.47)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,4)
    for k.1 (0,4)
      for i.3 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 10	GFLOPS: 10.80 / 14.18	results: MeasureResult(cost:[0.0000], error................****************
_no:0, all_cost:0.32, Tstamp:1696645956.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for k.0 (0,8)
      for j_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 11	GFLOPS: 7.77 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696645956.91)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,16)
    for j_c.1 (0,4)
      for k.0 (0,2)
        for k.1 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 12	GFLOPS: 2.02 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696645957.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 512
  for k.1 (0,16)
    out.local = ...
  out = ...

==================================================
No: 13	GFLOPS: 7.83 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645957.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 16
  for j_c.2 (0,4)
    for k.1 (0,16)
      vectorize j_c.3 (0,2)
        out.local = ...
  vectorize j.1 (0,8)
    out = ...

==================================================
No: 14	GFLOPS: 10.74 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645957.60)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@ (0,2)
  for i.1 (0,2)
    for j.1 (0,2)
      for k.0 (0,16)
        for i.2 (0,2)
          for i.3 (0,4)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 15	GFLOPS: 10.28 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645957.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.2 (0,16)
    for j_c.2 (0,8)
      for k.1 (0,16)
        out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 16	GFLOPS: 9.56 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645958.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,16)
    for i.2 (0,2)
      for j.2 (0,4)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 17	GFLOPS: 9.22 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696645960.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,8)
    for k.1 (0,2)
      vectorize j_c.3 (0,8)
        out.local = ...
  vectorize j.2 (0,8)
    out = ...

==================================================
No: 18	GFLOPS: 9.18 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696645960.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for j_c.2 (0,4)
      for k.1 (0,2)
        for i_c.3 (0,8)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 19	GFLOPS: 7.43 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645960.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,16)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for k.1 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 20	GFLOPS: 11.15 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645961.04)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,4)
    for i.2 (0,4)
      for k.1 (0,4)
        vectorize j.3 (0,16)
          out = ...

==================================================
No: 21	GFLOPS: 11.93 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645961.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.1 (0,2)
    for k.0 (0,8)
      for i_c.2 (0,8)
        for k.1 (0,2)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 22	GFLOPS: 11.42 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645961.49)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,2)
    for j.2 (0,2)
      for k.1 (0,16)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 23	GFLOPS: 5.25 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696645961.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for j_c.2 (0,2)
    for k.1 (0,16)
      for i_c.3 (0,8)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 24	GFLOPS: 6.48 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696645961.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for j_c.2 (0,8)
      for k.1 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 25	GFLOPS: 4.74 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645962.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for k.1 (0,8)
      vectorize j_c.3 (0,2)
        out.local = ...
  vectorize j.2 (0,2)
    out = ...

==================================================
No: 26	GFLOPS: 8.89 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645962.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for j_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,8)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 27	GFLOPS: 5.02 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645962.54)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,16)
    for i.3 (0,8)
      out = ...

==================================================
No: 28	GFLOPS: 9.42 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645962.79)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,16)
    for i.2 (0,2)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 29	GFLOPS: 8.66 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696645963.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  f................****************
or i_c.1 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,8)
        for k.1 (0,16)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 30	GFLOPS: 0.35 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696645963.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,16)
    for i.2 (0,2)
      for j.2 (0,8)
        for i.3 (0,8)
          out = ...

==================================================
No: 31	GFLOPS: 9.89 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645963.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for j_c.1 (0,4)
    for k.0 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,8)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 32	GFLOPS: 10.54 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696645963.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,2)
  for k.0 (0,4)
    for k.1 (0,4)
      for i_c.3 (0,16)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 33	GFLOPS: 5.37 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645966.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 34	GFLOPS: 10.06 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645966.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,4)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 35	GFLOPS: 10.43 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696645966.78)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,16)
    for i.2 (0,2)
      for j.2 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 36	GFLOPS: 8.74 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645967.05)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.0 (0,16)
    for i.3 (0,2)
      out = ...

==================================================
No: 37	GFLOPS: 4.43 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645967.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 16
  for i_c.2 (0,4)
    for k.1 (0,16)
      for i_c.3 (0,4)
        out.local = ...
  for i.2 (0,16)
    out = ...

==================================================
No: 38	GFLOPS: 10.74 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645967.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,16)
    for j_c.1 (0,8)
      for k.0 (0,4)
        for k.1 (0,4)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 39	GFLOPS: 2.88 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645967.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 64
  for k.1 (0,16)
    out.local = ...
  out = ...

==================================================
No: 40	GFLOPS: 7.69 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645968.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  for j.2 (0,2)
    for k.1 (0,16)
      out = ...

==================================================
No: 41	GFLOPS: 11.56 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696645968.35)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for k.1 (0,8)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 42	GFLOPS: 10.38 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696645968.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for j_c.1 (0,4)
    for k.0 (0,8)
      for i_c.2 (0,2)
        for j_c.2 (0,4)
          for k.1 (0,2)
            out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 43	GFLOPS: 10.64 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645968.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for j_c.1 (0,8)
      for k.0 (0,8)
        for k.1 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 44	GFLOPS: 6.07 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696645969.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,8)
        out.local = ...
  vectorize j.2 (0,4)
    out = ...

==================================================
No: 45	GFLOPS: 7.23 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645969.35)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,8)
      for k.1 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 46	GFLOPS: 9.12 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.59, Tstamp:1696645969.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,8)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 47	GFLOPS: 11.80 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696645969.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,16)
        for k.1 (0,4)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 48	GFLOPS: 6.14 / 14.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696645970.06)
============================================................****************
======
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.1 (0,16)
    for i_c.3 (0,4)
      vectorize j_c.3 (0,2)
        out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 49	GFLOPS: 19.20 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696645972.78)
==================================================
Placeholder: A, B
for j.0 (0,8)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for k.0 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 50	GFLOPS: 5.38 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696645973.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for i_c.2 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,16)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 51	GFLOPS: 11.21 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.96, Tstamp:1696645973.28)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,8)
    for i.2 (0,2)
      for j.2 (0,4)
        for k.1 (0,2)
          for i.3 (0,4)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 52	GFLOPS: 11.77 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696645973.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,4)
        for k.1 (0,4)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 53	GFLOPS: 6.44 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645973.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for i_c.3 (0,2)
      vectorize j_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 54	GFLOPS: 7.41 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696645974.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for i_c.2 (0,8)
        for j_c.2 (0,2)
          for k.1 (0,16)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 55	GFLOPS: 7.20 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696645974.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for j_c.2 (0,8)
      for k.1 (0,8)
        for i_c.3 (0,16)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 56	GFLOPS: 9.80 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645974.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for j_c.2 (0,8)
    for k.1 (0,16)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 57	GFLOPS: 4.96 / 19.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645974.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,2)
    for i_c.2 (0,4)
      for k.1 (0,8)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 58	GFLOPS: 46.59 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696645975.02)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for k.0 (0,2)
  for i_c.2 (0,16)
    for j_c.2 (0,2)
      for k.1 (0,8)
        vectorize j_c.3 (0,8)
          out.local = ...
for i.2 (0,16)
  vectorize j.2 (0,16)
    out = ...

==================================================
No: 59	GFLOPS: 4.08 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696645975.31)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,2)
    for i.2 (0,8)
      for j.2 (0,8)
        for k.1 (0,8)
          for i.3 (0,2)
            out = ...

==================================================
No: 60	GFLOPS: 9.76 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645975.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,16)
        for j_c.2 (0,4)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 61	GFLOPS: 7.14 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696645975.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,16)
    for j_c.2 (0,2)
      for i_c.3 (0,16)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 62	GFLOPS: 8.08 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645976.02)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,128)
  for k.0 (0,2)
    for k.1 (0,8)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 63	GFLOPS: 8.34 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696645976.29)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for i_c.2 (0,4)
          for j_c.2 (0,2)
            for k.1 (0,8)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 64	GFLOPS: 11.26 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645976.54)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.1 (0,16)
    vectorize j.3 (0,8)
      out = ...

Time elapsed for measurement: 24.62 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.18 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1770	fail_ct: 145	Time elapsed: 1.08
GA Iter: 0	Max score: 0.9983	Min score: 0.9166	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9857	#Pop: 128	#M+: 1384	#M-: 68
EvolutionarySearch		#s: 128	Time elapsed: 4.98
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 7.38 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696645985.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i_c.2 (0,2)
    for j_c.2 (0,8)
      for k.1 (0,16)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 66	GFLOPS: 8.88 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645985.92)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for i.2 (0,2)
    for k.1 (0,16)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 67	GFLOPS: 9.99 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.59, Tstamp:1696645986.18)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for j.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 68	GFLOPS: 5.98 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696645986.36)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,2)
    for j.2 (0,4)
      for k.1 (0,8)
        for i.3 (0,2)
          out = ...

==================================================
No: 69	GFLOPS: 8.53 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696645986.63)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for j_c.1 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,16)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 70	GFLOPS: 8.35 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696645986.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 71	GFLOPS: 4.39 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696645987.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,8)
          out.local = ...
  for i.1 (0,16)
    out = ...

==================================================
No: 72	GFLOPS: 6.33 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696645987.26)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,8)
    for i.2 (0,4)
      for k.1 (0,2)
        for i.3 (0,2)
          out = ...

==================================================
No: 73	GFLOPS: 6.54 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.98, Tstamp:1696645987.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for i_c.2 (0,2)
          for j_c.2 (0,2)
            for k.1 (0,4)
              for i_c.3 (0,4)
                out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 74	GFLOPS: 5.55 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696645987.80)
===================................****************
===============================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for k.1 (0,2)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 75	GFLOPS: 43.65 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645988.00)
==================================================
Placeholder: A, B
out.local auto_unroll: 64
for i_c.1 (0,8)
  for k.0 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,8)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
for i.1 (0,16)
  vectorize j.1 (0,16)
    out = ...

==================================================
No: 76	GFLOPS: 8.06 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696645988.26)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  for k.0 (0,8)
    for k.1 (0,2)
      out = ...

==================================================
No: 77	GFLOPS: 9.95 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696645988.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for j_c.2 (0,8)
      for k.1 (0,8)
        for i_c.3 (0,16)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 78	GFLOPS: 7.44 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696645988.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 79	GFLOPS: 8.69 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696645988.99)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.0 (0,16)
    for j.2 (0,2)
      out = ...

==================================================
No: 80	GFLOPS: 8.71 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645989.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for j_c.2 (0,2)
          for k.1 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 81	GFLOPS: 5.69 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696645991.81)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 82	GFLOPS: 7.34 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696645991.95)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for j.2 (0,4)
      for k.1 (0,2)
        for i.3 (0,4)
          out = ...

==================================================
No: 83	GFLOPS: 9.87 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696645992.17)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 84	GFLOPS: 3.23 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.63, Tstamp:1696645992.45)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,2)
    for k.1 (0,16)
      for i.3 (0,8)
        out = ...

==================================================
No: 85	GFLOPS: 10.17 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696645992.71)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,8)
    for j.2 (0,2)
      for k.1 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 86	GFLOPS: 6.49 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696645992.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for j_c.1 (0,2)
    for i_c.2 (0,16)
      for j_c.2 (0,2)
        for k.1 (0,16)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 87	GFLOPS: 6.47 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645993.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,4)
    for j.2 (0,8)
      for k.1 (0,4)
        for i.3 (0,2)
          out = ...

==================================================
No: 88	GFLOPS: 4.44 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645993.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,16)
    for i_c.2 (0,4)
      for i_c.3 (0,4)
        out.local = ...
  for i.1 (0,16)
    out = ...

==================================================
No: 89	GFLOPS: 4.25 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696645993.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 512
  for i_c.2 (0,2)
    for k.1 (0,16)
      out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 90	GFLOPS: 10.32 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645994.01)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,4)
          for i.3 (0,2)
            vectorize j.3 (0,8)
              out = ...

==================================================
No: 91	GFLOPS: 8.85 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645994.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,16)
    for i_c.2 (0,4)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 92	GFLOPS: 7.03 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.66, Tstamp:1696645994.56)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,8)
    for i.2 (0,8)
      for j.2 (0,2)
        for k.1 (0,2)
          for i.3 (0,2)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 93	GFLOPS: 4.83 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696645994.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  for k.1 (0,16)
    vectorize j_c.3 (0,2)
      out.local = ...
  vect....****
orize j.1 (0,2)
    out = ...

==================================================
No: 94	GFLOPS: 5.84 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696645995.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,64)
  out.local auto_unroll: 64
  for j_c.1 (0,2)
    for k.0 (0,2)
      for k.1 (0,8)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 95	GFLOPS: 11.31 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696645995.33)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,2)
  for i.2 (0,16)
    for k.1 (0,16)
      vectorize j.3 (0,8)
        out = ...

==================================================
No: 96	GFLOPS: 8.28 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696645995.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for j_c.1 (0,4)
    for k.0 (0,16)
      for i_c.3 (0,8)
        out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 97	GFLOPS: 9.32 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696645997.57)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for j_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,4)
          for k.1 (0,8)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 98	GFLOPS: 2.95 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696645997.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,16)
    for i.2 (0,4)
      for i.3 (0,4)
        out = ...

==================================================
No: 99	GFLOPS: 10.63 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696645998.12)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for j.2 (0,4)
      for k.1 (0,2)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 100	GFLOPS: 7.72 / 46.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696645998.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,16)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,8)
      out = ...

Time elapsed for measurement: 15.58 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((16, 16), "float32"), B: T.Buffer((16, 16), "float32"), out: T.Buffer((16, 16), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        out_local = T.allocate([256], "float32", "local")
        out_local_1 = T.Buffer((256,), data=out_local, scope="local")
        for i_c_outer_outer_inner in range(4):
            cse_var_1: T.int32 = i_c_outer_outer_inner * 64
            out_local_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_local_1[cse_var_1 + 8:cse_var_1 + 8 + 8] = T.Broadcast(T.float32(0), 8)
            out_local_1[cse_var_1 + 16:cse_var_1 + 16 + 8] = T.Broadcast(T.float32(0), 8)
            out_local_1[cse_var_1 + 24:cse_var_1 + 24 + 8] = T.Broadcast(T.float32(0), 8)
            out_local_1[cse_var_1 + 32:cse_var_1 + 32 + 8] = T.Broadcast(T.float32(0), 8)
            out_local_1[cse_var_1 + 40:cse_var_1 + 40 + 8] = T.Broadcast(T.float32(0), 8)
            out_local_1[cse_var_1 + 48:cse_var_1 + 48 + 8] = T.Broadcast(T.float32(0), 8)
            out_local_1[cse_var_1 + 56:cse_var_1 + 56 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer, i_c_outer_inner in T.grid(4, 4):
                cse_var_8: T.int32 = k_outer * 64
                cse_var_7: T.int32 = cse_var_1 + i_c_outer_inner * 16
                cse_var_6: T.int32 = cse_var_7 + 8
                cse_var_5: T.int32 = cse_var_7 + k_outer * 4
                cse_var_4: T.int32 = cse_var_5 + 3
                cse_var_3: T.int32 = cse_var_5 + 2
                cse_var_2: T.int32 = cse_var_5 + 1
                A_1 = T.Buffer((256,), data=A.data)
                B_1 = T.Buffer((256,), data=B.data)
                out_local_1[cse_var_7:cse_var_7 + 8] = out_local_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_5], 8) * B_1[cse_var_8:cse_var_8 + 8]
                out_local_1[cse_var_7:cse_var_7 + 8] = out_local_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_2], 8) * B_1[cse_var_8 + 16:cse_var_8 + 16 + 8]
                out_local_1[cse_var_7:cse_var_7 + 8] = out_local_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_3], 8) * B_1[cse_var_8 + 32:cse_var_8 + 32 + 8]
                out_local_1[cse_var_7:cse_var_7 + 8] = out_local_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_4], 8) * B_1[cse_var_8 + 48:cse_var_8 + 48 + 8]
                out_local_1[cse_var_6:cse_var_6 + 8] = out_local_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_5], 8) * B_1[cse_var_8 + 8:cse_var_8 + 8 + 8]
                out_local_1[cse_var_6:cse_var_6 + 8] = out_local_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_2], 8) * B_1[cse_var_8 + 24:cse_var_8 + 24 + 8]
                out_local_1[cse_var_6:cse_var_6 + 8] = out_local_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_3], 8) * B_1[cse_var_8 + 40:cse_var_8 + 40 + 8]
                out_local_1[cse_var_6:cse_var_6 + 8] = out_local_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_4], 8) * B_1[cse_var_8 + 56:cse_var_8 + 56 + 8]
        for i_inner in range(16):
            cse_var_9: T.int32 = i_inner * 16
            out_1 = T.Buffer((256,), data=out.data)
            out_1[cse_var_9:cse_var_9 + 16] = out_local_1[cse_var_9:cse_var_9 + 16]
Execution time of this operator: max:0.118 us   median:0.115 us   min:0.114 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_local, = s.cache_write([out], "local")
out_local_i_c, out_local_j_c, out_local_k = tuple(out_local.op.axis) + tuple(out_local.op.reduce_axis)
out_local_i_c_o_i, out_local_i_c_i = s[out_local].split(out_local_i_c, factor=1)
out_local_i_c_o_o_i, out_local_i_c_o_i = s[out_local].split(out_local_i_c_o_i, factor=4)
out_local_i_c_o_o_o, out_local_i_c_o_o_i = s[out_local].split(out_local_i_c_o_o_i, factor=4)
out_local_j_c_o_i, out_local_j_c_i = s[out_local].split(out_local_j_c, factor=8)
out_local_j_c_o_o_i, out_local_j_c_o_i = s[out_local].split(out_local_j_c_o_i, factor=2)
out_local_j_c_o_o_o, out_local_j_c_o_o_i = s[out_local].split(out_local_j_c_o_o_i, factor=1)
out_local_k_o, out_local_k_i = s[out_local].split(out_local_k, factor=4)
s[out_local].reorder(out_local_i_c_o_o_o, out_local_j_c_o_o_o, out_local_i_c_o_o_i, out_local_j_c_o_o_i, out_local_k_o, out_local_i_c_o_i, out_local_j_c_o_i, out_local_k_i, out_local_i_c_i, out_local_j_c_i)
out_i_o, out_i_i = s[out].split(out_i, factor=16)
out_j_o, out_j_i = s[out].split(out_j, factor=16)
s[out].reorder(out_i_o, out_j_o, out_i_i, out_j_i)
s[out_local].compute_at(s[out], out_j_o)
out_i_o_j_o_fused = s[out].fuse(out_i_o, out_j_o)
s[out].parallel(out_i_o_j_o_fused)
s[out_local].pragma(out_local_i_c_o_o_o, "auto_unroll_max_step", 16)
s[out_local].pragma(out_local_i_c_o_o_o, "unroll_explicit", True)
s[out_local].vectorize(out_local_j_c_i)
s[out].vectorize(out_j_i)

