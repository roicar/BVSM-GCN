----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1967	fail_ct: 5	Time elapsed: 1.25
GA Iter: 0	Max score: 0.9995	Min score: 0.9356	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9861	#Pop: 128	#M+: 1369	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.83
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [48, 48]
B = PLACEHOLDER [48, 48]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 29.82 / 29.82	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.62, Tstamp:1696646905.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for j_c.1 (0,8)
      for k.0 (0,2)
        for i_c.2 (0,3)
          for j_c.2 (0,3)
            for k.1 (0,24)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,12)
    for j.1 (0,48)
      out = ...

==================================================
No: 2	GFLOPS: 38.93 / 38.93	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696646905.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,24)
  out.local auto_unroll: 64
  for i_c.1 (0,8)
    for j_c.1 (0,3)
      for k.0 (0,24)
        for j_c.2 (0,2)
          for k.1 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 3	GFLOPS: 36.44 / 38.93	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696646905.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,192)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,3)
      for k.1 (0,6)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,12)
    out = ...

==================================================
No: 4	GFLOPS: 44.47 / 44.47	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696646905.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,192)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,3)
      for j_c.2 (0,2)
        for k.1 (0,12)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,3)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 5	GFLOPS: 28.32 / 44.47	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696646905.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for j_c.1 (0,12)
      for k.0 (0,6)
        for k.1 (0,8)
          for i_c.3 (0,3)
            out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 6	GFLOPS: 124.43 / 124.43	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.62, Tstamp:1696646906.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,3)
    for k.0 (0,16)
      for i_c.2 (0,2)
        for j_c.2 (0,6)
          for k.1 (0,3)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,8)
                out.local = ...
  for i.1 (0,12)
    for j.1 (0,48)
      out = ...

==================================================
No: 7	GFLOPS: 135.90 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696646906.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,18)
  out.local auto_unroll: 64
  for j_c.1 (0,2)
    for k.0 (0,8)
      for j_c.2 (0,8)
        for k.1 (0,6)
          for i_c.3 (0,8)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 8	GFLOPS: 32.37 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.00, Tstamp:1696646906.66)
==================================================
Placeholder: A, B
out auto_unroll: 512
for i.1 (0,8)
  for j.1 (0,12)
    for k.0 (0,3)
      for i.2 (0,6)
        for k.1 (0,16)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 9	GFLOPS: 11.43 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696646906.80)
===========================................****************
=======================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,48)
    for i.2 (0,2)
      for j.2 (0,48)
        for i.3 (0,12)
          out = ...

==================================================
No: 10	GFLOPS: 112.17 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.02, Tstamp:1696646906.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,36)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for k.1 (0,12)
      for i_c.3 (0,8)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 11	GFLOPS: 43.15 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696646907.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,36)
  out.local auto_unroll: 16
  for j_c.1 (0,8)
    for k.0 (0,16)
      for i_c.2 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,3)
            out.local = ...
  for i.1 (0,4)
    for j.1 (0,16)
      out = ...

==================================================
No: 12	GFLOPS: 26.02 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696646907.40)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for j.2 (0,6)
    for k.1 (0,48)
      for i.3 (0,12)
        out = ...

==================================================
No: 13	GFLOPS: 23.96 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696646907.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,48)
    for j_c.2 (0,6)
      for k.1 (0,48)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,48)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 14	GFLOPS: 92.74 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696646907.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for j_c.1 (0,8)
    for k.0 (0,6)
      for i_c.2 (0,3)
        for j_c.2 (0,6)
          for k.1 (0,8)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,48)
      out = ...

==================================================
No: 15	GFLOPS: 36.40 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696646907.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,2)
  for j.1 (0,4)
    out.local auto_unroll: 512
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,48)
          for i_c.3 (0,12)
            vectorize j_c.3 (0,3)
              out.local = ...
    for i.2 (0,48)
      vectorize j.2 (0,6)
        out = ...

==================================================
No: 16	GFLOPS: 56.79 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696646908.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for k.0 (0,3)
    for i_c.2 (0,2)
      for j_c.2 (0,16)
        for k.1 (0,16)
          for i_c.3 (0,6)
            vectorize j_c.3 (0,3)
              out.local = ...
  for i.1 (0,12)
    for j.1 (0,48)
      out = ...

==================================================
No: 17	GFLOPS: 48.05 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.84, Tstamp:1696646911.02)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,144)
  for j.2 (0,4)
    for k.1 (0,48)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 18	GFLOPS: 31.14 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.93, Tstamp:1696646911.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,6)
    for i_c.2 (0,2)
      for j_c.2 (0,16)
        for k.1 (0,48)
          vectorize j_c.3 (0,3)
            out.local = ...
  for i.1 (0,12)
    for j.1 (0,48)
      out = ...

==================================================
No: 19	GFLOPS: 81.10 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.74, Tstamp:1696646911.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for i_c.2 (0,8)
      for j_c.2 (0,4)
        for k.1 (0,3)
          for i_c.3 (0,3)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 20	GFLOPS: 33.68 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696646911.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,96)
  out.local auto_unroll: 16
  for j_c.1 (0,3)
    for k.0 (0,12)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,4)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,4)
    for j.1 (0,6)
      out = ...

==================================================
No: 21	GFLOPS: 66.98 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696646911.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for k.0 (0,8)
    for i_c.2 (0,8)
      for j_c.2 (0,3)
        for k.1 (0,6)
          for i_c.3 (0,6)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,48)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 22	GFLOPS: 80.09 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696646912.26)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for j_c.1 (0,3)
    for i_c.2 (0,6)
      for k.1 (0,48)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 23	GFLOPS: 32.10 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696646912.55)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,2)
    for i.2 (0,48)
      for k.1 (0,24)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 24	GFLOPS: 32.21 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696646912.68)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,576)
  for k.0 (0,48)
    for i.2 (0,4)
      out = ...

==================================================
No: 25	GFLOPS: 18.66 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696646912.81)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i_c.2 (0,12)
      for j_c.2 (0,2)
        for k.1 (0,24)
          for j_c.3 (0,24)
            out.local = ...
  for i.2 (0,12)
    for j.2 (0,48)
      out = ...

==================================================
No: 26	GFLOPS: 56.57 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696646913.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,24)
  out.local auto_unroll: 64
  for j_c.1 (0,12)
    for k.0 (0,16)
      for i_c.2 (0,2)
        for k.1 (0,3)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,4)
    for j.1 (0,24)
      out = ...

==================================================
No: 27	GFLOPS: 27.42 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost................****************
:0.21, Tstamp:1696646913.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,192)
  for j.1 (0,3)
    out.local auto_unroll: 16
    for k.0 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,6)
          for i_c.3 (0,2)
            out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 28	GFLOPS: 20.62 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696646913.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,192)
  for j.1 (0,6)
    out.local auto_unroll: 16
    for k.0 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,6)
          out.local = ...
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 29	GFLOPS: 36.95 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696646913.75)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,16)
    for i.2 (0,2)
      for k.1 (0,3)
        for i.3 (0,8)
          vectorize j.3 (0,12)
            out = ...

==================================================
No: 30	GFLOPS: 19.54 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696646914.04)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,6)
  for k.0 (0,6)
    for i.2 (0,4)
      for j.2 (0,2)
        for k.1 (0,8)
          for i.3 (0,12)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 31	GFLOPS: 88.53 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.53, Tstamp:1696646914.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for k.0 (0,48)
    for i_c.2 (0,24)
      for j_c.2 (0,8)
        out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 32	GFLOPS: 84.20 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696646914.51)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,8)
    for i.2 (0,12)
      for j.2 (0,12)
        for k.1 (0,6)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 33	GFLOPS: 27.16 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.95, Tstamp:1696646918.37)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,288)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,24)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 34	GFLOPS: 49.14 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696646918.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,18)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for i_c.2 (0,2)
          for j_c.2 (0,2)
            for k.1 (0,24)
              for i_c.3 (0,2)
                vectorize j_c.3 (0,4)
                  out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 35	GFLOPS: 19.53 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696646918.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,96)
  for j.1 (0,12)
    out.local auto_unroll: 512
    for k.0 (0,12)
      for k.1 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 36	GFLOPS: 24.30 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696646919.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,3)
  out.local auto_unroll: 64
  for j_c.2 (0,16)
    for k.1 (0,48)
      for i_c.3 (0,48)
        out.local = ...
  for i.1 (0,48)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 37	GFLOPS: 7.74 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.88, Tstamp:1696646919.17)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,6)
    for i.2 (0,2)
      for j.2 (0,12)
        for k.1 (0,8)
          for i.3 (0,24)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 38	GFLOPS: 62.25 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696646919.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,24)
    for k.0 (0,24)
      for j_c.2 (0,24)
        for k.1 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,48)
    for j.1 (0,24)
      out = ...

==================================================
No: 39	GFLOPS: 88.11 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696646919.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,18)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,48)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 40	GFLOPS: 5.26 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696646919.70)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,48)
    for i.2 (0,8)
      for j.2 (0,3)
        for i.3 (0,2)
          out = ...

==================================================
No: 41	GFLOPS: 91.35 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696646919.89)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,6)
  out.local auto_unroll: 64
  for j_c.1 (0,4)
    for k.0 (0,12)
      for i_c.2 (0,8)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,6)
              out.local = ...
  for i.1 (0,16)
    for j.1 (0,24)
      out = ...

==================================================
No: 42	GFLOPS: 122.92 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696646920.24)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,8)
    for i.2 (0,3)
      for k.1 (0,6)
        for i.3 (0,2)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 43	GFLOPS: 21.04 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696646920.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 16
  for i_c.2 (0,12)
    for j_c.2 (0,4)
      for k.1 (0,48)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 44	GFLOPS: 67.72 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696646920.66)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,128)
  for k.0 (0,3)
    for k.1 (0,16)
      for i.3 (0,6)
        vectorize j.3 (0,3)
          out = ...

==================================================
No: 45	GFLOPS: 117.10 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696646................****************
920.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,6)
    for i_c.2 (0,2)
      for j_c.2 (0,3)
        for k.1 (0,8)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,16)
              out.local = ...
  for i.2 (0,4)
    for j.2 (0,48)
      out = ...

==================================================
No: 46	GFLOPS: 31.26 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696646921.12)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,12)
    for i.2 (0,4)
      for k.1 (0,4)
        for i.3 (0,6)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 47	GFLOPS: 82.31 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696646921.43)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,12)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,6)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 48	GFLOPS: 36.79 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696646921.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,72)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,6)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 49	GFLOPS: 41.91 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.56, Tstamp:1696646924.42)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,48)
    for i.2 (0,48)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 50	GFLOPS: 71.85 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.83, Tstamp:1696646924.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,8)
      for j_c.2 (0,3)
        for k.1 (0,6)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 51	GFLOPS: 95.21 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696646924.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 64
  for j_c.1 (0,3)
    for k.0 (0,24)
      for i_c.2 (0,6)
        for j_c.2 (0,4)
          for k.1 (0,2)
            out.local = ...
  for i.1 (0,6)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 52	GFLOPS: 44.51 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696646925.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  out.local auto_unroll: 64
  for i_c.1 (0,3)
    for j_c.1 (0,6)
      for k.0 (0,6)
        for k.1 (0,8)
          out.local = ...
  for i.1 (0,3)
    vectorize j.1 (0,6)
      out = ...

==================================================
No: 53	GFLOPS: 73.35 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696646925.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,48)
    for i_c.2 (0,16)
      for j_c.2 (0,12)
        for i_c.3 (0,3)
          out.local = ...
  for i.2 (0,48)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 54	GFLOPS: 15.86 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696646925.82)
==================================================
Placeholder: A, B
for j.1 (0,24)
  out.local auto_unroll: 16
  for k.0 (0,48)
    for i_c.2 (0,3)
      for i_c.3 (0,16)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,48)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 55	GFLOPS: 55.39 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696646925.95)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i.2 (0,2)
      for j.2 (0,4)
        for k.1 (0,24)
          for i.3 (0,12)
            vectorize j.3 (0,6)
              out = ...

==================================================
No: 56	GFLOPS: 13.55 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.18, Tstamp:1696646926.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2304)
  for k.0 (0,48)
    out = ...

==================================================
No: 57	GFLOPS: 37.95 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696646926.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for i_c.2 (0,24)
      for j_c.2 (0,3)
        for k.1 (0,48)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,48)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 58	GFLOPS: 40.83 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696646926.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for j_c.2 (0,12)
      for k.1 (0,24)
        for i_c.3 (0,8)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 59	GFLOPS: 46.64 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696646926.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  for k.0 (0,48)
    for i_c.2 (0,8)
      vectorize j_c.3 (0,3)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 60	GFLOPS: 42.31 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696646927.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,6)
  out.local auto_unroll: 512
  for k.0 (0,6)
    for i_c.2 (0,48)
      for j_c.2 (0,4)
        for k.1 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,48)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 61	GFLOPS: 20.38 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696646927.16)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,12)
  for j.1 (0,6)
    out.local auto_unroll: 16
    for k.0 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,6)
          for i_c.3 (0,16)
            out.local = ...
    for i.2 (0,16)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 62	GFLOPS: 42.85 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.69, Tstamp:1696646927.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for i_c.1 (0,12)
    for j_c.1 (0,3)
      for k.0 (0,24)
        for k.1 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 63	GFLOPS: 75.24 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696646927.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,8)
    for i.2 (0,12)
      for j.2 (0,4)
        for k.1 (0,6)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 64	GFLOPS: 36.97 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696646927.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,72)
  out.local auto_unroll: 64
  for i_c.2 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,48)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,8)
      out = ...

Time elapsed for measurement: 26.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.15 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1962	fail_ct: 2	Time elapsed: 1.29
GA Iter: 0	Max score: 0.9997	Min score: 0.9461	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9879	#Pop: 128	#M+: 1372	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.78
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 125.96 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696646938.41)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,6)
    for j.2 (0,24)
      for k.1 (0,8)
        for i.3 (0,3)
          out = ...

==================================================
No: 66	GFLOPS: 4.67 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696646938.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,16)
    for i.2 (0,24)
      for j.2 (0,2)
        for k.1 (0,3)
          for i.3 (0,2)
            vectorize j.3 (0,6)
              out = ...

==================================================
No: 67	GFLOPS: 56.30 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696646938.68)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,4)
    for i.2 (0,8)
      for j.2 (0,4)
        for k.1 (0,12)
          vectorize j.3 (0,3)
            out = ...

==================================================
No: 68	GFLOPS: 116.79 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696646939.02)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,48)
    for j.2 (0,4)
      for i.3 (0,3)
        vectorize j.3 (0,6)
          out = ...

==================================================
No: 69	GFLOPS: 117.57 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.56, Tstamp:1696646939.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for k.0 (0,48)
    for i_c.2 (0,2)
      for i_c.3 (0,2)
        for j_c.3 (0,48)
          out.local = ...
  for i.2 (0,4)
    for j.2 (0,48)
      out = ...

==================================================
No: 70	GFLOPS: 6.44 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696646939.34)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,16)
    for i.2 (0,48)
      for j.2 (0,3)
        for k.1 (0,3)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 71	GFLOPS: 34.31 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696646939.48)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,2)
    for i.2 (0,3)
      for j.2 (0,4)
        for k.1 (0,24)
          for i.3 (0,8)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 72	GFLOPS: 61.00 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696646939.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,96)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,24)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,3)
              out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 73	GFLOPS: 24.43 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696646939.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,48)
  for j.1 (0,4)
    for k.0 (0,8)
      for j_c.2 (0,3)
        for k.1 (0,6)
          for i_c.3 (0,4)
            out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,3)
        out = ...

==================================================
No: 74	GFLOPS: 75.49 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:169................****************
6646940.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,48)
  out.local auto_unroll: 512
  for j_c.1 (0,4)
    for k.0 (0,6)
      for k.1 (0,8)
        vectorize j_c.3 (0,12)
          out.local = ...
  for j.1 (0,48)
    out = ...

==================================================
No: 75	GFLOPS: 64.09 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.25, Tstamp:1696646940.33)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,96)
  for k.1 (0,48)
    for i.3 (0,8)
      vectorize j.3 (0,3)
        out = ...

==================================================
No: 76	GFLOPS: 60.69 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696646940.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,4)
      for k.0 (0,24)
        for i_c.2 (0,6)
          for j_c.2 (0,6)
            for k.1 (0,2)
              for i_c.3 (0,2)
                out.local = ...
  for i.1 (0,24)
    for j.1 (0,24)
      out = ...

==================================================
No: 77	GFLOPS: 104.82 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696646940.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 64
  for i_c.1 (0,3)
    for k.0 (0,12)
      for j_c.2 (0,3)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,6)
    for j.1 (0,12)
      out = ...

==================================================
No: 78	GFLOPS: 11.14 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696646940.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,1152)
  for k.1 (0,48)
    vectorize j_c.3 (0,2)
      out.local = ...
  vectorize j.2 (0,2)
    out = ...

==================================================
No: 79	GFLOPS: 97.41 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696646941.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  for k.0 (0,3)
    for i_c.2 (0,4)
      for k.1 (0,16)
        for i_c.3 (0,12)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,48)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 80	GFLOPS: 51.16 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696646941.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,12)
        for k.1 (0,12)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 81	GFLOPS: 40.83 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696646944.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 16
  for k.0 (0,48)
    for i_c.2 (0,3)
      for j_c.2 (0,6)
        for i_c.3 (0,4)
          out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,6)
      out = ...

==================================================
No: 82	GFLOPS: 98.23 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696646944.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  for i_c.1 (0,3)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for i_c.2 (0,2)
          for k.1 (0,6)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,6)
                out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 83	GFLOPS: 41.98 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696646944.81)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,3)
      for k.1 (0,24)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 84	GFLOPS: 42.57 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696646944.94)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,64)
  for j.2 (0,6)
    for k.1 (0,48)
      for i.3 (0,6)
        out = ...

==================================================
No: 85	GFLOPS: 22.17 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696646945.07)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for i.2 (0,6)
      for j.2 (0,2)
        for k.1 (0,12)
          for i.3 (0,2)
            vectorize j.3 (0,3)
              out = ...

==================================================
No: 86	GFLOPS: 85.41 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696646945.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,6)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for k.0 (0,24)
      for i_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,3)
            vectorize j_c.3 (0,16)
              out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 87	GFLOPS: 22.42 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696646945.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,96)
  for j.1 (0,6)
    for k.0 (0,12)
      for i.2 (0,2)
        for k.1 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 88	GFLOPS: 86.49 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696646945.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,72)
  for i.1 (0,2)
    out.local auto_unroll: 512
    for k.0 (0,24)
      for j_c.2 (0,8)
        for k.1 (0,2)
          for i_c.3 (0,2)
            out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,8)
        out = ...

==================================================
No: 89	GFLOPS: 135.74 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.72, Tstamp:1696646945.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for i_c.2 (0,3)
    for k.1 (0,48)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 90	GFLOPS: 72.02 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696646946.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,48)
    for i_c.2 (0,8)
      for j_c.2 (0,6)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 91	GFLOPS: 105.03 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696646946.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,6)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for j_c.1 (0,6)
      for k.0 (0,4)
        for i_c.2 (0,4)
          for k.1 (0,12)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,48)
      out = ...

==================================================
No: 92	GFLO....****
PS: 53.73 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.09, Tstamp:1696646946.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for j_c.1 (0,2)
    for j_c.2 (0,6)
      for k.1 (0,48)
        for i_c.3 (0,6)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,6)
    for j.1 (0,24)
      out = ...

==================================================
No: 93	GFLOPS: 16.93 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696646946.81)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,288)
  out.local auto_unroll: 16
  for i_c.2 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,48)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 94	GFLOPS: 23.82 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696646946.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,96)
  for j.1 (0,4)
    out.local auto_unroll: 16
    for j_c.2 (0,3)
      for k.1 (0,48)
        vectorize j_c.3 (0,2)
          out.local = ...
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 95	GFLOPS: 7.55 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696646947.07)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,8)
    for i.2 (0,12)
      for j.2 (0,2)
        for k.1 (0,6)
          for i.3 (0,2)
            out = ...

==================================================
No: 96	GFLOPS: 57.14 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.61, Tstamp:1696646947.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,6)
    for j_c.1 (0,4)
      for k.0 (0,2)
        for i_c.2 (0,4)
          for k.1 (0,24)
            for j_c.3 (0,12)
              out.local = ...
  for i.1 (0,24)
    for j.1 (0,48)
      out = ...

==================================================
No: 97	GFLOPS: 24.08 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696646949.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 16
  for k.1 (0,48)
    for i_c.3 (0,24)
      out.local = ...
  for i.2 (0,24)
    out = ...

==================================================
No: 98	GFLOPS: 45.25 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696646949.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,3)
    for i_c.2 (0,12)
      for j_c.2 (0,12)
        for k.1 (0,16)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,24)
      out = ...

==================================================
No: 99	GFLOPS: 49.86 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696646949.52)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,48)
    for j.2 (0,6)
      for i.3 (0,6)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 100	GFLOPS: 21.64 / 135.90	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696646949.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,192)
  for j_c.2 (0,6)
    for k.1 (0,48)
      vectorize j_c.3 (0,2)
        out.local = ...
  vectorize j.2 (0,12)
    out = ...

Time elapsed for measurement: 14.40 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((48, 48), "float32"), B: T.Buffer((48, 48), "float32"), out: T.Buffer((48, 48), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(24):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused // 6 * 576 + i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused % 6 * 8
            out_1 = T.Buffer((2304,), data=out.data)
            out_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 48:cse_var_1 + 48 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 96:cse_var_1 + 96 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 144:cse_var_1 + 144 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 192:cse_var_1 + 192 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 240:cse_var_1 + 240 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 288:cse_var_1 + 288 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 336:cse_var_1 + 336 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 384:cse_var_1 + 384 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 432:cse_var_1 + 432 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 480:cse_var_1 + 480 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 528:cse_var_1 + 528 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer in range(16):
                cse_var_16: T.int32 = cse_var_1 + 96
                cse_var_15: T.int32 = cse_var_1 + 528
                cse_var_14: T.int32 = cse_var_1 + 480
                cse_var_13: T.int32 = cse_var_1 + 48
                cse_var_12: T.int32 = cse_var_1 + 432
                cse_var_11: T.int32 = cse_var_1 + 384
                cse_var_10: T.int32 = cse_var_1 + 336
                cse_var_9: T.int32 = cse_var_1 + 288
                cse_var_8: T.int32 = cse_var_1 + 240
                cse_var_7: T.int32 = cse_var_1 + 192
                cse_var_6: T.int32 = cse_var_1 + 144
                cse_var_5: T.int32 = k_outer * 144 + i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused % 6 * 8
                cse_var_4: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused // 6 * 576 + k_outer * 3
                cse_var_3: T.int32 = cse_var_5 + 96
                cse_var_2: T.int32 = cse_var_5 + 48
                A_1 = T.Buffer((2304,), data=A.data)
                B_1 = T.Buffer((2304,), data=B.data)
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_4], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_4 + 48], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_16:cse_var_16 + 8] = out_1[cse_var_16:cse_var_16 + 8] + T.Broadcast(A_1[cse_var_4 + 96], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_4 + 1], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_4 + 49], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_16:cse_var_16 + 8] = out_1[cse_var_16:cse_var_16 + 8] + T.Broadcast(A_1[cse_var_4 + 97], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_4 + 2], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_4 + 50], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_16:cse_var_16 + 8] = out_1[cse_var_16:cse_var_16 + 8] + T.Broadcast(A_1[cse_var_4 + 98], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_4 + 144], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_4 + 192], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_8:cse_var_8 + 8] = out_1[cse_var_8:cse_var_8 + 8] + T.Broadcast(A_1[cse_var_4 + 240], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_4 + 145], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_4 + 193], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_8:cse_var_8 + 8] = out_1[cse_var_8:cse_var_8 + 8] + T.Broadcast(A_1[cse_var_4 + 241], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_4 + 146], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_4 + 194], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_8:cse_var_8 + 8] = out_1[cse_var_8:cse_var_8 + 8] + T.Broadcast(A_1[cse_var_4 + 242], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_9:cse_var_9 + 8] = out_1[cse_var_9:cse_var_9 + 8] + T.Broadcast(A_1[cse_var_4 + 288], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_10:cse_var_10 + 8] = out_1[cse_var_10:cse_var_10 + 8] + T.Broadcast(A_1[cse_var_4 + 336], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_4 + 384], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_9:cse_var_9 + 8] = out_1[cse_var_9:cse_var_9 + 8] + T.Broadcast(A_1[cse_var_4 + 289], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_10:cse_var_10 + 8] = out_1[cse_var_10:cse_var_10 + 8] + T.Broadcast(A_1[cse_var_4 + 337], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_4 + 385], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_9:cse_var_9 + 8] = out_1[cse_var_9:cse_var_9 + 8] + T.Broadcast(A_1[cse_var_4 + 290], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_10:cse_var_10 + 8] = out_1[cse_var_10:cse_var_10 + 8] + T.Broadcast(A_1[cse_var_4 + 338], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_4 + 386], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_4 + 432], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_4 + 480], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_15:cse_var_15 + 8] = out_1[cse_var_15:cse_var_15 + 8] + T.Broadcast(A_1[cse_var_4 + 528], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_4 + 433], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_4 + 481], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_15:cse_var_15 + 8] = out_1[cse_var_15:cse_var_15 + 8] + T.Broadcast(A_1[cse_var_4 + 529], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_4 + 434], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_4 + 482], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_15:cse_var_15 + 8] = out_1[cse_var_15:cse_var_15 + 8] + T.Broadcast(A_1[cse_var_4 + 530], 8) * B_1[cse_var_3:cse_var_3 + 8]
Execution time of this operator: max:1.316 us   median:1.222 us   min:1.163 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=3)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=4)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=1)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=1)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=3)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 512)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

