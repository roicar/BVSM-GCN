----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1948	fail_ct: 11	Time elapsed: 1.17
GA Iter: 0	Max score: 0.9996	Min score: 0.9344	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9870	#Pop: 128	#M+: 1373	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.65
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [48, 48]
B = PLACEHOLDER [48, 48]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 70.65 / 70.65	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696647017.42)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,6)
  for i.2 (0,8)
    for j.2 (0,4)
      for k.1 (0,48)
        for i.3 (0,2)
          vectorize j.3 (0,6)
            out = ...

==================================================
No: 2	GFLOPS: 16.73 / 70.65	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696647017.57)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,6)
  for k.0 (0,12)
    for i.2 (0,48)
      for j.2 (0,2)
        for k.1 (0,4)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 3	GFLOPS: 20.21 / 70.65	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696647017.86)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,576)
  out.local auto_unroll: 16
  for k.0 (0,48)
    for i_c.2 (0,2)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,4)
    out = ...

==================================================
No: 4	GFLOPS: 12.30 / 70.65	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696647018.00)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,4)
    for i.2 (0,12)
      for k.1 (0,12)
        for i.3 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 5	GFLOPS: 32.35 / 70.65	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.24, Tstamp:1696647018.13)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@ (0,72)
  for j.1 (0,4)
    for k.0 (0,3)
      for j.2 (0,2)
        for k.1 (0,16)
          for i.3 (0,4)
            out = ...

==================================================
No: 6	GFLOPS: 56.86 / 70.65	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696647018.41)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  for j_c.1 (0,4)
    for k.0 (0,6)
      for i_c.2 (0,3)
        for j_c.2 (0,3)
          for k.1 (0,8)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 7	GFLOPS: 166.41 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696647018.58)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,36)
  for k.0 (0,24)
    for j.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,4)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 8	GFLOPS: 67.93 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696647018.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,48)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,16)
      for i_c.2 (0,4)
        for j_c.2 (0,6)
          for k.1 (0,3)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 9	GFLOPS: 151.39 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696647019.02)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,3)
        for k.1 (0,12)
          for i.3 (0,6)
            vectorize j.3 (0,8)
              out = ...

==================================================
No: 10	GFLOPS: 48.84 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696647019.27)
=========================................****************
=========================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,144)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,4)
      for k.1 (0,6)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 11	GFLOPS: 13.76 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696647019.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,12)
    for i.2 (0,3)
      for k.1 (0,4)
        for j.3 (0,24)
          out = ...

==================================================
No: 12	GFLOPS: 27.10 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696647019.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,96)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,16)
      for i_c.2 (0,4)
        for k.1 (0,3)
          for i_c.3 (0,3)
            out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 13	GFLOPS: 32.74 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696647019.81)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for i_c.1 (0,8)
    for k.0 (0,24)
      for k.1 (0,2)
        for i_c.3 (0,3)
          vectorize j_c.3 (0,12)
            out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 14	GFLOPS: 31.99 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647020.10)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,384)
  for k.0 (0,16)
    for i.2 (0,2)
      for j.2 (0,3)
        for k.1 (0,3)
          out = ...

==================================================
No: 15	GFLOPS: 89.67 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696647020.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for i_c.1 (0,4)
    for k.0 (0,6)
      for j_c.2 (0,4)
        for k.1 (0,8)
          for i_c.3 (0,3)
            vectorize j_c.3 (0,6)
              out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,24)
      out = ...

==================================================
No: 16	GFLOPS: 50.88 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696647020.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,16)
    for i_c.2 (0,6)
      for k.1 (0,3)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,24)
            out.local = ...
  for i.2 (0,48)
    vectorize j.2 (0,24)
      out = ...

==================================================
No: 17	GFLOPS: 75.27 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696647023.67)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,24)
    for i.2 (0,6)
      for j.2 (0,4)
        for k.1 (0,2)
          vectorize j.3 (0,3)
            out = ...

==================================================
No: 18	GFLOPS: 91.18 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696647023.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,36)
  out.local auto_unroll: 64
  for j_c.2 (0,4)
    for k.1 (0,48)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 19	GFLOPS: 53.47 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696647024.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 512
  for k.0 (0,24)
    for i_c.2 (0,6)
      for j_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 20	GFLOPS: 48.63 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647024.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,12)
    for i.2 (0,3)
      for j.2 (0,4)
        for k.1 (0,4)
          for i.3 (0,2)
            vectorize j.3 (0,12)
              out = ...

==================================================
No: 21	GFLOPS: 24.83 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.62, Tstamp:1696647024.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,48)
        for k.1 (0,24)
          for i_c.3 (0,3)
            out.local = ...
  for i.2 (0,6)
    for j.2 (0,48)
      out = ...

==================================================
No: 22	GFLOPS: 35.66 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.72, Tstamp:1696647024.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,24)
      for k.0 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,12)
            out.local = ...
  for i.1 (0,4)
    for j.1 (0,48)
      out = ...

==================================================
No: 23	GFLOPS: 31.88 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696647025.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,12)
      for i_c.2 (0,12)
        for k.1 (0,4)
          vectorize j_c.3 (0,24)
            out.local = ...
  for i.1 (0,12)
    for j.1 (0,48)
      out = ...

==================================================
No: 24	GFLOPS: 52.71 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696647025.51)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,288)
  for k.0 (0,4)
    for k.1 (0,12)
      for i.3 (0,4)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 25	GFLOPS: 43.51 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.12, Tstamp:1696647025.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 512
  for j_c.1 (0,6)
    for i_c.2 (0,2)
      for k.1 (0,48)
        for i_c.3 (0,3)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,6)
    for j.1 (0,12)
      out = ...

==================================================
No: 26	GFLOPS: 69.18 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696647025.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  for k.0 (0,6)
    for i_c.2 (0,48)
      for j_c.2 (0,2)
        for k.1 (0,8)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,48)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 27	GFLOPS: 42.83 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.60, Tstamp:1696647026.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for k.0 (0,12)
      for i_c.2 (0,3)
        for j_c.2 (0,8)
          for k.1 (0,4)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,6)
                out.local = ...
  for i.1 (0,24)
    for j.1 (0,48)
      out = ...

==================================================
No: 28	GFLOPS: 25.32................****************
 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696647026.20)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i.2 (0,8)
    for j.2 (0,4)
      for k.1 (0,48)
        for i.3 (0,6)
          vectorize j.3 (0,3)
            out = ...

==================================================
No: 29	GFLOPS: 32.44 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696647026.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,6)
    for i_c.2 (0,3)
      for j_c.2 (0,12)
        for k.1 (0,8)
          for i_c.3 (0,8)
            out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 30	GFLOPS: 10.34 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696647026.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,1152)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,6)
        out.local = ...
  vectorize j.2 (0,2)
    out = ...

==================================================
No: 31	GFLOPS: 70.92 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696647026.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  for k.0 (0,4)
    for k.1 (0,12)
      for i.3 (0,3)
        vectorize j.3 (0,8)
          out = ...

==================================================
No: 32	GFLOPS: 51.70 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696647027.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,48)
    for i.2 (0,12)
      for j.2 (0,2)
        vectorize j.3 (0,6)
          out = ...

==================================================
No: 33	GFLOPS: 22.40 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647030.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for i.2 (0,24)
    for k.1 (0,48)
      vectorize j.3 (0,3)
        out = ...

==================================================
No: 34	GFLOPS: 110.09 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647030.43)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,24)
    for j.2 (0,6)
      for k.1 (0,2)
        for i.3 (0,6)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 35	GFLOPS: 37.98 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696647030.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,192)
  out.local auto_unroll: 512
  for k.0 (0,6)
    for j_c.2 (0,3)
      for k.1 (0,8)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 36	GFLOPS: 35.24 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696647030.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,2)
    for k.0 (0,12)
      for i_c.2 (0,6)
        for j_c.2 (0,12)
          for k.1 (0,4)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,48)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 37	GFLOPS: 54.17 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696647031.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 512
  for k.0 (0,48)
    for j_c.2 (0,24)
      vectorize j_c.3 (0,2)
        out.local = ...
  for j.2 (0,48)
    out = ...

==================================================
No: 38	GFLOPS: 19.66 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696647031.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  out.local auto_unroll: 64
  for i_c.1 (0,12)
    for j_c.1 (0,8)
      for k.0 (0,3)
        for k.1 (0,16)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,24)
    for j.1 (0,8)
      out = ...

==================================================
No: 39	GFLOPS: 100.46 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.84, Tstamp:1696647031.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,24)
      for k.0 (0,48)
        for i_c.2 (0,3)
          out.local = ...
  for i.1 (0,12)
    for j.1 (0,24)
      out = ...

==================================================
No: 40	GFLOPS: 133.53 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696647031.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,3)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for j_c.1 (0,3)
      for i_c.2 (0,2)
        for k.1 (0,48)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,16)
              out.local = ...
  for i.1 (0,16)
    for j.1 (0,48)
      out = ...

==================================================
No: 41	GFLOPS: 76.80 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696647032.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,36)
  for i_c.1 (0,4)
    for k.0 (0,4)
      for j_c.2 (0,8)
        for k.1 (0,12)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 42	GFLOPS: 71.76 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696647032.28)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,288)
  for k.0 (0,24)
    for j.2 (0,8)
      for k.1 (0,2)
        out = ...

==================================================
No: 43	GFLOPS: 89.36 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.07, Tstamp:1696647032.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,8)
      for k.1 (0,6)
        for j_c.3 (0,48)
          out.local = ...
  for i.2 (0,8)
    for j.2 (0,48)
      out = ...

==================================================
No: 44	GFLOPS: 45.38 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696647032.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,9)
  out.local auto_unroll: 16
  for i_c.1 (0,8)
    for j_c.1 (0,4)
      for k.0 (0,4)
        for i_c.2 (0,2)
          for j_c.2 (0,2)
            for k.1 (0,12)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 45	GFLOPS: 38.01 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696647032.97)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,384)
  for k.0 (0,6)
    for j.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,3)
          out = ...

==================================================
No: 46	GFLOPS: 7.98 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696647033.25)
==================================================
Placeholder: A, B
out auto_unroll: 16
for k.0 (0,12)
  for i.2 (0,2)
    for j.2 (0,16)
      for k.1 (0,4)
        for i.3 (0,24)
          vectorize j.3 (0,3)
            out = ...

===========................****************
=======================================
No: 47	GFLOPS: 32.53 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696647033.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,72)
  for i.1 (0,2)
    for k.0 (0,3)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,16)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,2)
                out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,4)
        out = ...

==================================================
No: 48	GFLOPS: 49.81 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647033.67)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,3)
  for k.0 (0,8)
    for i.2 (0,16)
      for j.2 (0,24)
        for k.1 (0,6)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 49	GFLOPS: 65.80 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647036.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,9)
  for i_c.1 (0,16)
    for j_c.1 (0,2)
      for k.0 (0,48)
        for j_c.2 (0,8)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 50	GFLOPS: 28.93 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696647036.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,8)
    for k.0 (0,6)
      for i_c.2 (0,3)
        for j_c.2 (0,16)
          for k.1 (0,8)
            vectorize j_c.3 (0,3)
              out.local = ...
  for i.1 (0,24)
    for j.1 (0,48)
      out = ...

==================================================
No: 51	GFLOPS: 17.75 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696647036.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,24)
          for i_c.3 (0,3)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 52	GFLOPS: 109.17 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.10, Tstamp:1696647037.28)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,8)
    for i.2 (0,6)
      for k.1 (0,6)
        vectorize j.3 (0,6)
          out = ...

==================================================
No: 53	GFLOPS: 27.91 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696647037.57)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  for k.0 (0,6)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,8)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,12)
              out.local = ...
  for i.2 (0,8)
    for j.2 (0,48)
      out = ...

==================================================
No: 54	GFLOPS: 74.04 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696647037.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for j_c.1 (0,8)
    for k.0 (0,2)
      for j_c.2 (0,3)
        for k.1 (0,24)
          for i_c.3 (0,12)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,12)
    for j.1 (0,48)
      out = ...

==================================================
No: 55	GFLOPS: 24.74 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696647037.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,48)
  out.local auto_unroll: 16
  for i_c.1 (0,8)
    for k.0 (0,8)
      for k.1 (0,6)
        for i_c.3 (0,6)
          out.local = ...
  for i.1 (0,48)
    out = ...

==================================================
No: 56	GFLOPS: 27.43 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696647038.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 512
  for j_c.2 (0,6)
    for k.1 (0,48)
      for i_c.3 (0,16)
        out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 57	GFLOPS: 18.93 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696647038.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 16
  for k.0 (0,48)
    for i_c.2 (0,8)
      vectorize j_c.3 (0,12)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 58	GFLOPS: 72.55 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696647038.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.2 (0,6)
      for j_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 59	GFLOPS: 41.76 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647038.66)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for j_c.1 (0,12)
  for k.0 (0,4)
    for i_c.2 (0,24)
      for k.1 (0,12)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
for i.1 (0,48)
  vectorize j.1 (0,48)
    out = ...

==================================================
No: 60	GFLOPS: 44.38 / 166.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696647038.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for j_c.1 (0,8)
    for k.0 (0,6)
      for i_c.2 (0,3)
        for j_c.2 (0,3)
          for k.1 (0,8)
            for i_c.3 (0,4)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,12)
    for j.1 (0,48)
      out = ...

==================================================
No: 61	GFLOPS: 194.15 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696647039.11)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,36)
  for k.0 (0,4)
    for j.2 (0,16)
      for k.1 (0,12)
        for i.3 (0,4)
          out = ...

==================================================
No: 62	GFLOPS: 25.89 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696647039.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,288)
  for k.0 (0,48)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 63	GFLOPS: 3.72 / 194.15	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.40, Tstamp:1696647039.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,6)
        for k.1 (0,12)
          for i.3 (0,12)
            out = ...

==================================================
No: 64	GFLOPS: 41.58 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647039.94)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,96)
  for i.1 (0,2)
    for k.0 (0,16)
      for i.2 (0,3)
        for j.2 (0,2)
          for k.1 (0,3)
            for i.3 (0,2)
              out = ...

Time elapsed for measurement: 26.77 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.15 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1954	fail_ct: 10	Time elapsed: 1.28
GA Iter: 0	Max score: 0.9995	Min score: 0.9343	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9872	#Pop: 128	#M+: 1382	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.65
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 64.45 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696647049.68)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,48)
    for i.2 (0,6)
      for j.2 (0,2)
        for i.3 (0,4)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 66	GFLOPS: 20.86 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696647049.82)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,12)
  for i.2 (0,4)
    for j.2 (0,4)
      for k.1 (0,48)
        for i.3 (0,12)
          out = ...

==================================================
No: 67	GFLOPS: 39.47 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696647050.05)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,192)
  for k.0 (0,16)
    for j.2 (0,2)
      for k.1 (0,3)
        for i.3 (0,6)
          out = ...

==================================================
No: 68	GFLOPS: 19.17 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696647050.18)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,144)
  for k.0 (0,3)
    for i.2 (0,8)
      for k.1 (0,16)
        for i.3 (0,2)
          out = ...

==================================================
No: 69	GFLOPS: 59.94 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696647050.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,12)
      for j_c.2 (0,4)
        for k.1 (0,6)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 70	GFLOPS: 3.15 / 194.15	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.48, Tstamp:1696647050.78)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,24)
    for i.2 (0,4)
      for j.2 (0,12)
        for k.1 (0,2)
          for i.3 (0,12)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 71	GFLOPS: 121.14 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.83, Tstamp:1696647051.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,3)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for i_c.2 (0,8)
      for j_c.2 (0,6)
        for k.1 (0,3)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.2 (0,16)
    for j.2 (0,48)
      out = ...

==================================================
No: 72	GFLOPS: 35.18 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696647051.27)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,16)
    for i.2 (0,6)
      for j.2 (0,16)
        for k.1 (0,3)
          for i.3 (0,2)
            vectorize j.3 (0,3)
              out = ...

==================================================
No: 73	GFLOPS: 47.24 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696647051.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for j_c.1 (0,3)
    for k.0 (0,6)
      for i_c.2 (0,48)
        for j_c.2 (0,2)
          for k.1 (0,8)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,48)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 74	GFLOPS: 39.49 / 194.................****************
15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696647051.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.2 (0,16)
      for k.1 (0,2)
        vectorize j_c.3 (0,3)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 75	GFLOPS: 81.69 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696647051.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,12)
    for k.1 (0,4)
      for i_c.3 (0,6)
        vectorize j_c.3 (0,6)
          out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 76	GFLOPS: 4.58 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696647052.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,48)
    for i.2 (0,4)
      for i.3 (0,3)
        vectorize j.3 (0,12)
          out = ...

==================================================
No: 77	GFLOPS: 22.26 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696647052.41)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,192)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,3)
      for j_c.2 (0,2)
        for k.1 (0,24)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,3)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 78	GFLOPS: 58.16 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696647052.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,24)
    for i_c.2 (0,24)
      for j_c.2 (0,4)
        for k.1 (0,2)
          vectorize j_c.3 (0,3)
            out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 79	GFLOPS: 22.81 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696647052.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,144)
  for k.0 (0,3)
    for j.2 (0,2)
      for k.1 (0,16)
        for i.3 (0,8)
          out = ...

==================================================
No: 80	GFLOPS: 54.66 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696647053.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,96)
  for k.0 (0,3)
    for j_c.2 (0,2)
      for k.1 (0,16)
        vectorize j_c.3 (0,12)
          out.local = ...
  for j.2 (0,24)
    out = ...

==================================================
No: 81	GFLOPS: 31.08 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696647055.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,24)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,48)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 82	GFLOPS: 10.69 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696647055.91)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,1152)
  out.local auto_unroll: 512
  for k.0 (0,6)
    for k.1 (0,8)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 83	GFLOPS: 24.62 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696647056.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,96)
  for i.1 (0,2)
    for j.1 (0,6)
      for k.0 (0,2)
        for k.1 (0,24)
          vectorize j_c.3 (0,2)
            out.local = ...
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 84	GFLOPS: 66.15 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696647056.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,24)
  out.local auto_unroll: 64
  for i_c.2 (0,4)
    for j_c.2 (0,24)
      for k.1 (0,48)
        out.local = ...
  for i.1 (0,4)
    for j.1 (0,24)
      out = ...

==================================================
No: 85	GFLOPS: 37.16 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696647056.54)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,96)
  for k.0 (0,4)
    for i.2 (0,2)
      for k.1 (0,12)
        vectorize j.3 (0,12)
          out = ...

==================================================
No: 86	GFLOPS: 4.17 / 194.15	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.22, Tstamp:1696647056.67)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,3)
    for k.1 (0,16)
      for i.3 (0,24)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 87	GFLOPS: 30.70 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696647056.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,144)
  for k.0 (0,3)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,16)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 88	GFLOPS: 29.93 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696647057.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,144)
  for k.0 (0,12)
    for i_c.2 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,16)
    out = ...

==================================================
No: 89	GFLOPS: 65.58 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696647057.48)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,72)
  for k.0 (0,12)
    for j.2 (0,8)
      for k.1 (0,4)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 90	GFLOPS: 67.21 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696647057.74)
==================================================
Placeholder: A, B
out auto_unroll: 64
for k.0 (0,6)
  for i.2 (0,6)
    for j.2 (0,3)
      for k.1 (0,8)
        for i.3 (0,8)
          vectorize j.3 (0,16)
            out = ...

==================================================
No: 91	GFLOPS: 99.19 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696647057.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 64
  for j_c.2 (0,2)
    for k.1 (0,48)
      for i_c.3 (0,6)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 92	GFLOPS: 115.71 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.84, Tstamp:1696647058.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,48)
      for k.0 (0,48)
        for i_c.2 (0,3)
          out.local = ...
  for i.1 (0,12)
    for....****
 j.1 (0,48)
      out = ...

==================================================
No: 93	GFLOPS: 13.79 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696647058.35)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,384)
  for k.0 (0,48)
    for i.3 (0,6)
      out = ...

==================================================
No: 94	GFLOPS: 126.34 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696647058.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for i.2 (0,3)
      for j.2 (0,6)
        for k.1 (0,6)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 95	GFLOPS: 57.43 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696647058.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for k.0 (0,6)
    for i_c.2 (0,12)
      for j_c.2 (0,8)
        for k.1 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 96	GFLOPS: 83.10 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696647058.93)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,72)
  for k.0 (0,2)
    for i.2 (0,2)
      for k.1 (0,24)
        for i.3 (0,4)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 97	GFLOPS: 21.64 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696647060.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,48)
  for i_c.1 (0,8)
    for k.0 (0,4)
      for k.1 (0,12)
        for i_c.3 (0,6)
          out.local = ...
  for i.1 (0,48)
    out = ...

==================================================
No: 98	GFLOPS: 84.17 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696647060.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for j_c.2 (0,2)
    for k.1 (0,48)
      for i_c.3 (0,24)
        vectorize j_c.3 (0,6)
          out.local = ...
  for i.2 (0,24)
    for j.2 (0,12)
      out = ...

==================================================
No: 99	GFLOPS: 53.67 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.17, Tstamp:1696647061.09)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,384)
  for k.0 (0,48)
    for i.3 (0,2)
      vectorize j.3 (0,3)
        out = ...

==================================================
No: 100	GFLOPS: 13.61 / 194.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696647061.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,24)
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for j_c.2 (0,12)
        for k.1 (0,48)
          out.local = ...
  for i.1 (0,4)
    for j.1 (0,24)
      out = ...

Time elapsed for measurement: 14.17 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((48, 48), "float32"), B: T.Buffer((48, 48), "float32"), out: T.Buffer((48, 48), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(36):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused // 3 * 192 + i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused % 3 * 16
            out_1 = T.Buffer((2304,), data=out.data)
            out_1[cse_var_1] = T.float32(0)
            out_1[cse_var_1 + 48] = T.float32(0)
            out_1[cse_var_1 + 96] = T.float32(0)
            out_1[cse_var_1 + 144] = T.float32(0)
            out_1[cse_var_1 + 1] = T.float32(0)
            out_1[cse_var_1 + 49] = T.float32(0)
            out_1[cse_var_1 + 97] = T.float32(0)
            out_1[cse_var_1 + 145] = T.float32(0)
            out_1[cse_var_1 + 2] = T.float32(0)
            out_1[cse_var_1 + 50] = T.float32(0)
            out_1[cse_var_1 + 98] = T.float32(0)
            out_1[cse_var_1 + 146] = T.float32(0)
            out_1[cse_var_1 + 3] = T.float32(0)
            out_1[cse_var_1 + 51] = T.float32(0)
            out_1[cse_var_1 + 99] = T.float32(0)
            out_1[cse_var_1 + 147] = T.float32(0)
            out_1[cse_var_1 + 4] = T.float32(0)
            out_1[cse_var_1 + 52] = T.float32(0)
            out_1[cse_var_1 + 100] = T.float32(0)
            out_1[cse_var_1 + 148] = T.float32(0)
            out_1[cse_var_1 + 5] = T.float32(0)
            out_1[cse_var_1 + 53] = T.float32(0)
            out_1[cse_var_1 + 101] = T.float32(0)
            out_1[cse_var_1 + 149] = T.float32(0)
            out_1[cse_var_1 + 6] = T.float32(0)
            out_1[cse_var_1 + 54] = T.float32(0)
            out_1[cse_var_1 + 102] = T.float32(0)
            out_1[cse_var_1 + 150] = T.float32(0)
            out_1[cse_var_1 + 7] = T.float32(0)
            out_1[cse_var_1 + 55] = T.float32(0)
            out_1[cse_var_1 + 103] = T.float32(0)
            out_1[cse_var_1 + 151] = T.float32(0)
            out_1[cse_var_1 + 8] = T.float32(0)
            out_1[cse_var_1 + 56] = T.float32(0)
            out_1[cse_var_1 + 104] = T.float32(0)
            out_1[cse_var_1 + 152] = T.float32(0)
            out_1[cse_var_1 + 9] = T.float32(0)
            out_1[cse_var_1 + 57] = T.float32(0)
            out_1[cse_var_1 + 105] = T.float32(0)
            out_1[cse_var_1 + 153] = T.float32(0)
            out_1[cse_var_1 + 10] = T.float32(0)
            out_1[cse_var_1 + 58] = T.float32(0)
            out_1[cse_var_1 + 106] = T.float32(0)
            out_1[cse_var_1 + 154] = T.float32(0)
            out_1[cse_var_1 + 11] = T.float32(0)
            out_1[cse_var_1 + 59] = T.float32(0)
            out_1[cse_var_1 + 107] = T.float32(0)
            out_1[cse_var_1 + 155] = T.float32(0)
            out_1[cse_var_1 + 12] = T.float32(0)
            out_1[cse_var_1 + 60] = T.float32(0)
            out_1[cse_var_1 + 108] = T.float32(0)
            out_1[cse_var_1 + 156] = T.float32(0)
            out_1[cse_var_1 + 13] = T.float32(0)
            out_1[cse_var_1 + 61] = T.float32(0)
            out_1[cse_var_1 + 109] = T.float32(0)
            out_1[cse_var_1 + 157] = T.float32(0)
            out_1[cse_var_1 + 14] = T.float32(0)
            out_1[cse_var_1 + 62] = T.float32(0)
            out_1[cse_var_1 + 110] = T.float32(0)
            out_1[cse_var_1 + 158] = T.float32(0)
            out_1[cse_var_1 + 15] = T.float32(0)
            out_1[cse_var_1 + 63] = T.float32(0)
            out_1[cse_var_1 + 111] = T.float32(0)
            out_1[cse_var_1 + 159] = T.float32(0)
            for k_outer, j_outer_inner in T.grid(4, 16):
                cse_var_18: T.int32 = cse_var_1 + j_outer_inner
                cse_var_17: T.int32 = cse_var_18 + 96
                cse_var_16: T.int32 = cse_var_18 + 48
                cse_var_15: T.int32 = cse_var_18 + 144
                cse_var_14: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused // 3 * 192 + k_outer * 12
                cse_var_13: T.int32 = k_outer * 576 + i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused % 3 * 16 + j_outer_inner
                cse_var_12: T.int32 = cse_var_13 + 96
                cse_var_11: T.int32 = cse_var_13 + 528
                cse_var_10: T.int32 = cse_var_13 + 480
                cse_var_9: T.int32 = cse_var_13 + 48
                cse_var_8: T.int32 = cse_var_13 + 432
                cse_var_7: T.int32 = cse_var_13 + 384
                cse_var_6: T.int32 = cse_var_13 + 336
                cse_var_5: T.int32 = cse_var_13 + 288
                cse_var_4: T.int32 = cse_var_13 + 240
                cse_var_3: T.int32 = cse_var_13 + 192
                cse_var_2: T.int32 = cse_var_13 + 144
                A_1 = T.Buffer((2304,), data=A.data)
                B_1 = T.Buffer((2304,), data=B.data)
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14] * B_1[cse_var_13]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 48] * B_1[cse_var_13]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 96] * B_1[cse_var_13]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 144] * B_1[cse_var_13]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 1] * B_1[cse_var_9]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 49] * B_1[cse_var_9]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 97] * B_1[cse_var_9]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 145] * B_1[cse_var_9]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 2] * B_1[cse_var_12]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 50] * B_1[cse_var_12]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 98] * B_1[cse_var_12]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 146] * B_1[cse_var_12]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 3] * B_1[cse_var_2]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 51] * B_1[cse_var_2]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 99] * B_1[cse_var_2]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 147] * B_1[cse_var_2]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 4] * B_1[cse_var_3]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 52] * B_1[cse_var_3]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 100] * B_1[cse_var_3]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 148] * B_1[cse_var_3]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 5] * B_1[cse_var_4]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 53] * B_1[cse_var_4]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 101] * B_1[cse_var_4]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 149] * B_1[cse_var_4]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 6] * B_1[cse_var_5]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 54] * B_1[cse_var_5]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 102] * B_1[cse_var_5]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 150] * B_1[cse_var_5]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 7] * B_1[cse_var_6]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 55] * B_1[cse_var_6]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 103] * B_1[cse_var_6]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 151] * B_1[cse_var_6]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 8] * B_1[cse_var_7]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 56] * B_1[cse_var_7]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 104] * B_1[cse_var_7]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 152] * B_1[cse_var_7]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 9] * B_1[cse_var_8]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 57] * B_1[cse_var_8]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 105] * B_1[cse_var_8]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 153] * B_1[cse_var_8]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 10] * B_1[cse_var_10]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 58] * B_1[cse_var_10]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 106] * B_1[cse_var_10]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 154] * B_1[cse_var_10]
                out_1[cse_var_18] = out_1[cse_var_18] + A_1[cse_var_14 + 11] * B_1[cse_var_11]
                out_1[cse_var_16] = out_1[cse_var_16] + A_1[cse_var_14 + 59] * B_1[cse_var_11]
                out_1[cse_var_17] = out_1[cse_var_17] + A_1[cse_var_14 + 107] * B_1[cse_var_11]
                out_1[cse_var_15] = out_1[cse_var_15] + A_1[cse_var_14 + 155] * B_1[cse_var_11]
Execution time of this operator: max:1.225 us   median:1.190 us   min:1.143 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=4)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=4)
out_j_o_i, out_j_i = s[out].split(out_j, factor=1)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=16)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=3)
out_k_o, out_k_i = s[out].split(out_k, factor=12)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 64)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

