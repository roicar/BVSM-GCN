----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1493	fail_ct: 355	Time elapsed: 1.02
GA Iter: 0	Max score: 0.9997	Min score: 0.9043	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9873	#Pop: 128	#M+: 1386	#M-: 68
EvolutionarySearch		#s: 128	Time elapsed: 4.31
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [8, 8]
B = PLACEHOLDER [8, 8]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 1.41 / 1.41	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696644610.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for j_c.1 (0,2)
    for k.0 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 2	GFLOPS: 1.64 / 1.64	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696644610.85)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,4)
    for j.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,8)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 3	GFLOPS: 1.58 / 1.64	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644611.10)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.1 (0,8)
    vectorize j.3 (0,2)
      out = ...

==================================================
No: 4	GFLOPS: 20.51 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696644611.43)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for k.0 (0,4)
  for i_c.2 (0,8)
    for k.1 (0,2)
      vectorize j_c.3 (0,8)
        out.local = ...
for i.2 (0,8)
  vectorize j.2 (0,8)
    out = ...

==================================================
No: 5	GFLOPS: 1.49 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696644611.68)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for j.2 (0,2)
      for k.1 (0,4)
        for i.3 (0,4)
          out = ...

==================================================
No: 6	GFLOPS: 1.61 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644611.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.2 (0,2)
    for k.1 (0,8)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 7	GFLOPS: 1.45 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644612.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for i_c.2 (0,2)
      for k.1 (0,8)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 8	GFLOPS: 1.38 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696644612.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 9	GFLOPS: 1.45 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644612.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i_c.2 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,8)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 10	GFLOPS: 1.30 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644612.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0................****************
,4)
    for i_c.2 (0,2)
      for k.1 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 11	GFLOPS: 1.60 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696644613.16)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,8)
    vectorize j.3 (0,8)
      out = ...

==================================================
No: 12	GFLOPS: 1.56 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644613.41)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.1 (0,8)
    for i.3 (0,4)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 13	GFLOPS: 0.66 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696644613.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,2)
          for i.3 (0,4)
            out = ...

==================================================
No: 14	GFLOPS: 13.57 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696644613.87)
==================================================
Placeholder: A, B
for j.0 (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for i_c.2 (0,2)
          for j_c.2 (0,2)
            for k.1 (0,4)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 15	GFLOPS: 1.57 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644614.10)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for j.2 (0,4)
    for k.1 (0,8)
      out = ...

==================================================
No: 16	GFLOPS: 1.57 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644614.36)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.1 (0,8)
    vectorize j.3 (0,4)
      out = ...

==================================================
No: 17	GFLOPS: 1.48 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696644616.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,2)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 18	GFLOPS: 1.58 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696644616.98)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,4)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,2)
          for i.3 (0,2)
            out = ...

==================================================
No: 19	GFLOPS: 1.25 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644617.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 20	GFLOPS: 1.30 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696644617.51)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,4)
    for j.2 (0,4)
      for k.1 (0,2)
        for i.3 (0,4)
          out = ...

==================================================
No: 21	GFLOPS: 1.28 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644617.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 512
  for i_c.2 (0,2)
    for k.1 (0,8)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 22	GFLOPS: 1.56 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696644618.01)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for i.2 (0,2)
    for j.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,2)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 23	GFLOPS: 1.29 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696644618.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 64
  for j_c.2 (0,2)
    for k.1 (0,8)
      for i_c.3 (0,8)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 24	GFLOPS: 1.58 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696644618.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,4)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 25	GFLOPS: 1.32 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696644618.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.2 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,8)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 26	GFLOPS: 1.50 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644619.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 27	GFLOPS: 1.52 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644619.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,4)
    for k.1 (0,2)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 28	GFLOPS: 13.74 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696644619.43)
==================================================
Placeholder: A, B
out auto_unroll: 16
for i.2 (0,4)
  for j.2 (0,4)
    for k.1 (0,8)
      for i.3 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 29	GFLOPS: 1.25 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644619.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for k.1 (0,4)
      for i_c.3 (0,8)
        out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 30	GFLOPS: 1.26 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696644619.97)
==========................****************
========================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for i_c.2 (0,2)
      for k.1 (0,8)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,8)
    out = ...

==================================================
No: 31	GFLOPS: 1.57 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644620.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,8)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 32	GFLOPS: 1.28 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644620.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  for k.0 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 33	GFLOPS: 1.57 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696644622.62)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,2)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 34	GFLOPS: 1.56 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644622.87)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for k.1 (0,2)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 35	GFLOPS: 1.27 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644623.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for k.1 (0,4)
      for i_c.3 (0,8)
        out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 36	GFLOPS: 1.44 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644623.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for j_c.2 (0,2)
      vectorize j_c.3 (0,4)
        out.local = ...
  vectorize j.2 (0,8)
    out = ...

==================================================
No: 37	GFLOPS: 1.34 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644623.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for i_c.3 (0,4)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 38	GFLOPS: 1.57 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696644623.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.2 (0,4)
    for k.1 (0,8)
      vectorize j_c.3 (0,8)
        out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 39	GFLOPS: 1.33 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644624.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for i_c.2 (0,4)
      for k.1 (0,8)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,2)
      out = ...

======================================................****************
============
No: 40	GFLOPS: 1.55 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696644624.41)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,2)
    for k.1 (0,4)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 41	GFLOPS: 1.36 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696644624.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,8)
        for k.1 (0,4)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 42	GFLOPS: 1.51 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644624.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for j_c.2 (0,2)
    for k.1 (0,8)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 43	GFLOPS: 1.15 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644625.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,2)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 44	GFLOPS: 1.56 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696644625.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for j_c.2 (0,4)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 45	GFLOPS: 1.31 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644625.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    vectorize j_c.3 (0,4)
      out.local = ...
  vectorize j.2 (0,4)
    out = ...

==================================================
No: 46	GFLOPS: 1.34 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644626.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for k.1 (0,2)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 47	GFLOPS: 1.33 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644626.29)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i_c.2 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 48	GFLOPS: 1.50 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696644626.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 49	GFLOPS: 0.97 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696644628.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.1 (0,8)
    for i_c.3 (0,2)
      out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 50	GFLOPS: 1.42 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696644628.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 51	GFLOPS: 1.39 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644629.24)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,4)
    for k.1 (0,2)
      out = ...

==================================================
No: 52	GFLOPS: 1.15 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644629.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,2)
      for k.1 (0,4)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 53	GFLOPS: 1.53 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644629.72)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for j.2 (0,2)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 54	GFLOPS: 1.61 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644629.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 55	GFLOPS: 1.27 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644630.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for i_c.2 (0,8)
      for k.1 (0,2)
        out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 56	GFLOPS: 1.41 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696644630.48)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,4)
    for i.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 57	GFLOPS: 1.46 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644630.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for j_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 58	GFLOPS: 17.78 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696644631.05)
==================================================
Placeholder: A, B
out auto_unroll: 512
for i.2 (0,8)
  for j.2 (0,4)
    for k.1 (0,8)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 59	GFLOPS: 1.59 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696644631.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,4)
        for k.1 (0,4)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 60	GFLOPS: 0.90 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644631.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 64
  for k.1 (0,8)
    out.local = ...
  out = ...

==================================================
No: 61	GFLOPS: 1.58 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644631.78)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,2)
    for k.1 (0,8)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 62	GFLOPS: 1.62 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644632.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,4)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 63	GFLOPS: 1.59 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696644632.24)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i.2 (0,2)
      for j.2 (0,8)
        for k.1 (0,4)
          out = ...

==================================================
No: 64	GFLOPS: 0.79 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644632.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.1 (0,8)
    out.local = ...
  out = ...

Time elapsed for measurement: 24.07 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.10 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1430	fail_ct: 405	Time elapsed: 0.97
GA Iter: 0	Max score: 0.9997	Min score: 0.9094	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9885	#Pop: 128	#M+: 1379	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.33
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 1.48 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696644640.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for j.2 (0,2)
    for k.1 (0,8)
      for i.3 (0,2)
        out = ...

==================================================
No: 66	GFLOPS: 1.41 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644640.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 67	GFLOPS: 1.69 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696644640.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,4)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 68	GFLOPS: 1.62 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696644640.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.2 (0,8)
    for j_c.2 (0,4)
      for k.1 (0,8)
        out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 69	GFLOPS: 1.54 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644641.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for k.1 (0,2)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 70	GFLOPS: 1.57 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696644641.50)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for j.2 (0,8)
    for k.1 (0,8)
      for i.3 (0,2)
        out = ...

==================================================
No: 71	GFLOPS: 1.16 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696644641.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,2)
      for k.1 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,4)
    out = ...

==================================================
No: 72	GFLOPS: 1.62 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696644642.01)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for i.2 (0,2)
    for j.2 (0,8)
      for k.1 (0,8)
        for i.3 (0,2)
          out = ...

==================================================
No: 73	GFLOPS: 9.75 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696644642.35)
==================================================
Placeholder: A, B
out.local auto_unroll: 64
for j_c.1 (0,2)
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
for i.1 (0,8)
  vectorize j.1 (0,8)
    out = ...

==================================================
No: 74	GFLOPS: 1.63 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696644642.61)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,................****************
2)
  for k.0 (0,2)
    for i.2 (0,4)
      for j.2 (0,8)
        for k.1 (0,4)
          out = ...

==================================================
No: 75	GFLOPS: 1.54 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696644642.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.1 (0,4)
    for k.0 (0,8)
      for i_c.3 (0,8)
        out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 76	GFLOPS: 1.45 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696644643.13)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for i.2 (0,2)
    for j.2 (0,4)
      for k.1 (0,8)
        out = ...

==================================================
No: 77	GFLOPS: 1.60 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696644643.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,8)
      for k.0 (0,2)
        for k.1 (0,4)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 78	GFLOPS: 1.61 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644643.64)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.1 (0,8)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 79	GFLOPS: 1.31 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696644643.91)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for k.1 (0,2)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 80	GFLOPS: 1.56 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696644644.17)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,4)
      for k.0 (0,8)
        for i_c.3 (0,4)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 81	GFLOPS: 1.32 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644646.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i.2 (0,2)
      for j.2 (0,4)
        for k.1 (0,4)
          for i.3 (0,2)
            out = ...

==================================================
No: 82	GFLOPS: 1.33 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644646.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,8)
  for k.0 (0,4)
    for i_c.2 (0,4)
      for k.1 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 83	GFLOPS: 1.26 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696644647.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for j_c.1 (0,2)
    for i_c.2 (0,4)
      for k.1 (0,8)
        out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 84	GFLOPS: 1.06 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644647.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,2)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 85	GFLOPS: 1.35 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644647.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,2)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 86	GFLOPS: 1.38 / 20.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696644647.73)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,8)
    for i.2 (0,2)
      for j.2 (0,2)
        for i.3 (0,2)
          out = ...

==================================================
No: 87	GFLOPS: 40.15 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696644647.89)
==================================================
Placeholder: A, B
out auto_unroll: 64
for k.0 (0,4)
  for i.2 (0,8)
    for k.1 (0,2)
      vectorize j.3 (0,8)
        out = ...

==================================================
No: 88	GFLOPS: 1.53 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644648.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for k.1 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 89	GFLOPS: 12.85 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696644648.47)
==================================================
Placeholder: A, B
for i_c.2 (0,4)
  for j_c.2 (0,2)
    for k.1 (0,8)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,4)
          out.local = ...
for i.1 (0,8)
  vectorize j.1 (0,8)
    out = ...

==================================================
No: 90	GFLOPS: 1.29 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696644648.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 91	GFLOPS: 1.10 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696644648.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.1 (0,8)
    for i_c.3 (0,2)
      out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 92	GFLOPS: 1.32 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696644649.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for j_c.2 (0,2)
    for k.1 (0,8)
      for i_c.3 (0,8)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 93	GFLOPS: 19.76 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696644649.55)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,2)
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,8)
            out.local = ...
for i.1 (0,8)
  vectorize j.1 (0,8)
    out = ...

==================================================
No: 94	GFLOPS: 1.54 / 40.15	resul....****
ts: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696644649.81)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,2)
          for i.3 (0,2)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 95	GFLOPS: 1.22 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696644650.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.1 (0,8)
    for i.3 (0,4)
      out = ...

==================================================
No: 96	GFLOPS: 1.48 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696644650.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for i_c.2 (0,4)
          for j_c.2 (0,2)
            for k.1 (0,2)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 97	GFLOPS: 9.07 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696644652.23)
==================================================
Placeholder: A, B
for j.0 (0,8)
  for k.0 (0,2)
    for k.1 (0,4)
      for i_c.3 (0,8)
        out.local = ...
  for i.1 (0,8)
    out = ...

==================================================
No: 98	GFLOPS: 1.25 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696644652.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for j_c.1 (0,2)
    for k.0 (0,8)
      for i_c.2 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 99	GFLOPS: 10.26 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696644652.79)
==================================================
Placeholder: A, B
for k.0 (0,8)
  for i_c.2 (0,8)
    for j_c.2 (0,4)
      vectorize j_c.3 (0,2)
        out.local = ...
for i.2 (0,8)
  vectorize j.2 (0,8)
    out = ...

==================================================
No: 100	GFLOPS: 1.45 / 40.15	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696644653.04)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,8)
  for j.2 (0,2)
    for k.1 (0,8)
      vectorize j.3 (0,4)
        out = ...

Time elapsed for measurement: 15.10 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((8, 8), "float32"), B: T.Buffer((8, 8), "float32"), out: T.Buffer((8, 8), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        out_1 = T.Buffer((64,), data=out.data)
        out_1[0:8] = T.Broadcast(T.float32(0), 8)
        out_1[8:16] = T.Broadcast(T.float32(0), 8)
        out_1[16:24] = T.Broadcast(T.float32(0), 8)
        out_1[24:32] = T.Broadcast(T.float32(0), 8)
        out_1[32:40] = T.Broadcast(T.float32(0), 8)
        out_1[40:48] = T.Broadcast(T.float32(0), 8)
        out_1[48:56] = T.Broadcast(T.float32(0), 8)
        out_1[56:64] = T.Broadcast(T.float32(0), 8)
        A_1 = T.Buffer((64,), data=A.data)
        B_1 = T.Buffer((64,), data=B.data)
        out_1[0:8] = out_1[0:8] + T.Broadcast(A_1[0], 8) * B_1[0:8]
        out_1[8:16] = out_1[8:16] + T.Broadcast(A_1[8], 8) * B_1[0:8]
        out_1[16:24] = out_1[16:24] + T.Broadcast(A_1[16], 8) * B_1[0:8]
        out_1[24:32] = out_1[24:32] + T.Broadcast(A_1[24], 8) * B_1[0:8]
        out_1[32:40] = out_1[32:40] + T.Broadcast(A_1[32], 8) * B_1[0:8]
        out_1[40:48] = out_1[40:48] + T.Broadcast(A_1[40], 8) * B_1[0:8]
        out_1[48:56] = out_1[48:56] + T.Broadcast(A_1[48], 8) * B_1[0:8]
        out_1[56:64] = out_1[56:64] + T.Broadcast(A_1[56], 8) * B_1[0:8]
        out_1[0:8] = out_1[0:8] + T.Broadcast(A_1[1], 8) * B_1[8:16]
        out_1[8:16] = out_1[8:16] + T.Broadcast(A_1[9], 8) * B_1[8:16]
        out_1[16:24] = out_1[16:24] + T.Broadcast(A_1[17], 8) * B_1[8:16]
        out_1[24:32] = out_1[24:32] + T.Broadcast(A_1[25], 8) * B_1[8:16]
        out_1[32:40] = out_1[32:40] + T.Broadcast(A_1[33], 8) * B_1[8:16]
        out_1[40:48] = out_1[40:48] + T.Broadcast(A_1[41], 8) * B_1[8:16]
        out_1[48:56] = out_1[48:56] + T.Broadcast(A_1[49], 8) * B_1[8:16]
        out_1[56:64] = out_1[56:64] + T.Broadcast(A_1[57], 8) * B_1[8:16]
        out_1[0:8] = out_1[0:8] + T.Broadcast(A_1[2], 8) * B_1[16:24]
        out_1[8:16] = out_1[8:16] + T.Broadcast(A_1[10], 8) * B_1[16:24]
        out_1[16:24] = out_1[16:24] + T.Broadcast(A_1[18], 8) * B_1[16:24]
        out_1[24:32] = out_1[24:32] + T.Broadcast(A_1[26], 8) * B_1[16:24]
        out_1[32:40] = out_1[32:40] + T.Broadcast(A_1[34], 8) * B_1[16:24]
        out_1[40:48] = out_1[40:48] + T.Broadcast(A_1[42], 8) * B_1[16:24]
        out_1[48:56] = out_1[48:56] + T.Broadcast(A_1[50], 8) * B_1[16:24]
        out_1[56:64] = out_1[56:64] + T.Broadcast(A_1[58], 8) * B_1[16:24]
        out_1[0:8] = out_1[0:8] + T.Broadcast(A_1[3], 8) * B_1[24:32]
        out_1[8:16] = out_1[8:16] + T.Broadcast(A_1[11], 8) * B_1[24:32]
        out_1[16:24] = out_1[16:24] + T.Broadcast(A_1[19], 8) * B_1[24:32]
        out_1[24:32] = out_1[24:32] + T.Broadcast(A_1[27], 8) * B_1[24:32]
        out_1[32:40] = out_1[32:40] + T.Broadcast(A_1[35], 8) * B_1[24:32]
        out_1[40:48] = out_1[40:48] + T.Broadcast(A_1[43], 8) * B_1[24:32]
        out_1[48:56] = out_1[48:56] + T.Broadcast(A_1[51], 8) * B_1[24:32]
        out_1[56:64] = out_1[56:64] + T.Broadcast(A_1[59], 8) * B_1[24:32]
        out_1[0:8] = out_1[0:8] + T.Broadcast(A_1[4], 8) * B_1[32:40]
        out_1[8:16] = out_1[8:16] + T.Broadcast(A_1[12], 8) * B_1[32:40]
        out_1[16:24] = out_1[16:24] + T.Broadcast(A_1[20], 8) * B_1[32:40]
        out_1[24:32] = out_1[24:32] + T.Broadcast(A_1[28], 8) * B_1[32:40]
        out_1[32:40] = out_1[32:40] + T.Broadcast(A_1[36], 8) * B_1[32:40]
        out_1[40:48] = out_1[40:48] + T.Broadcast(A_1[44], 8) * B_1[32:40]
        out_1[48:56] = out_1[48:56] + T.Broadcast(A_1[52], 8) * B_1[32:40]
        out_1[56:64] = out_1[56:64] + T.Broadcast(A_1[60], 8) * B_1[32:40]
        out_1[0:8] = out_1[0:8] + T.Broadcast(A_1[5], 8) * B_1[40:48]
        out_1[8:16] = out_1[8:16] + T.Broadcast(A_1[13], 8) * B_1[40:48]
        out_1[16:24] = out_1[16:24] + T.Broadcast(A_1[21], 8) * B_1[40:48]
        out_1[24:32] = out_1[24:32] + T.Broadcast(A_1[29], 8) * B_1[40:48]
        out_1[32:40] = out_1[32:40] + T.Broadcast(A_1[37], 8) * B_1[40:48]
        out_1[40:48] = out_1[40:48] + T.Broadcast(A_1[45], 8) * B_1[40:48]
        out_1[48:56] = out_1[48:56] + T.Broadcast(A_1[53], 8) * B_1[40:48]
        out_1[56:64] = out_1[56:64] + T.Broadcast(A_1[61], 8) * B_1[40:48]
        out_1[0:8] = out_1[0:8] + T.Broadcast(A_1[6], 8) * B_1[48:56]
        out_1[8:16] = out_1[8:16] + T.Broadcast(A_1[14], 8) * B_1[48:56]
        out_1[16:24] = out_1[16:24] + T.Broadcast(A_1[22], 8) * B_1[48:56]
        out_1[24:32] = out_1[24:32] + T.Broadcast(A_1[30], 8) * B_1[48:56]
        out_1[32:40] = out_1[32:40] + T.Broadcast(A_1[38], 8) * B_1[48:56]
        out_1[40:48] = out_1[40:48] + T.Broadcast(A_1[46], 8) * B_1[48:56]
        out_1[48:56] = out_1[48:56] + T.Broadcast(A_1[54], 8) * B_1[48:56]
        out_1[56:64] = out_1[56:64] + T.Broadcast(A_1[62], 8) * B_1[48:56]
        out_1[0:8] = out_1[0:8] + T.Broadcast(A_1[7], 8) * B_1[56:64]
        out_1[8:16] = out_1[8:16] + T.Broadcast(A_1[15], 8) * B_1[56:64]
        out_1[16:24] = out_1[16:24] + T.Broadcast(A_1[23], 8) * B_1[56:64]
        out_1[24:32] = out_1[24:32] + T.Broadcast(A_1[31], 8) * B_1[56:64]
        out_1[32:40] = out_1[32:40] + T.Broadcast(A_1[39], 8) * B_1[56:64]
        out_1[40:48] = out_1[40:48] + T.Broadcast(A_1[47], 8) * B_1[56:64]
        out_1[48:56] = out_1[48:56] + T.Broadcast(A_1[55], 8) * B_1[56:64]
        out_1[56:64] = out_1[56:64] + T.Broadcast(A_1[63], 8) * B_1[56:64]
Execution time of this operator: max:0.025 us   median:0.024 us   min:0.024 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=8)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=1)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=1)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=1)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 64)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

