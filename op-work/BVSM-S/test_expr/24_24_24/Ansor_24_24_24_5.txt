----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1918	fail_ct: 24	Time elapsed: 1.08
GA Iter: 0	Max score: 0.9995	Min score: 0.9312	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9888	#Pop: 128	#M+: 1364	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.81
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [24, 24]
B = PLACEHOLDER [24, 24]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 20.81 / 20.81	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661127.63)
==================================================
Placeholder: A, B
out auto_unroll: 16
for k.0 (0,24)
  for i.2 (0,24)
    for j.2 (0,2)
      vectorize j.3 (0,12)
        out = ...

==================================================
No: 2	GFLOPS: 26.46 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661127.86)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,3)
        for k.1 (0,12)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 3	GFLOPS: 6.42 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661128.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,288)
  for k.0 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,12)
        out.local = ...
  vectorize j.2 (0,2)
    out = ...

==================================================
No: 4	GFLOPS: 18.54 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661128.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for j_c.2 (0,6)
      for k.1 (0,12)
        for i_c.3 (0,12)
          out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 5	GFLOPS: 8.22 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696661128.67)
==================================================
Placeholder: A, B
out auto_unroll: 64
for k.0 (0,12)
  for k.1 (0,2)
    for i.3 (0,24)
      vectorize j.3 (0,24)
        out = ...

==================================================
No: 6	GFLOPS: 6.14 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661128.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,8)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,3)
          vectorize j.3 (0,3)
            out = ...

==================================================
No: 7	GFLOPS: 3.13 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661129.26)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,24)
    for i.2 (0,12)
      out = ...

==================================================
No: 8	GFLOPS: 21.90 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696661129.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for j_c.1 (0,6)
      for k.0 (0,12)
        for k.1 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,2)
    for j.1 (0,24)
      out = ...

==================================================
No: 9	GFLOPS: 22.55 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696661129.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,6)
        for k.1 (0,3)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 10	GFLOPS: 13.26 / 26.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696661130.17)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for i.2 (0,8)
    for j.2 (0,3)
 ................****************
     for k.1 (0,24)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 11	GFLOPS: 33.80 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696661130.37)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,3)
    for k.1 (0,8)
      for i.3 (0,4)
        vectorize j.3 (0,6)
          out = ...

==================================================
No: 12	GFLOPS: 8.23 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696661130.50)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,4)
    for i.2 (0,3)
      for j.2 (0,8)
        for k.1 (0,6)
          for i.3 (0,2)
            out = ...

==================================================
No: 13	GFLOPS: 11.60 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696661130.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,36)
  for i_c.2 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,24)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 14	GFLOPS: 24.65 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661131.01)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,2)
    for j.2 (0,2)
      for k.1 (0,12)
        for i.3 (0,3)
          vectorize j.3 (0,6)
            out = ...

==================================================
No: 15	GFLOPS: 25.90 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696661131.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,36)
  out.local auto_unroll: 16
  for k.0 (0,12)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 16	GFLOPS: 0.44 / 33.80	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.21, Tstamp:1696661131.33)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,3)
  for k.0 (0,6)
    for j.2 (0,8)
      for k.1 (0,4)
        for i.3 (0,24)
          out = ...

==================================================
No: 17	GFLOPS: 14.18 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696661134.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,4)
    for i_c.2 (0,3)
      for k.1 (0,6)
        vectorize j_c.3 (0,3)
          out.local = ...
  for i.2 (0,3)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 18	GFLOPS: 15.06 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661135.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,72)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for k.1 (0,6)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 19	GFLOPS: 10.08 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696661135.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,144)
  for k.0 (0,12)
    for i_c.2 (0,2)
      for k.1 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 20	GFLOPS: 5.31 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.56, Tstamp:1696661135.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  out.local auto_unroll: 512
  for k.0 (0,6)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,6)
            out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 21	GFLOPS: 14.61 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661135.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  for k.0 (0,6)
    for i_c.2 (0,2)
      for j_c.2 (0,3)
        for k.1 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 22	GFLOPS: 18.07 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661136.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,72)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,24)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 23	GFLOPS: 11.12 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.42, Tstamp:1696661136.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,6)
    for i_c.2 (0,6)
      for j_c.2 (0,3)
        for k.1 (0,4)
          out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 24	GFLOPS: 17.09 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696661136.66)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,18)
  for k.0 (0,3)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,8)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 25	GFLOPS: 10.48 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696661136.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,72)
  for k.1 (0,24)
    for i.3 (0,4)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 26	GFLOPS: 9.73 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661137.09)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,18)
  for k.0 (0,4)
    for i.2 (0,8)
      for j.2 (0,4)
        for k.1 (0,6)
          out = ...

==================================================
No: 27	GFLOPS: 17.20 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661137.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,6)
  out.local auto_unroll: 16
  for i_c.1 (0,6)
    for j_c.1 (0,4)
      for k.1 (0,24)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 28	GFLOPS: 26.23 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696661137.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,24)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for i_c.3 (0,6)
          vectorize j_c.3 (0,6)
            out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 29	GFLOPS: 18.42 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696661137.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,12)
    for j_c.2 (0,2)
      for k.1 (0,2)
       ................****************
 for i_c.3 (0,2)
          vectorize j_c.3 (0,3)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 30	GFLOPS: 17.54 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661138.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,3)
        for k.1 (0,6)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 31	GFLOPS: 21.28 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696661138.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 512
  for k.1 (0,24)
    for i_c.3 (0,4)
      vectorize j_c.3 (0,6)
        out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 32	GFLOPS: 29.91 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.50, Tstamp:1696661138.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 512
  for k.0 (0,6)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,4)
          vectorize j_c.3 (0,6)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 33	GFLOPS: 2.84 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696661142.13)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,144)
  for k.0 (0,4)
    for j.2 (0,2)
      for k.1 (0,6)
        for i.3 (0,2)
          out = ...

==================================================
No: 34	GFLOPS: 21.66 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661142.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  for j.1 (0,4)
    for k.0 (0,12)
      for i.2 (0,2)
        for j.2 (0,2)
          for k.1 (0,2)
            vectorize j.3 (0,3)
              out = ...

==================================================
No: 35	GFLOPS: 27.47 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.66, Tstamp:1696661142.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,6)
        for i_c.3 (0,6)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 36	GFLOPS: 33.73 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696661142.83)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,6)
    for i.2 (0,4)
      for k.1 (0,4)
        vectorize j.3 (0,12)
          out = ...

==================================================
No: 37	GFLOPS: 25.19 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696661143.17)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,36)
  for k.0 (0,3)
    for i.2 (0,2)
      for j.2 (0,4)
        for k.1 (0,8)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 38	GFLOPS: 18.08 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.55, Tstamp:1696661143.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,12)
    for j_c.1 (0,2)
      for k.0 (0,24)
        for j_c.2 (0,4)
          vectorize j_c.3 (0,3)
            out.local = ...
  for i.1 (0,12)
    for j.1 (0,24)
      out = ...

==================================================
No: 39	GFLOPS: 33.13 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696661143.69)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,36)
  for k.0 (0,6)
    for k.1 (0,4)
      for i.3 (0,4)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 40	GFLOPS: 23.40 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661143.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,6)
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for i_c.2 (0,2)
          for k.1 (0,6)
            for i_c.3 (0,3)
              vectorize j_c.3 (0,4)
                out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 41	GFLOPS: 28.38 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661144.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.2 (0,2)
    for j_c.2 (0,6)
      for k.1 (0,24)
        for i_c.3 (0,6)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,12)
    for j.1 (0,24)
      out = ...

==================================================
No: 42	GFLOPS: 13.40 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696661144.48)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,6)
  for i.2 (0,6)
    for j.2 (0,4)
      for k.1 (0,24)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 43	GFLOPS: 19.94 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696661144.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for j_c.2 (0,6)
      for k.1 (0,3)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 44	GFLOPS: 3.50 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.17, Tstamp:1696661144.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,192)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.3 (0,3)
      out.local = ...
  for i.2 (0,3)
    out = ...

==================================================
No: 45	GFLOPS: 3.62 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696661144.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,4)
    for j.2 (0,4)
      for k.1 (0,6)
        for i.3 (0,3)
          out = ...

==================================================
No: 46	GFLOPS: 2.55 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.64, Tstamp:1696661145.24)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,8)
    for i.2 (0,6)
      for j.2 (0,6)
        for k.1 (0,3)
          for i.3 (0,4)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 47	GFLOPS: 10.08 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.73, Tstamp:1696661145.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 512
  for k.0 (0,12)
    for i_c.2 (0,3)
      for j_c.2 (0,3)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,3)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: ................****************
48	GFLOPS: 18.34 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.53, Tstamp:1696661145.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for i_c.2 (0,8)
    for k.1 (0,24)
      vectorize j_c.3 (0,6)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 49	GFLOPS: 24.71 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661148.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,4)
    for i.2 (0,3)
      for k.1 (0,6)
        vectorize j.3 (0,3)
          out = ...

==================================================
No: 50	GFLOPS: 0.80 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661148.26)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,3)
  for k.0 (0,24)
    for i.2 (0,3)
      for j.2 (0,4)
        for i.3 (0,8)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 51	GFLOPS: 17.32 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696661148.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.2 (0,2)
      for i_c.3 (0,3)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 52	GFLOPS: 7.60 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696661148.63)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,24)
  out.local auto_unroll: 16
  for i_c.1 (0,6)
    for k.0 (0,6)
      for k.1 (0,4)
        for i_c.3 (0,4)
          out.local = ...
  for i.1 (0,24)
    out = ...

==================================================
No: 53	GFLOPS: 1.40 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696661148.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,6)
    for i.2 (0,12)
      for j.2 (0,4)
        for k.1 (0,4)
          for i.3 (0,2)
            vectorize j.3 (0,3)
              out = ...

==================================================
No: 54	GFLOPS: 4.01 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696661148.90)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,36)
  for k.0 (0,8)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,3)
          for i.3 (0,2)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 55	GFLOPS: 29.04 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661149.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for j_c.2 (0,3)
      for k.1 (0,6)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 56	GFLOPS: 14.75 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.56, Tstamp:1696661149.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,24)
    for j_c.1 (0,6)
      for k.0 (0,12)
        for k.1 (0,2)
          out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,6)
      out = ...

==================================================
No: 57	GFLOPS: 5.08 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696661149.69)
==================================================
Placeholder: A, B
for i.1 (0,2)
  for i_c.2 (0,6)
    for k.1 (0,24)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,24)
          out.local = ...
  for i.2 (0,12)
    for j.2 (0,24)
      out = ...

==================================================
No: 58	GFLOPS: 14.35 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.60, Tstamp:1696661149.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,36)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,8)
      for k.1 (0,12)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 59	GFLOPS: 3.96 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661150.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,576)
  for k.0 (0,4)
    for k.1 (0,6)
      out.local = ...
  out = ...

==================================================
No: 60	GFLOPS: 8.07 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661150.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,24)
    for i_c.2 (0,3)
      for i_c.3 (0,4)
        out.local = ...
  for i.2 (0,12)
    out = ...

==================================================
No: 61	GFLOPS: 26.72 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661150.71)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,3)
  for i.2 (0,4)
    for j.2 (0,4)
      for k.1 (0,24)
        for i.3 (0,2)
          vectorize j.3 (0,6)
            out = ...

==================================================
No: 62	GFLOPS: 21.66 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.56, Tstamp:1696661150.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for k.0 (0,3)
    for i_c.2 (0,8)
      for k.1 (0,8)
        vectorize j_c.3 (0,6)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 63	GFLOPS: 19.69 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661151.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 512
  for k.0 (0,12)
    for i_c.2 (0,3)
      for j_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 64	GFLOPS: 9.84 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696661151.55)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,96)
  for k.0 (0,2)
    for i.2 (0,3)
      for j.2 (0,2)
        for k.1 (0,12)
          out = ...

Time elapsed for measurement: 26.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.14 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1914	fail_ct: 30	Time elapsed: 1.17
GA Iter: 0	Max score: 1.0000	Min score: 0.9342	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9882	#Pop: 128	#M+: 1385	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.28
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 10.78 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.68, Tstamp:1696661160.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,3)
      for i_c.2 (0,6)
        for j_c.2 (0,2)
          for k.1 (0,24)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 66	GFLOPS: 27.54 / 33.80	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696661161.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,3)
    for j_c.1 (0,3)
      for k.0 (0,3)
        for i_c.2 (0,2)
          for j_c.2 (0,2)
            for k.1 (0,8)
              for i_c.3 (0,2)
                vectorize j_c.3 (0,4)
                  out.local = ...
  for i.1 (0,12)
    for j.1 (0,24)
      out = ...

==================================================
No: 67	GFLOPS: 39.92 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661161.44)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,6)
  for j_c.1 (0,6)
    for k.0 (0,24)
      for i_c.2 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
for i.1 (0,24)
  for j.1 (0,24)
    out = ...

==================================================
No: 68	GFLOPS: 27.61 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661161.71)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,12)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,2)
          vectorize j.3 (0,3)
            out = ...

==================================================
No: 69	GFLOPS: 2.93 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696661161.99)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,6)
    for j.2 (0,6)
      for k.1 (0,4)
        for i.3 (0,8)
          out = ...

==================================================
No: 70	GFLOPS: 4.18 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696661162.18)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,576)
  for k.0 (0,2)
    for k.1 (0,12)
      out = ...

==================================================
No: 71	GFLOPS: 11.28 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661162.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,96)
  out.local auto_unroll: 16
  for k.1 (0,24)
    for i_c.3 (0,6)
      out.local = ...
  for i.1 (0,6)
    out = ...

==================================================
No: 72	GFLOPS: 12.36 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.77, Tstamp:1696661162.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 512
  for i_c.2 (0,2)
    for k.1 (0,24)
      for i_c.3 (0,6)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 73	GFLOPS: 4.82 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661162.99)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,144)
  for k.0 (0,2)
    for j.2 (0,4)
      for k.1 (0,12)
        out = ...

==================================================
No: 74	GFLOPS: 15.85 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0................****************
.69, Tstamp:1696661163.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,72)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for j_c.2 (0,4)
      for k.1 (0,6)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 75	GFLOPS: 16.29 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661163.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,6)
        for k.1 (0,12)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,6)
      out = ...

==================================================
No: 76	GFLOPS: 18.33 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.73, Tstamp:1696661163.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 512
  for k.0 (0,24)
    for i_c.2 (0,12)
      vectorize j_c.3 (0,3)
        out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 77	GFLOPS: 7.75 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661163.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for j.2 (0,3)
    for k.1 (0,24)
      for i.3 (0,3)
        out = ...

==================================================
No: 78	GFLOPS: 18.01 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696661164.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,6)
    for j_c.1 (0,6)
      for k.0 (0,4)
        for i_c.2 (0,2)
          for j_c.2 (0,2)
            for k.1 (0,6)
              out.local = ...
  for i.1 (0,12)
    for j.1 (0,12)
      out = ...

==================================================
No: 79	GFLOPS: 17.38 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661164.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.1 (0,2)
    for k.0 (0,24)
      for i_c.2 (0,3)
        for j_c.2 (0,2)
          for i_c.3 (0,8)
            vectorize j_c.3 (0,3)
              out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 80	GFLOPS: 11.78 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661164.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,2)
    for i_c.2 (0,8)
      for k.1 (0,12)
        vectorize j_c.3 (0,3)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 81	GFLOPS: 18.78 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696661167.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,48)
  out.local auto_unroll: 512
  for k.0 (0,6)
    for k.1 (0,4)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,3)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,3)
      out = ...

==================================================
No: 82	GFLOPS: 17.06 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661167.82)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,12)
    for k.1 (0,2)
      for i.3 (0,12)
        vectorize j.3 (0,3)
          out = ...

==================================================
No: 83	GFLOPS: 24.87 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661168.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 64
  for k.0 (0,3)
    for j_c.2 (0,4)
      for k.1 (0,8)
        for i_c.3 (0,3)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,3)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 84	GFLOPS: 14.86 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696661168.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,36)
  for j.1 (0,4)
    out.local auto_unroll: 64
    for k.0 (0,12)
      for k.1 (0,2)
        for i_c.3 (0,4)
          out.local = ...
    for i.2 (0,4)
      out = ...

==================================================
No: 85	GFLOPS: 23.40 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.78, Tstamp:1696661168.41)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,24)
    for i_c.2 (0,3)
      for j_c.2 (0,3)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,3)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 86	GFLOPS: 30.72 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696661168.64)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for i_c.2 (0,3)
    for k.1 (0,24)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 87	GFLOPS: 17.46 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661168.89)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,12)
    for i.2 (0,2)
      for j.2 (0,4)
        for k.1 (0,2)
          vectorize j.3 (0,3)
            out = ...

==================================================
No: 88	GFLOPS: 7.95 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.85, Tstamp:1696661169.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,6)
    for j_c.1 (0,6)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,24)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 89	GFLOPS: 22.95 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661169.41)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,3)
  out.local auto_unroll: 64
  for k.0 (0,12)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,6)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 90	GFLOPS: 20.93 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661169.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for j_c.2 (0,4)
      for k.1 (0,3)
        for i_c.3 (0,6)
          vectorize j_c.3 (0,3)
            out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 91	GFLOPS: 25.86 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661169.93)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,144)
  for k.0 (0,4)
    for j.2 (0,4)
      for k.1 (0,6)
        out = ...

==================================================
No: 92	GFLOPS: 31.54 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696661....****
170.20)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,72)
  for k.0 (0,3)
    for k.1 (0,8)
      for i.3 (0,2)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 93	GFLOPS: 19.23 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661170.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,6)
    for i_c.2 (0,2)
      for j_c.2 (0,3)
        for k.1 (0,4)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 94	GFLOPS: 32.96 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661170.64)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,6)
  for k.0 (0,2)
    for i.2 (0,2)
      for j.2 (0,24)
        for k.1 (0,12)
          for i.3 (0,2)
            out = ...

==================================================
No: 95	GFLOPS: 16.78 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661170.83)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,9)
  for i.2 (0,8)
    for j.2 (0,4)
      for k.1 (0,24)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 96	GFLOPS: 32.06 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696661171.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for j_c.1 (0,6)
    for k.0 (0,8)
      for i_c.2 (0,3)
        for j_c.2 (0,4)
          for k.1 (0,3)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,6)
    for j.1 (0,24)
      out = ...

==================================================
No: 97	GFLOPS: 8.52 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696661173.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,192)
  out.local auto_unroll: 16
  for k.0 (0,6)
    for i_c.2 (0,3)
      for k.1 (0,4)
        out.local = ...
  for i.2 (0,3)
    out = ...

==================================================
No: 98	GFLOPS: 18.26 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661173.86)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for i_c.1 (0,3)
    for k.0 (0,24)
      for i_c.2 (0,2)
        for j_c.2 (0,3)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,6)
      out = ...

==================================================
No: 99	GFLOPS: 27.23 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.16, Tstamp:1696661174.11)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,3)
    for i.2 (0,3)
      for j.2 (0,2)
        for k.1 (0,8)
          for i.3 (0,2)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 100	GFLOPS: 8.25 / 39.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696661174.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,3)
    for i.2 (0,3)
      for j.2 (0,3)
        for k.1 (0,8)
          for i.3 (0,2)
            out = ...

Time elapsed for measurement: 16.07 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((24, 24), "float32"), B: T.Buffer((24, 24), "float32"), out: T.Buffer((24, 24), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        out_local = T.allocate([576], "float32", "local")
        out_local_1 = T.Buffer((576,), data=out_local, scope="local")
        for i_c_outer_inner_init, j_c_outer_inner_init in T.grid(24, 24):
            out_local_1[i_c_outer_inner_init * 24 + j_c_outer_inner_init] = T.float32(0)
        for k_outer, i_c_outer_inner, j_c_outer_inner, k_inner in T.grid(8, 24, 24, 3):
            cse_var_2: T.int32 = i_c_outer_inner * 24
            cse_var_1: T.int32 = cse_var_2 + j_c_outer_inner
            A_1 = T.Buffer((576,), data=A.data)
            B_1 = T.Buffer((576,), data=B.data)
            out_local_1[cse_var_1] = out_local_1[cse_var_1] + A_1[cse_var_2 + k_outer * 3 + k_inner] * B_1[k_outer * 72 + k_inner * 24 + j_c_outer_inner]
        for i_inner in range(24):
            cse_var_3: T.int32 = i_inner * 24
            out_1 = T.Buffer((576,), data=out.data)
            out_1[cse_var_3:cse_var_3 + 24] = out_local_1[cse_var_3:cse_var_3 + 24]
Execution time of this operator: max:0.298 us   median:0.296 us   min:0.295 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_local, = s.cache_write([out], "local")
out_local_i_c, out_local_j_c, out_local_k = tuple(out_local.op.axis) + tuple(out_local.op.reduce_axis)
out_local_i_c_o_i, out_local_i_c_i = s[out_local].split(out_local_i_c, factor=1)
out_local_i_c_o_o_i, out_local_i_c_o_i = s[out_local].split(out_local_i_c_o_i, factor=24)
out_local_i_c_o_o_o, out_local_i_c_o_o_i = s[out_local].split(out_local_i_c_o_o_i, factor=1)
out_local_j_c_o_i, out_local_j_c_i = s[out_local].split(out_local_j_c, factor=1)
out_local_j_c_o_o_i, out_local_j_c_o_i = s[out_local].split(out_local_j_c_o_i, factor=24)
out_local_j_c_o_o_o, out_local_j_c_o_o_i = s[out_local].split(out_local_j_c_o_o_i, factor=1)
out_local_k_o, out_local_k_i = s[out_local].split(out_local_k, factor=3)
s[out_local].reorder(out_local_i_c_o_o_o, out_local_j_c_o_o_o, out_local_i_c_o_o_i, out_local_j_c_o_o_i, out_local_k_o, out_local_i_c_o_i, out_local_j_c_o_i, out_local_k_i, out_local_i_c_i, out_local_j_c_i)
out_i_o_i, out_i_i = s[out].split(out_i, factor=24)
out_i_o_o, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_j_o_i, out_j_i = s[out].split(out_j, factor=24)
out_j_o_o, out_j_o_i = s[out].split(out_j_o_i, factor=1)
s[out].reorder(out_i_o_o, out_j_o_o, out_i_o_i, out_j_o_i, out_i_i, out_j_i)
s[out_local].compute_at(s[out], out_j_o_i)
out_i_o_o_j_o_o_fused_i_o_i_fused_j_o_i_fused = s[out].fuse(out_i_o_o, out_j_o_o, out_i_o_i, out_j_o_i)
s[out].parallel(out_i_o_o_j_o_o_fused_i_o_i_fused_j_o_i_fused)
s[out_local].pragma(out_local_i_c_o_o_o, "auto_unroll_max_step", 0)
s[out_local].pragma(out_local_i_c_o_o_o, "unroll_explicit", True)
s[out_local].vectorize(out_local_j_c_i)
s[out].vectorize(out_j_i)

