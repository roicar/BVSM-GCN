----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1923	fail_ct: 22	Time elapsed: 1.05
GA Iter: 0	Max score: 0.9999	Min score: 0.9327	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9866	#Pop: 128	#M+: 1380	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 4.62
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [24, 24]
B = PLACEHOLDER [24, 24]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 19.53 / 19.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696660996.38)
==================================================
Placeholder: A, B
parallel i.0@ (0,2)
  for j.0 (0,2)
    for k.0 (0,4)
      for i_c.2 (0,6)
        for k.1 (0,6)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,12)
              out.local = ...
    for i.1 (0,12)
      vectorize j.1 (0,12)
        out = ...

==================================================
No: 2	GFLOPS: 16.72 / 19.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.71, Tstamp:1696660996.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,12)
      for k.1 (0,12)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 3	GFLOPS: 25.51 / 25.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696660996.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  for k.0 (0,12)
    for i.2 (0,2)
      for j.2 (0,4)
        for k.1 (0,2)
          vectorize j.3 (0,3)
            out = ...

==================================================
No: 4	GFLOPS: 16.94 / 25.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696660997.16)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for k.0 (0,12)
    for i_c.2 (0,3)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,8)
            vectorize j_c.3 (0,3)
              out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,6)
      out = ...

==================================================
No: 5	GFLOPS: 4.20 / 25.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660997.45)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,4)
    for i.2 (0,24)
      for j.2 (0,2)
        for k.1 (0,6)
          out = ...

==================================================
No: 6	GFLOPS: 25.53 / 25.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696660997.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,4)
    for i.2 (0,3)
      for k.1 (0,6)
        vectorize j.3 (0,3)
          out = ...

==================================================
No: 7	GFLOPS: 32.98 / 32.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696660997.96)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,3)
    for k.1 (0,8)
      for i.3 (0,3)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 8	GFLOPS: 24.12 / 32.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696660998.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,24)
    for j_c.2 (0,12)
      for i_c.3 (0,6)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,6)
    for j.1 (0,24)
      out = ...

==================================================
No: 9	GFLOPS: 20.68 / 32.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696660998.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  for j.2 (0,3)
    for k.1 (0,24)
      for i.3 (0,2)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 10	GFLOPS: 29.62 / 32.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696660998.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,18)
  for k.................****************
0 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,3)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 11	GFLOPS: 33.59 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696660998.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for k.0 (0,8)
      for j_c.2 (0,12)
        for k.1 (0,3)
          for i_c.3 (0,3)
            out.local = ...
  for i.1 (0,6)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 12	GFLOPS: 24.66 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.60, Tstamp:1696660999.16)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,6)
  out.local auto_unroll: 512
  for j_c.1 (0,6)
    for k.0 (0,4)
      for i_c.2 (0,2)
        for k.1 (0,6)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 13	GFLOPS: 27.30 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660999.43)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,48)
  for k.0 (0,8)
    for i.2 (0,2)
      for j.2 (0,6)
        for k.1 (0,3)
          out = ...

==================================================
No: 14	GFLOPS: 22.56 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.09, Tstamp:1696660999.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for i_c.2 (0,4)
    for j_c.2 (0,4)
      for k.1 (0,24)
        for i_c.3 (0,3)
          out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 15	GFLOPS: 8.94 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696661000.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 512
  for k.0 (0,24)
    for i_c.2 (0,6)
      out.local = ...
  for i.2 (0,6)
    out = ...

==================================================
No: 16	GFLOPS: 21.11 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661000.26)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 512
  for k.0 (0,24)
    for i_c.2 (0,2)
      for j_c.2 (0,3)
        for i_c.3 (0,6)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 17	GFLOPS: 7.52 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696661002.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for i_c.2 (0,2)
    for k.1 (0,24)
      for i_c.3 (0,12)
        vectorize j_c.3 (0,12)
          out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 18	GFLOPS: 29.38 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661002.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 512
  for i_c.2 (0,2)
    for j_c.2 (0,8)
      for k.1 (0,24)
        for i_c.3 (0,3)
          out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 19	GFLOPS: 22.04 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661002.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,36)
  out.local auto_unroll: 16
  for i_c.2 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,24)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 20	GFLOPS: 11.22 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661003.24)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,6)
    for j.2 (0,12)
      for k.1 (0,4)
        for i.3 (0,4)
          out = ...

==================================================
No: 21	GFLOPS: 9.81 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661003.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,6)
      for k.1 (0,12)
        out.local = ...
  for i.2 (0,6)
    out = ...

==================================================
No: 22	GFLOPS: 10.23 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661003.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 16
  for k.0 (0,12)
    for i_c.2 (0,12)
      for k.1 (0,2)
        out.local = ...
  for i.2 (0,12)
    out = ...

==================================================
No: 23	GFLOPS: 13.84 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696661004.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,24)
    for i.2 (0,2)
      for j.2 (0,2)
        for i.3 (0,3)
          vectorize j.3 (0,12)
            out = ...

==================================================
No: 24	GFLOPS: 18.59 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696661004.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i_c.2 (0,6)
    for j_c.2 (0,2)
      for k.1 (0,24)
        vectorize j_c.3 (0,12)
          out.local = ...
  for i.2 (0,6)
    for j.2 (0,24)
      out = ...

==================================================
No: 25	GFLOPS: 22.94 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661004.73)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,2)
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,12)
        for k.1 (0,3)
          for i_c.3 (0,6)
            vectorize j_c.3 (0,2)
              out.local = ...
for i.1 (0,24)
  vectorize j.1 (0,24)
    out = ...

==================================================
No: 26	GFLOPS: 13.72 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661004.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  out.local auto_unroll: 64
  for i_c.1 (0,3)
    for k.0 (0,24)
      for i_c.2 (0,8)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 27	GFLOPS: 0.97 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696661005.28)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,8)
    for j.2 (0,3)
      for k.1 (0,3)
        for i.3 (0,24)
          out = ...

==================================================
No: 28	GFLOPS: 25.42 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696661005.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,6)
  out.local auto_unroll: 16
  for i_c.1 (0,12)
    for j_c.1 (0,8)
      for k.0 (0,4)
        for k.1 (0,6)
          out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 2................****************
9	GFLOPS: 21.75 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696661005.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,36)
  out.local auto_unroll: 16
  for k.0 (0,24)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    for j.2 (0,4)
      out = ...

==================================================
No: 30	GFLOPS: 23.51 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661006.09)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,12)
  for i.2 (0,2)
    for k.1 (0,24)
      for i.3 (0,4)
        vectorize j.3 (0,6)
          out = ...

==================================================
No: 31	GFLOPS: 27.63 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661006.35)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,72)
  for k.0 (0,4)
    for i.2 (0,2)
      for k.1 (0,6)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 32	GFLOPS: 14.24 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661006.62)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,6)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,3)
        for k.1 (0,6)
          for i.3 (0,4)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 33	GFLOPS: 14.93 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696661009.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,36)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,3)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 34	GFLOPS: 21.27 / 33.59	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661009.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  for j_c.1 (0,4)
    for k.0 (0,8)
      for k.1 (0,3)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,6)
            out.local = ...
  for i.1 (0,2)
    for j.1 (0,24)
      out = ...

==================================================
No: 35	GFLOPS: 92.67 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696661010.02)
==================================================
Placeholder: A, B
for k.0 (0,8)
  for i_c.2 (0,24)
    for j_c.2 (0,24)
      for k.1 (0,3)
        out.local = ...
for i.2 (0,24)
  vectorize j.2 (0,24)
    out = ...

==================================================
No: 36	GFLOPS: 27.39 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696661010.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,3)
  for j_c.1 (0,3)
    for k.0 (0,12)
      for k.1 (0,2)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.1 (0,8)
    for j.1 (0,24)
      out = ...

==================================================
No: 37	GFLOPS: 14.76 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696661010.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for k.1 (0,12)
      vectorize j_c.3 (0,6)
        out.local = ...
  vectorize j.2 (0,6)
    out = ...

==================================================
No: 38	GFLOPS: 11.16 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696661010.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,8)
    for j_c.1 (0,12)
      for k.0 (0,6)
        for k.1 (0,4)
          for i_c.3 (0,3)
            out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 39	GFLOPS: 12.90 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696661010.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.2 (0,4)
      for i_c.3 (0,6)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 40	GFLOPS: 26.26 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661011.22)
==================================================
Placeholder: A, B
for i_c.2 (0,2)
  for j_c.2 (0,12)
    for k.1 (0,24)
      for i_c.3 (0,12)
        vectorize j_c.3 (0,2)
          out.local = ...
for i.1 (0,24)
  vectorize j.1 (0,24)
    out = ...

==================================================
No: 41	GFLOPS: 9.05 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696661011.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 512
  for k.0 (0,3)
    for k.1 (0,8)
      vectorize j_c.3 (0,6)
        out.local = ...
  vectorize j.2 (0,6)
    out = ...

==================================================
No: 42	GFLOPS: 21.17 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.93, Tstamp:1696661011.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,24)
  out.local auto_unroll: 512
  for j_c.2 (0,3)
    for k.1 (0,24)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 43	GFLOPS: 23.90 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696661011.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.2 (0,3)
      for j_c.2 (0,6)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,3)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 44	GFLOPS: 10.47 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.10, Tstamp:1696661012.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,24)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.2 (0,6)
      for k.1 (0,24)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 45	GFLOPS: 18.82 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.77, Tstamp:1696661012.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for k.1 (0,3)
      for i_c.3 (0,12)
        vectorize j_c.3 (0,3)
          out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,3)
      out = ...

==================================================
No: 46	GFLOPS: 18.77 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696661012.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,3)
          vectorize j_c.3 (0,12)
            out.local = ...
  for i.2 (0,4)
    for j.2 (0,24)
      out = ...

==================================================
No: 47	GFLOPS: 12.96 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696661013.16)
===================................****************
===============================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.3 (0,6)
      vectorize j_c.3 (0,2)
        out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 48	GFLOPS: 39.97 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661013.37)
==================================================
Placeholder: A, B
for j.0 (0,2)
  out.local auto_unroll: 16
  for k.0 (0,12)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,6)
            vectorize j_c.3 (0,6)
              out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 49	GFLOPS: 20.95 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661015.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,4)
        for k.1 (0,12)
          for i_c.3 (0,3)
            out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 50	GFLOPS: 11.53 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696661015.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 64
  for k.0 (0,12)
    for i_c.2 (0,24)
      for j_c.2 (0,2)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 51	GFLOPS: 13.26 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661016.26)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 16
  for k.0 (0,6)
    for i_c.2 (0,3)
      for j_c.2 (0,12)
        for k.1 (0,4)
          for i_c.3 (0,8)
            out.local = ...
  for i.2 (0,24)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 52	GFLOPS: 7.81 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696661016.39)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,6)
  for k.0 (0,3)
    for i.2 (0,24)
      for k.1 (0,8)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 53	GFLOPS: 9.05 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661016.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,3)
        vectorize j_c.3 (0,6)
          out.local = ...
  vectorize j.2 (0,12)
    out = ...

==================================================
No: 54	GFLOPS: 23.35 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.65, Tstamp:1696661016.89)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for k.0 (0,4)
      for i_c.2 (0,3)
        for k.1 (0,6)
          vectorize j_c.3 (0,6)
            out.local = ...
  for i.1 (0,12)
    for j.1 (0,6)
      out = ...

==================================================
No: 55	GFLOPS: 18.59 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661017.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,6)
    for j_c.1 (0,6)
      for k.0 (0,24)
        for j_c.2 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,12)
      out = ...

==================================================
No: 56	GFLOPS: 5.15 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661017.43)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,2)
    for j.2 (0,3)
      for k.1 (0,12)
        for i.3 (0,12)
          out = ...

==================================================
No: 57	GFLOPS: 22.59 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696661017.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for j_c.1 (0,12)
    for k.0 (0,4)
      for i_c.2 (0,3)
        for k.1 (0,6)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,3)
    for j.1 (0,24)
      out = ...

==================================================
No: 58	GFLOPS: 17.93 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696661017.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,24)
  for k.0 (0,4)
    for j_c.2 (0,24)
      for k.1 (0,6)
        out.local = ...
  for j.1 (0,24)
    out = ...

==================================================
No: 59	GFLOPS: 5.87 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696661018.06)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,8)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,3)
          for i.3 (0,2)
            vectorize j.3 (0,6)
              out = ...

==================================================
No: 60	GFLOPS: 3.96 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661018.34)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,3)
  for k.0 (0,12)
    for i.2 (0,6)
      for j.2 (0,2)
        for k.1 (0,2)
          for i.3 (0,4)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 61	GFLOPS: 29.79 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696661018.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.2 (0,3)
      for j_c.2 (0,12)
        out.local = ...
  for i.2 (0,3)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 62	GFLOPS: 13.43 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661018.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,96)
  out.local auto_unroll: 16
  for i_c.1 (0,3)
    for k.0 (0,24)
      vectorize j_c.3 (0,2)
        out.local = ...
  for i.1 (0,3)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 63	GFLOPS: 13.47 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696661018.96)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,192)
  for k.0 (0,3)
    for k.1 (0,8)
      for i.3 (0,3)
        out = ...

==================================================
No: 64	GFLOPS: 10.08 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696661019.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  out.local auto_unroll: 64
  for i_c.1 (0,3)
    for k.0 (0,12)
      for i_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,2)
      out = ...

Time elapsed for measurement: 25.53 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.14 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1914	fail_ct: 25	Time elapsed: 1.06
GA Iter: 0	Max score: 0.9985	Min score: 0.9374	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9857	#Pop: 128	#M+: 1380	#M-: 80
EvolutionarySearch		#s: 128	Time elapsed: 4.85
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 16.41 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661028.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,18)
  out.local auto_unroll: 16
  for j_c.1 (0,8)
    for k.1 (0,24)
      for i_c.3 (0,4)
        out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 66	GFLOPS: 6.43 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661029.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,96)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for k.1 (0,6)
      for i_c.3 (0,6)
        out.local = ...
  for i.2 (0,6)
    out = ...

==================================================
No: 67	GFLOPS: 9.10 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661029.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,192)
  for k.0 (0,6)
    for i_c.2 (0,3)
      for k.1 (0,4)
        out.local = ...
  for i.1 (0,3)
    out = ...

==================================================
No: 68	GFLOPS: 14.27 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696661029.48)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,192)
  for k.0 (0,24)
    for i.3 (0,3)
      out = ...

==================================================
No: 69	GFLOPS: 25.74 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661029.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,18)
  out.local auto_unroll: 16
  for k.0 (0,6)
    for j_c.2 (0,8)
      for k.1 (0,4)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 70	GFLOPS: 16.84 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661029.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,3)
  for i_c.1 (0,2)
    for k.0 (0,24)
      for j_c.2 (0,4)
        for i_c.3 (0,12)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 71	GFLOPS: 18.79 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661030.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,48)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for j_c.2 (0,6)
      for k.1 (0,6)
        vectorize j_c.3 (0,2)
          out.local = ...
  vectorize j.2 (0,12)
    out = ...

==================================================
No: 72	GFLOPS: 17.23 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661030.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,2)
    for i_c.2 (0,3)
      for j_c.2 (0,6)
        for k.1 (0,12)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,6)
    vectorize j.2 (0,6)
      out = ...

==================================================
No: 73	GFLOPS: 0.73 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661030.58)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,12)
    for j.2 (0,6)
      for k.1 (0,2)
        for i.3 (0,24)
          out = ...

==================================================
No: 74	GFLOPS: 18.94 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696661030.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,24)
    for k.0 (0,4)
     ................****************
 for j_c.2 (0,2)
        for k.1 (0,6)
          vectorize j_c.3 (0,3)
            out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,6)
      out = ...

==================================================
No: 75	GFLOPS: 9.59 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696661031.14)
==================================================
Placeholder: A, B
for j_c.1 (0,12)
  for k.0 (0,12)
    for i_c.2 (0,3)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,8)
            out.local = ...
for i.1 (0,24)
  vectorize j.1 (0,24)
    out = ...

==================================================
No: 76	GFLOPS: 27.57 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661031.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 64
  for k.0 (0,3)
    for i_c.2 (0,4)
      for k.1 (0,8)
        vectorize j_c.3 (0,24)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,24)
      out = ...

==================================================
No: 77	GFLOPS: 23.59 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.74, Tstamp:1696661031.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,24)
        for i_c.2 (0,3)
          for j_c.2 (0,6)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,6)
    for j.1 (0,24)
      out = ...

==================================================
No: 78	GFLOPS: 9.29 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696661032.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,144)
  for i.1 (0,2)
    for k.0 (0,6)
      for i_c.2 (0,2)
        for k.1 (0,4)
          out.local = ...
    for i.2 (0,2)
      out = ...

==================================================
No: 79	GFLOPS: 27.31 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696661032.27)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,72)
  for k.0 (0,3)
    for k.1 (0,8)
      for i.3 (0,4)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 80	GFLOPS: 21.23 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696661032.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,4)
      for k.1 (0,3)
        vectorize j_c.3 (0,12)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 81	GFLOPS: 14.64 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696661035.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,36)
  for i_c.1 (0,2)
    for k.0 (0,4)
      for k.1 (0,6)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 82	GFLOPS: 9.49 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661035.51)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,12)
  for k.0 (0,4)
    for i.2 (0,3)
      for k.1 (0,6)
        for i.3 (0,4)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 83	GFLOPS: 23.59 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661035.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,24)
        for i_c.2 (0,3)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,3)
              out.local = ...
  for i.1 (0,12)
    vectorize j.1 (0,6)
      out = ...

==================================================
No: 84	GFLOPS: 24.97 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661036.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 64
  for k.1 (0,24)
    for i_c.3 (0,12)
      vectorize j_c.3 (0,4)
        out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 85	GFLOPS: 13.67 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696661036.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,72)
  out.local auto_unroll: 64
  for k.0 (0,24)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 86	GFLOPS: 16.80 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696661036.35)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,96)
  for k.0 (0,2)
    for i.2 (0,3)
      for k.1 (0,12)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 87	GFLOPS: 18.22 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696661036.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,3)
      for i_c.2 (0,2)
        for k.1 (0,24)
          for i_c.3 (0,6)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,6)
      out = ...

==================================================
No: 88	GFLOPS: 28.79 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.62, Tstamp:1696661036.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,6)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,8)
      for j_c.2 (0,12)
        for k.1 (0,12)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 89	GFLOPS: 6.96 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696661037.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,192)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,3)
      for k.1 (0,3)
        out.local = ...
  for i.2 (0,3)
    out = ...

==================================================
No: 90	GFLOPS: 21.38 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.80, Tstamp:1696661037.44)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,3)
    for i.2 (0,12)
      for j.2 (0,4)
        for k.1 (0,8)
          for j.3 (0,6)
            out = ...

==================================================
No: 91	GFLOPS: 13.69 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696661037.57)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,24)
  out.local auto_unroll: 64
  for j_c.1 (0,12)
    for k.0 (0,3)
      for j_c.2 (0,2)
        for k.1 (0,8)
          out.local = ...
  for j.1 (0,24)
    out = ...

==================================================
No: 92	GFLOPS: 25.52 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696661037.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,12)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for k.0 (0,8)
      for j_c.2 (0,6)
        for k.1 (0,3)
          for i_c.3 (0,4)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,6....****
)
      out = ...

==================================================
No: 93	GFLOPS: 14.02 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696661038.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,3)
  out.local auto_unroll: 16
  for i_c.1 (0,6)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for i_c.2 (0,4)
          for j_c.2 (0,4)
            for k.1 (0,3)
              out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 94	GFLOPS: 25.10 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661038.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,12)
    for i_c.2 (0,6)
      for j_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,3)
              out.local = ...
  for i.2 (0,12)
    vectorize j.2 (0,12)
      out = ...

==================================================
No: 95	GFLOPS: 9.98 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696661038.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,6)
  for j.1 (0,2)
    for k.0 (0,2)
      for i.2 (0,2)
        for j.2 (0,4)
          for k.1 (0,12)
            for i.3 (0,2)
              vectorize j.3 (0,3)
                out = ...

==================================================
No: 96	GFLOPS: 3.43 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696661038.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,576)
  for k.1 (0,24)
    out.local = ...
  out = ...

==================================================
No: 97	GFLOPS: 11.91 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696661041.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,3)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for j_c.1 (0,8)
      for i_c.2 (0,3)
        for k.1 (0,24)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,24)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 98	GFLOPS: 11.18 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.71, Tstamp:1696661041.15)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,72)
  for k.0 (0,12)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,2)
          for i.3 (0,2)
            out = ...

==================================================
No: 99	GFLOPS: 18.45 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696661041.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,18)
  out.local auto_unroll: 16
  for j_c.1 (0,8)
    for k.0 (0,3)
      for k.1 (0,8)
        for i_c.3 (0,4)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 100	GFLOPS: 24.13 / 92.67	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696661041.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,12)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,24)
        vectorize j_c.3 (0,6)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,24)
      out = ...

Time elapsed for measurement: 16.44 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((24, 24), "float32"), B: T.Buffer((24, 24), "float32"), out: T.Buffer((24, 24), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        out_local = T.allocate([576], "float32", "local")
        out_local_1 = T.Buffer((576,), data=out_local, scope="local")
        for i_c_outer_inner_init, j_c_outer_inner_init in T.grid(24, 24):
            out_local_1[i_c_outer_inner_init * 24 + j_c_outer_inner_init] = T.float32(0)
        for k_outer, i_c_outer_inner, j_c_outer_inner, k_inner in T.grid(8, 24, 24, 3):
            cse_var_2: T.int32 = i_c_outer_inner * 24
            cse_var_1: T.int32 = cse_var_2 + j_c_outer_inner
            A_1 = T.Buffer((576,), data=A.data)
            B_1 = T.Buffer((576,), data=B.data)
            out_local_1[cse_var_1] = out_local_1[cse_var_1] + A_1[cse_var_2 + k_outer * 3 + k_inner] * B_1[k_outer * 72 + k_inner * 24 + j_c_outer_inner]
        for i_inner in range(24):
            cse_var_3: T.int32 = i_inner * 24
            out_1 = T.Buffer((576,), data=out.data)
            out_1[cse_var_3:cse_var_3 + 24] = out_local_1[cse_var_3:cse_var_3 + 24]
Execution time of this operator: max:0.346 us   median:0.343 us   min:0.341 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_local, = s.cache_write([out], "local")
out_local_i_c, out_local_j_c, out_local_k = tuple(out_local.op.axis) + tuple(out_local.op.reduce_axis)
out_local_i_c_o_i, out_local_i_c_i = s[out_local].split(out_local_i_c, factor=1)
out_local_i_c_o_o_i, out_local_i_c_o_i = s[out_local].split(out_local_i_c_o_i, factor=24)
out_local_i_c_o_o_o, out_local_i_c_o_o_i = s[out_local].split(out_local_i_c_o_o_i, factor=1)
out_local_j_c_o_i, out_local_j_c_i = s[out_local].split(out_local_j_c, factor=1)
out_local_j_c_o_o_i, out_local_j_c_o_i = s[out_local].split(out_local_j_c_o_i, factor=24)
out_local_j_c_o_o_o, out_local_j_c_o_o_i = s[out_local].split(out_local_j_c_o_o_i, factor=1)
out_local_k_o, out_local_k_i = s[out_local].split(out_local_k, factor=3)
s[out_local].reorder(out_local_i_c_o_o_o, out_local_j_c_o_o_o, out_local_i_c_o_o_i, out_local_j_c_o_o_i, out_local_k_o, out_local_i_c_o_i, out_local_j_c_o_i, out_local_k_i, out_local_i_c_i, out_local_j_c_i)
out_i_o_i, out_i_i = s[out].split(out_i, factor=24)
out_i_o_o, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_j_o_i, out_j_i = s[out].split(out_j, factor=24)
out_j_o_o, out_j_o_i = s[out].split(out_j_o_i, factor=1)
s[out].reorder(out_i_o_o, out_j_o_o, out_i_o_i, out_j_o_i, out_i_i, out_j_i)
s[out_local].compute_at(s[out], out_j_o_i)
out_i_o_o_j_o_o_fused_i_o_i_fused_j_o_i_fused = s[out].fuse(out_i_o_o, out_j_o_o, out_i_o_i, out_j_o_i)
s[out].parallel(out_i_o_o_j_o_o_fused_i_o_i_fused_j_o_i_fused)
s[out_local].pragma(out_local_i_c_o_o_o, "auto_unroll_max_step", 0)
s[out_local].pragma(out_local_i_c_o_o_o, "unroll_explicit", True)
s[out_local].vectorize(out_local_j_c_i)
s[out].vectorize(out_j_i)

