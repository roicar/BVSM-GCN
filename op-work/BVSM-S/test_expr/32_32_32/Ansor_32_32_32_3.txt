----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1885	fail_ct: 64	Time elapsed: 1.08
GA Iter: 0	Max score: 0.9996	Min score: 0.9367	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9874	#Pop: 128	#M+: 1375	#M-: 79
EvolutionarySearch		#s: 128	Time elapsed: 4.78
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [32, 32]
B = PLACEHOLDER [32, 32]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 8.31 / 8.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908270.32)
==================================================
Placeholder: A, B
for k.0 (0,4)
  for j_c.2 (0,32)
    for k.1 (0,8)
      for i_c.3 (0,32)
        out.local = ...
for i.2 (0,32)
  for j.2 (0,32)
    out = ...

==================================================
No: 2	GFLOPS: 27.47 / 27.47	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908270.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 3	GFLOPS: 56.38 / 56.38	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696908270.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for k.0 (0,8)
      for k.1 (0,4)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 4	GFLOPS: 62.62 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696908271.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for i_c.2 (0,16)
      for j_c.2 (0,16)
        for k.1 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 5	GFLOPS: 43.04 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908271.31)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.1 (0,32)
    for i.3 (0,4)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 6	GFLOPS: 13.14 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908271.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 7	GFLOPS: 56.80 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696908271.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for j_c.2 (0,16)
      for k.1 (0,4)
        for i_c.3 (0,8)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 8	GFLOPS: 17.85 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.74, Tstamp:1696908272.21)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for j.2 (0,8)
    for k.1 (0,32)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 9	GFLOPS: 10.95 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908272.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 10	GFLOPS: 7.78 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908272.76................****************
)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for k.1 (0,16)
      for i.3 (0,16)
        vectorize j.3 (0,8)
          out = ...

==================================================
No: 11	GFLOPS: 10.76 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.74, Tstamp:1696908272.89)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for k.1 (0,16)
      for i_c.3 (0,32)
        out.local = ...
  for i.2 (0,32)
    out = ...

==================================================
No: 12	GFLOPS: 10.89 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696908273.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,128)
  for j.1 (0,2)
    out.local auto_unroll: 16
    for k.0 (0,4)
      for i_c.2 (0,2)
        for k.1 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 13	GFLOPS: 16.79 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908273.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 16
  for i_c.2 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,32)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 14	GFLOPS: 32.80 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908273.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for j_c.1 (0,4)
    for k.0 (0,16)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,16)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 15	GFLOPS: 32.43 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696908273.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,4)
      for j_c.2 (0,8)
        for k.1 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 16	GFLOPS: 24.80 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908274.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,16)
        for i_c.2 (0,8)
          for j_c.2 (0,4)
            for k.1 (0,2)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 17	GFLOPS: 9.71 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696908276.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  for k.0 (0,32)
    for i.2 (0,2)
      for j.2 (0,2)
        out = ...

==================================================
No: 18	GFLOPS: 13.18 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908276.71)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,8)
          for i.3 (0,2)
            out = ...

==================================================
No: 19	GFLOPS: 16.19 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696908276.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,16)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 20	GFLOPS: 20.94 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.75, Tstamp:1696908277.12)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.0 (0,2)
    for i.2 (0,4)
      for k.1 (0,16)
        for i.3 (0,2)
          out = ...

==================================================
No: 21	GFLOPS: 57.91 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696908277.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.1 (0,32)
    for j_c.3 (0,32)
      out.local = ...
  for j.2 (0,32)
    out = ...

==================================================
No: 22	GFLOPS: 14.91 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908277.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,16)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 23	GFLOPS: 14.25 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908278.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 16
  for k.1 (0,32)
    vectorize j_c.3 (0,4)
      out.local = ...
  vectorize j.2 (0,4)
    out = ...

==================================================
No: 24	GFLOPS: 62.49 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908278.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,32)
    for i_c.2 (0,2)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 25	GFLOPS: 48.67 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908278.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 512
  for k.1 (0,32)
    for i_c.3 (0,2)
      vectorize j_c.3 (0,16)
        out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 26	GFLOPS: 23.22 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696908278.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,4)
    for j_c.1 (0,8)
      for k.0 (0,4)
        for i_c.2 (0,4)
          for j_c.2 (0,2)
            for k.1 (0,8)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,16)
    for j.1 (0,32)
      out = ...

==================================================
No: 27	GFLOPS: 18.11 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908279.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for k.1 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 28	GFLOPS: 34.25 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908279.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 16
  for j_c.1 (0,32)
    for ................****************
k.0 (0,16)
      for k.1 (0,2)
        out.local = ...
  vectorize j.1 (0,32)
    out = ...

==================================================
No: 29	GFLOPS: 12.07 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696908279.57)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for k.0 (0,8)
      for k.1 (0,4)
        for i_c.3 (0,16)
          out.local = ...
  for i.1 (0,32)
    out = ...

==================================================
No: 30	GFLOPS: 33.27 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908279.81)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,16)
    for j.2 (0,4)
      for k.1 (0,2)
        for i.3 (0,8)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 31	GFLOPS: 55.66 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696908280.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for k.0 (0,4)
    for i_c.2 (0,4)
      for k.1 (0,8)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,16)
            out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 32	GFLOPS: 24.83 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908280.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  out.local auto_unroll: 64
  for k.0 (0,32)
    for i_c.3 (0,8)
      out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 33	GFLOPS: 8.48 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696908283.37)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,512)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for k.1 (0,2)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 34	GFLOPS: 10.07 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.82, Tstamp:1696908283.66)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,64)
  for j.1 (0,2)
    for k.0 (0,16)
      for i.2 (0,8)
        for k.1 (0,2)
          out = ...

==================================================
No: 35	GFLOPS: 55.74 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.91, Tstamp:1696908283.90)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for i_c.1 (0,2)
  for k.0 (0,32)
    for i_c.2 (0,2)
      for i_c.3 (0,8)
        vectorize j_c.3 (0,32)
          out.local = ...
for i.1 (0,32)
  vectorize j.1 (0,32)
    out = ...

==================================================
No: 36	GFLOPS: 53.31 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908284.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,4)
          vectorize j_c.3 (0,16)
            out.local = ...
  for i.2 (0,2)
    for j.2 (0,32)
      out = ...

==================================================
No: 37	GFLOPS: 39.40 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.28, Tstamp:1696908284.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,4)
      for k.0 (0,16)
        for i_c.2 (0,4)
          for j_c.2 (0,2)
            for k.1 (0,2)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 38	GFLOPS: 11.38 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696908284.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,8)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 39	GFLOPS: 49.01 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908284.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,32)
    for j_c.2 (0,4)
      for i_c.3 (0,8)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 40	GFLOPS: 16.65 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908285.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 41	GFLOPS: 52.62 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908285.30)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for i.2 (0,4)
    for k.1 (0,32)
      vectorize j.3 (0,8)
        out = ...

==================================================
No: 42	GFLOPS: 45.39 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908285.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,4)
      for j_c.2 (0,8)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 43	GFLOPS: 31.02 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908285.81)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,256)
  for j.2 (0,4)
    for k.1 (0,32)
      out = ...

==================================================
No: 44	GFLOPS: 29.30 / 62.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908286.10)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,256)
  for k.1 (0,32)
    for i.3 (0,4)
      out = ...

==================================================
No: 45	GFLOPS: 66.29 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696908286.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,8)
    for k.0 (0,32)
      for j_c.2 (0,32)
        out.local = ...
  for i.1 (0,8)
    for j.1 (0,32)
      out = ...

==================================================
No: 46	GFLOPS: 56.73 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696908286.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,16)
    for j_c.2 (0,4)
      for k.1 (0,2)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,8)
    for j.2 (0,32)
      out = ...

==================================================
No: 47	GFLOPS: 47.85 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696908286.98)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,1................****************
6)
    for i.2 (0,2)
      for j.2 (0,8)
        for k.1 (0,2)
          out = ...

==================================================
No: 48	GFLOPS: 31.82 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.63, Tstamp:1696908287.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,16)
    for j_c.2 (0,2)
      for k.1 (0,32)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 49	GFLOPS: 28.47 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696908290.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,16)
          for k.1 (0,32)
            out.local = ...
  for i.1 (0,16)
    for j.1 (0,32)
      out = ...

==================================================
No: 50	GFLOPS: 18.94 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696908290.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,2)
    for j_c.1 (0,32)
      for k.0 (0,4)
        for i_c.2 (0,2)
          for k.1 (0,8)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,16)
    for j.1 (0,32)
      out = ...

==================================================
No: 51	GFLOPS: 18.75 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.85, Tstamp:1696908290.88)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for i.2 (0,8)
    for k.1 (0,32)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 52	GFLOPS: 45.26 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908291.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for j_c.1 (0,16)
    for k.0 (0,32)
      for i_c.2 (0,2)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    for j.1 (0,32)
      out = ...

==================================================
No: 53	GFLOPS: 30.74 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696908291.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 54	GFLOPS: 55.96 / 66.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.53, Tstamp:1696908291.67)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for j_c.2 (0,32)
      for k.1 (0,2)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,32)
      out = ...

==================================================
No: 55	GFLOPS: 67.10 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908291.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,2)
      for k.1 (0,16)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,16)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 56	GFLOPS: 23.54 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908292.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 16
  for k.0 (0,16)
    for j_c.2 (0,4)
      for k.1 (0,2)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,4)
      out = ...

==================================================
No: 57	GFLOPS: 27.62 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908292.41)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,8)
    for i_c.2 (0,4)
      for j_c.2 (0,4)
        for k.1 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 58	GFLOPS: 2.14 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908292.69)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,8)
    for i.2 (0,8)
      for k.1 (0,4)
        for i.3 (0,2)
          out = ...

==================================================
No: 59	GFLOPS: 50.16 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908292.95)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,4)
          for i.3 (0,4)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 60	GFLOPS: 11.86 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.08, Tstamp:1696908293.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for i_c.2 (0,8)
      for k.1 (0,32)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,32)
    out = ...

==================================================
No: 61	GFLOPS: 0.48 / 67.10	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.22, Tstamp:1696908293.21)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,32)
    for i.2 (0,4)
      for j.2 (0,2)
        for i.3 (0,8)
          out = ...

==================================================
No: 62	GFLOPS: 48.67 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908293.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,32)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 63	GFLOPS: 13.33 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908293.57)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,128)
  for j.1 (0,4)
    out.local auto_unroll: 64
    for k.0 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,4)
          out.local = ...
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 64	GFLOPS: 22.49 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908293.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,64)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for k.0 (0,32)
      for i_c.2 (0,2)
        for i_c.3 (0,4)
          out.local = ...
  for i.1 (0,16)
    out = ...

Time elapsed for measurement: 26.20 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.15 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1874	fail_ct: 59	Time elapsed: 1.17
GA Iter: 0	Max score: 0.9995	Min score: 0.9234	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9873	#Pop: 128	#M+: 1379	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.21
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 20.67 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908302.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,64)
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,8)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 66	GFLOPS: 58.76 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908303.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,8)
    for i_c.2 (0,2)
      for k.1 (0,4)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,32)
            out.local = ...
  for i.2 (0,8)
    for j.2 (0,32)
      out = ...

==================================================
No: 67	GFLOPS: 58.87 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696908303.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 64
  for k.0 (0,32)
    for i_c.3 (0,4)
      vectorize j_c.3 (0,8)
        out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 68	GFLOPS: 57.25 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696908303.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,16)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for k.1 (0,2)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 69	GFLOPS: 5.45 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908303.85)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for i.2 (0,32)
    for j.2 (0,4)
      for k.1 (0,32)
        out = ...

==================================================
No: 70	GFLOPS: 24.21 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908303.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for j_c.2 (0,2)
    for k.1 (0,32)
      for i_c.3 (0,32)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 71	GFLOPS: 43.96 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908304.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for k.0 (0,16)
      for i_c.2 (0,8)
        for j_c.2 (0,8)
          for k.1 (0,2)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 72	GFLOPS: 37.65 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908304.48)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,16)
    for j.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,2)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 73	GFLOPS: 29.15 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908304.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,16)
    for k.1 (0,2)
      for i_c.3 (0,32)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,4)
      out = ...

===========................****************
=======================================
No: 74	GFLOPS: 14.55 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908305.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,256)
  for k.0 (0,8)
    for j_c.2 (0,4)
      for k.1 (0,4)
        out.local = ...
  vectorize j.2 (0,4)
    out = ...

==================================================
No: 75	GFLOPS: 37.36 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696908305.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for k.0 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,8)
        for k.1 (0,16)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,16)
    for j.1 (0,32)
      out = ...

==================================================
No: 76	GFLOPS: 15.62 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908305.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 64
  for k.0 (0,16)
    for k.1 (0,2)
      vectorize j_c.3 (0,4)
        out.local = ...
  vectorize j.2 (0,4)
    out = ...

==================================================
No: 77	GFLOPS: 10.10 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696908305.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  for i.2 (0,2)
    for k.1 (0,32)
      for i.3 (0,2)
        out = ...

==================================================
No: 78	GFLOPS: 42.00 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908305.98)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,8)
    for i.2 (0,16)
      for j.2 (0,16)
        for k.1 (0,4)
          out = ...

==================================================
No: 79	GFLOPS: 19.81 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696908306.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for i_c.2 (0,16)
          for k.1 (0,4)
            out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 80	GFLOPS: 28.50 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908306.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  for j.1 (0,8)
    out.local auto_unroll: 512
    for k.0 (0,2)
      for k.1 (0,16)
        out.local = ...
    out = ...

==================================================
No: 81	GFLOPS: 59.98 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908309.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,16)
    for i_c.2 (0,8)
      for k.1 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,16)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 82	GFLOPS: 64.01 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908310.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i_c.2 (0,8)
    for k.1 (0,32)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 83	GFLOPS: 31.88 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908310.28)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for j.2 (0,4)
      for k.1 (0,8)
        for i.3 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 84	GFLOPS: 11.36 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696908310.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,16)
        for k.1 (0,32)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,32)
    for j.1 (0,16)
      out = ...

==================================================
No: 85	GFLOPS: 36.57 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.90, Tstamp:1696908310.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for i_c.2 (0,4)
          for k.1 (0,16)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,4)
                out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 86	GFLOPS: 27.04 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696908311.17)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 16
  for k.0 (0,32)
    for j_c.2 (0,4)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 87	GFLOPS: 22.96 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908311.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,32)
      for j_c.2 (0,2)
        for k.1 (0,16)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 88	GFLOPS: 15.08 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908311.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,8)
        for j_c.2 (0,2)
          for k.1 (0,16)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 89	GFLOPS: 32.02 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.34, Tstamp:1696908312.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,32)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 90	GFLOPS: 17.09 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908312.30)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,64)
  for i.2 (0,2)
    for j.2 (0,4)
      for k.1 (0,32)
        for i.3 (0,2)
          out = ...

==================================================
No: 91	GFLOPS: 37.10 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908312.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,8)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for i_c.2 (0,2)
          for j_c.2 (0,16)
            for k.1 (0,16)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,32)
      out = ...

==================================================
No: 92	GFLOPS: 11.01 / 67.10	results: MeasureResult(cost:[0.0000], error_n....****
o:0, all_cost:1.47, Tstamp:1696908312.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,16)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for j_c.2 (0,16)
          for k.1 (0,16)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,32)
      out = ...

==================================================
No: 93	GFLOPS: 21.97 / 67.10	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.79, Tstamp:1696908313.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,2)
      for k.1 (0,16)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 94	GFLOPS: 68.20 / 68.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908313.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 512
  for k.0 (0,32)
    for i_c.2 (0,8)
      for j_c.2 (0,16)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 95	GFLOPS: 43.69 / 68.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908313.56)
==================================================
Placeholder: A, B
out auto_unroll: 64
for k.0 (0,16)
  for i.2 (0,4)
    for k.1 (0,2)
      for i.3 (0,8)
        vectorize j.3 (0,32)
          out = ...

==================================================
No: 96	GFLOPS: 26.79 / 68.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696908313.69)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,32)
    for i.2 (0,4)
      for i.3 (0,8)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 97	GFLOPS: 50.58 / 68.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908315.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,16)
    for i_c.2 (0,2)
      for k.1 (0,32)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 98	GFLOPS: 17.34 / 68.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696908315.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,8)
    for j_c.1 (0,2)
      for k.0 (0,16)
        for i_c.2 (0,4)
          for j_c.2 (0,4)
            for k.1 (0,2)
              out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 99	GFLOPS: 48.49 / 68.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.72, Tstamp:1696908316.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,4)
      for k.0 (0,8)
        for i_c.2 (0,2)
          for k.1 (0,4)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,32)
      out = ...

==================================================
No: 100	GFLOPS: 16.67 / 68.20	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908316.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,32)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,4)
      out = ...

Time elapsed for measurement: 16.19 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((32, 32), "float32"), B: T.Buffer((32, 32), "float32"), out: T.Buffer((32, 32), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        out_local = T.allocate([1024], "float32", "local")
        out_local_1 = T.Buffer((1024,), data=out_local, scope="local")
        for i_c_outer_outer_inner in range(4):
            for j_c_outer_inner_init, i_c_inner_init in T.grid(4, 8):
                out_local_1[i_c_outer_outer_inner * 256 + i_c_inner_init * 32 + j_c_outer_inner_init * 8:i_c_outer_outer_inner * 256 + i_c_inner_init * 32 + j_c_outer_inner_init * 8 + 8] = T.Broadcast(T.float32(0), 8)
            for j_c_outer_inner, k_inner, i_c_inner in T.grid(4, 32, 8):
                cse_var_3: T.int32 = j_c_outer_inner * 8
                cse_var_2: T.int32 = i_c_outer_outer_inner * 256 + i_c_inner * 32
                cse_var_1: T.int32 = cse_var_2 + cse_var_3
                A_1 = T.Buffer((1024,), data=A.data)
                B_1 = T.Buffer((1024,), data=B.data)
                out_local_1[cse_var_1:cse_var_1 + 8] = out_local_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_2 + k_inner], 8) * B_1[k_inner * 32 + cse_var_3:k_inner * 32 + cse_var_3 + 8]
        for i_inner in range(32):
            cse_var_4: T.int32 = i_inner * 32
            out_1 = T.Buffer((1024,), data=out.data)
            out_1[cse_var_4:cse_var_4 + 32] = out_local_1[cse_var_4:cse_var_4 + 32]
Execution time of this operator: max:0.709 us   median:0.704 us   min:0.701 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_local, = s.cache_write([out], "local")
out_local_i_c, out_local_j_c, out_local_k = tuple(out_local.op.axis) + tuple(out_local.op.reduce_axis)
out_local_i_c_o_i, out_local_i_c_i = s[out_local].split(out_local_i_c, factor=8)
out_local_i_c_o_o_i, out_local_i_c_o_i = s[out_local].split(out_local_i_c_o_i, factor=1)
out_local_i_c_o_o_o, out_local_i_c_o_o_i = s[out_local].split(out_local_i_c_o_o_i, factor=4)
out_local_j_c_o_i, out_local_j_c_i = s[out_local].split(out_local_j_c, factor=8)
out_local_j_c_o_o_i, out_local_j_c_o_i = s[out_local].split(out_local_j_c_o_i, factor=4)
out_local_j_c_o_o_o, out_local_j_c_o_o_i = s[out_local].split(out_local_j_c_o_o_i, factor=1)
out_local_k_o, out_local_k_i = s[out_local].split(out_local_k, factor=32)
s[out_local].reorder(out_local_i_c_o_o_o, out_local_j_c_o_o_o, out_local_i_c_o_o_i, out_local_j_c_o_o_i, out_local_k_o, out_local_i_c_o_i, out_local_j_c_o_i, out_local_k_i, out_local_i_c_i, out_local_j_c_i)
out_i_o, out_i_i = s[out].split(out_i, factor=32)
out_j_o, out_j_i = s[out].split(out_j, factor=32)
s[out].reorder(out_i_o, out_j_o, out_i_i, out_j_i)
s[out_local].compute_at(s[out], out_j_o)
out_i_o_j_o_fused = s[out].fuse(out_i_o, out_j_o)
s[out].parallel(out_i_o_j_o_fused)
s[out_local].pragma(out_local_i_c_o_o_o, "auto_unroll_max_step", 0)
s[out_local].pragma(out_local_i_c_o_o_o, "unroll_explicit", True)
s[out_local].vectorize(out_local_j_c_i)
s[out].vectorize(out_j_i)

