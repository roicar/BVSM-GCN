----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1888	fail_ct: 52	Time elapsed: 1.09
GA Iter: 0	Max score: 0.9987	Min score: 0.9358	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9885	#Pop: 128	#M+: 1394	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 4.83
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [32, 32]
B = PLACEHOLDER [32, 32]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 27.05 / 27.05	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.25, Tstamp:1696908132.10)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,8)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 2	GFLOPS: 31.61 / 31.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908132.39)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,16)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,2)
          for i.3 (0,2)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 3	GFLOPS: 21.69 / 31.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.73, Tstamp:1696908132.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,8)
      for k.1 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 4	GFLOPS: 25.61 / 31.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696908132.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 5	GFLOPS: 11.87 / 31.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696908132.97)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@ (0,256)
  for k.0 (0,16)
    for j.2 (0,4)
      for k.1 (0,2)
        out = ...

==================================================
No: 6	GFLOPS: 67.13 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908133.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,8)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 7	GFLOPS: 27.38 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.38, Tstamp:1696908133.46)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for k.1 (0,8)
      for i.3 (0,16)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 8	GFLOPS: 32.29 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.81, Tstamp:1696908133.73)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,16)
    for i.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 9	GFLOPS: 17.68 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.93, Tstamp:1696908134.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for j_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,8)
          for k.1 (0,16)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 10	GFLOPS: 43.49 / 67.13	results: MeasureResult(cost:[0.000................****************
0], error_no:0, all_cost:0.47, Tstamp:1696908134.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for j_c.1 (0,2)
    for i_c.2 (0,8)
      for k.1 (0,32)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 11	GFLOPS: 46.60 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908134.59)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.1 (0,32)
    for i.3 (0,2)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 12	GFLOPS: 27.45 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908134.85)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,32)
    for i.2 (0,2)
      for j.2 (0,4)
        for i.3 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 13	GFLOPS: 23.63 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908135.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,8)
    for k.0 (0,16)
      for j_c.2 (0,8)
        for k.1 (0,2)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 14	GFLOPS: 49.08 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696908135.35)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for k.1 (0,16)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.2 (0,8)
    for j.2 (0,32)
      out = ...

==================================================
No: 15	GFLOPS: 51.44 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696908135.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,8)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for j_c.2 (0,8)
          for k.1 (0,8)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 16	GFLOPS: 61.60 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908135.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for j_c.2 (0,2)
          for k.1 (0,4)
            for i_c.3 (0,4)
              vectorize j_c.3 (0,4)
                out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 17	GFLOPS: 21.51 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908138.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 16
  for k.0 (0,16)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 18	GFLOPS: 33.96 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696908138.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,32)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 19	GFLOPS: 25.60 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696908138.66)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i.2 (0,4)
      for j.2 (0,16)
        for k.1 (0,16)
          for i.3 (0,2)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 20	GFLOPS: 48.75 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908138.89)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,2)
    for k.1 (0,16)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 21	GFLOPS: 62.04 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908139.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,32)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 22	GFLOPS: 17.57 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696908139.35)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,512)
  for k.0 (0,8)
    for i.2 (0,2)
      for k.1 (0,4)
        out = ...

==================================================
No: 23	GFLOPS: 12.87 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908139.63)
==================================================
Placeholder: A, B
for j.0 (0,16)
  for i_c.1 (0,16)
    for k.0 (0,16)
      for i_c.2 (0,2)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 24	GFLOPS: 7.60 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696908139.76)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,16)
    for j.2 (0,4)
      for k.1 (0,32)
        out = ...

==================================================
No: 25	GFLOPS: 63.61 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908139.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for j_c.2 (0,32)
      for k.1 (0,8)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,32)
      out = ...

==================================================
No: 26	GFLOPS: 45.34 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908140.19)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,8)
    for j.2 (0,16)
      for k.1 (0,4)
        for i.3 (0,8)
          out = ...

==================================================
No: 27	GFLOPS: 4.49 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908140.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,8)
    for i.2 (0,16)
      for k.1 (0,4)
        out = ...

==================================================
No: 28	GFLOPS: 27.09 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908140.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for ................****************
j_c.1 (0,2)
      for k.0 (0,16)
        for k.1 (0,2)
          for i_c.3 (0,8)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 29	GFLOPS: 16.11 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908141.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for i_c.2 (0,8)
    for j_c.2 (0,8)
      for k.1 (0,32)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 30	GFLOPS: 35.29 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908141.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,4)
      for j_c.2 (0,4)
        for k.1 (0,4)
          for i_c.3 (0,8)
            out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 31	GFLOPS: 14.18 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696908141.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 16
  for k.0 (0,16)
    for i_c.2 (0,4)
      for k.1 (0,2)
        out.local = ...
  for i.2 (0,4)
    out = ...

==================================================
No: 32	GFLOPS: 14.58 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908141.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,128)
  for j.1 (0,2)
    out.local auto_unroll: 512
    for k.0 (0,16)
      for j_c.2 (0,4)
        for k.1 (0,2)
          out.local = ...
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 33	GFLOPS: 13.52 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908143.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 64
  for i_c.2 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,32)
        for i_c.3 (0,4)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 34	GFLOPS: 34.64 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696908144.17)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.0 (0,8)
    for i.2 (0,2)
      for k.1 (0,4)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 35	GFLOPS: 38.45 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696908144.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,32)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,32)
      out = ...

==================================================
No: 36	GFLOPS: 48.77 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908144.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,16)
          for i_c.3 (0,16)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,32)
      out = ...

==================================================
No: 37	GFLOPS: 63.61 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908144.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,16)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 38	GFLOPS: 11.59 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908145.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i_c.2 (0,8)
      for j_c.2 (0,8)
        for k.1 (0,16)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,32)
    for j.2 (0,8)
      out = ...

==================================================
No: 39	GFLOPS: 10.15 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696908145.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 512
  for k.1 (0,32)
    for i_c.3 (0,4)
      out.local = ...
  for i.2 (0,4)
    out = ...

==================================================
No: 40	GFLOPS: 49.04 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908145.62)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for j.2 (0,16)
      for k.1 (0,8)
        for i.3 (0,2)
          out = ...

==================================================
No: 41	GFLOPS: 65.24 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908145.81)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,16)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,32)
      out = ...

==================================================
No: 42	GFLOPS: 18.23 / 67.13	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908146.05)
==================================================
Placeholder: A, B
parallel i.0@ (0,2)
  for j.0 (0,2)
    out.local auto_unroll: 16
    for j_c.1 (0,4)
      for k.0 (0,2)
        for i_c.2 (0,16)
          for j_c.2 (0,2)
            for k.1 (0,16)
              vectorize j_c.3 (0,2)
                out.local = ...
    for i.1 (0,16)
      vectorize j.1 (0,16)
        out = ...

==================================================
No: 43	GFLOPS: 70.29 / 70.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908146.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,16)
        for j_c.2 (0,16)
          for k.1 (0,2)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,32)
      out = ...

==================================================
No: 44	GFLOPS: 9.80 / 70.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696908146.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,64)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,32)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 45	GFLOPS: 86.17 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908146.78)
==================================================
Placeholder: A, B
for i_c.1 (0,4)
  for j_c.2 (0,4)
    for k.1 (0,32)
      for i_c.3 (0,8)
        vectorize j_c.3 (0,8)
          out.local = ...
for i.1 (0,32)
  vectorize j.1 (0,32)
    out = ...

==================================================
No: 46	GFLOPS: 53.16 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908147.07)
=====................****************
=============================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,32)
    for j_c.2 (0,4)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 47	GFLOPS: 49.76 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908147.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for i_c.2 (0,16)
    for k.1 (0,32)
      vectorize j_c.3 (0,8)
        out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 48	GFLOPS: 70.14 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908147.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for k.0 (0,8)
      for k.1 (0,4)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,32)
            out.local = ...
  for i.1 (0,8)
    for j.1 (0,32)
      out = ...

==================================================
No: 49	GFLOPS: 18.62 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908149.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,32)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for i_c.3 (0,16)
          out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 50	GFLOPS: 59.92 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908150.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,8)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 51	GFLOPS: 9.05 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908150.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,4)
      for k.1 (0,8)
        out.local = ...
  for i.2 (0,4)
    out = ...

==================================================
No: 52	GFLOPS: 37.16 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908150.42)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,32)
    for i.2 (0,8)
      for j.2 (0,2)
        for i.3 (0,2)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 53	GFLOPS: 14.16 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908150.70)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,1024)
  for k.0 (0,8)
    for k.1 (0,4)
      out = ...

==================================================
No: 54	GFLOPS: 63.05 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696908151.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,32)
    for i_c.2 (0,2)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,32)
          out.local = ...
  for i.1 (0,4)
    for j.1 (0,32)
      out = ...

==================================================
No: 55	GFLOPS: 39.35 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908151.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,32)
    for j_c.2 (0,16)
      vectorize j_c.3 (0,2)
        out.local = ...
  vectorize j.2 (0,32)
    out = ...

==================================================
No: 56	GFLOPS: 51.14 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908151.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,16)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,4)
    for j.2 (0,16)
      out = ...

==================================================
No: 57	GFLOPS: 9.65 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696908151.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,256)
  for i.1 (0,4)
    out.local auto_unroll: 512
    for k.0 (0,4)
      for k.1 (0,8)
        out.local = ...
    out = ...

==================================================
No: 58	GFLOPS: 61.69 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908151.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for k.1 (0,16)
      vectorize j_c.3 (0,32)
        out.local = ...
  vectorize j.2 (0,32)
    out = ...

==================================================
No: 59	GFLOPS: 8.67 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908152.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,512)
  for k.0 (0,8)
    for k.1 (0,4)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 60	GFLOPS: 10.88 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696908152.33)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for j.2 (0,16)
      for k.1 (0,8)
        for i.3 (0,8)
          out = ...

==================================================
No: 61	GFLOPS: 32.37 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908152.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for j_c.2 (0,16)
      for k.1 (0,16)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,32)
      out = ...

==================================================
No: 62	GFLOPS: 21.98 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908152.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,2)
      for k.1 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 63	GFLOPS: 43.19 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908153.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,16)
      for j_c.2 (0,8)
        for k.1 (0,2)
          for i_c.3 (0,4)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 64	GFLOPS: 48.23 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908153.35)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for j_c.1 (0,2)
    for k.0 (0,8)
      for i_c.2 (0,16)
        for k.1 (0,4)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

Time elapsed for measurement: 25.17 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.16 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1916	fail_ct: 50	Time elapsed: 1.19
GA Iter: 0	Max score: 0.9997	Min score: 0.9226	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9869	#Pop: 128	#M+: 1386	#M-: 72
EvolutionarySearch		#s: 128	Time elapsed: 5.32
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 42.94 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.36, Tstamp:1696908165.25)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,8)
  for i.2 (0,8)
    for j.2 (0,2)
      for k.1 (0,32)
        vectorize j.3 (0,8)
          out = ...

==================================================
No: 66	GFLOPS: 51.08 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908165.43)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,16)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.2 (0,4)
    for j.2 (0,32)
      out = ...

==================================================
No: 67	GFLOPS: 56.23 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908165.64)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.1 (0,32)
    vectorize j.3 (0,16)
      out = ...

==================================================
No: 68	GFLOPS: 50.92 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908165.84)
==================================================
Placeholder: A, B
parallel i.0@ (0,4)
  for j.1 (0,4)
    for i_c.2 (0,4)
      for k.1 (0,32)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,8)
            out.local = ...
    for i.2 (0,8)
      vectorize j.2 (0,8)
        out = ...

==================================================
No: 69	GFLOPS: 73.15 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908166.03)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,2)
    for j.2 (0,2)
      for k.1 (0,16)
        for i.3 (0,2)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 70	GFLOPS: 44.18 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908166.29)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,16)
          for i_c.3 (0,8)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 71	GFLOPS: 34.41 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696908166.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,4)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 72	GFLOPS: 22.69 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696908166.87)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,256)
  for k.0 (0,8)
    for i.2 (0,4)
      for k.1 (0,4)
        out = ...

==================================================
No: 73	GFLOPS: 5.93 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696908167.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.0 (0,2)
    for i.2 (0,4)
      for j.2 (0,2)
        for k.1 (0,16)
          out = ...

==================================================
No: 74	GFLOPS: 55.15 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.59, Tstamp:1696908167.35)
==================================================
Placeho................****************
lder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for j_c.2 (0,32)
      for k.1 (0,16)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    for j.2 (0,32)
      out = ...

==================================================
No: 75	GFLOPS: 13.22 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696908167.48)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,128)
  for i.2 (0,8)
    for k.1 (0,32)
      out = ...

==================================================
No: 76	GFLOPS: 12.60 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696908167.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  for k.0 (0,8)
    for k.1 (0,4)
      for j.3 (0,4)
        out = ...

==================================================
No: 77	GFLOPS: 44.55 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.87, Tstamp:1696908167.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 512
  for k.0 (0,32)
    for i_c.2 (0,4)
      for j_c.2 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 78	GFLOPS: 12.01 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908168.16)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,16)
    for i.2 (0,8)
      for j.2 (0,2)
        for k.1 (0,2)
          out = ...

==================================================
No: 79	GFLOPS: 38.65 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.66, Tstamp:1696908168.44)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@ (0,128)
  for k.0 (0,32)
    for i.2 (0,2)
      for j.2 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 80	GFLOPS: 25.67 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908168.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,8)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 81	GFLOPS: 61.21 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696908173.67)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for j_c.2 (0,2)
    for k.1 (0,32)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.2 (0,4)
    for j.2 (0,32)
      out = ...

==================================================
No: 82	GFLOPS: 11.44 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696908173.81)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,8)
    for k.1 (0,32)
      for i.3 (0,4)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 83	GFLOPS: 62.36 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.81, Tstamp:1696908174.16)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,32)
  for j.1 (0,2)
    for k.0 (0,8)
      for i.2 (0,2)
        for k.1 (0,4)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 84	GFLOPS: 66.50 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908174.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,8)
        vectorize j_c.3 (0,32)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,32)
      out = ...

==================================================
No: 85	GFLOPS: 16.57 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696908174.63)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for j_c.1 (0,4)
    for j_c.2 (0,4)
      for k.1 (0,32)
        for i_c.3 (0,32)
          out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 86	GFLOPS: 30.67 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908174.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for j_c.2 (0,8)
      for k.1 (0,16)
        for i_c.3 (0,8)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 87	GFLOPS: 25.45 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908175.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,4)
      for i_c.2 (0,16)
        for j_c.2 (0,4)
          for k.1 (0,8)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 88	GFLOPS: 17.47 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696908175.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for j_c.2 (0,8)
          for k.1 (0,4)
            for i_c.3 (0,8)
              out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 89	GFLOPS: 14.65 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.84, Tstamp:1696908175.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,16)
    for j_c.1 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,32)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 90	GFLOPS: 15.70 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.77, Tstamp:1696908176.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for k.1 (0,4)
      for i_c.3 (0,8)
        out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 91	GFLOPS: 36.38 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.07, Tstamp:1696908176.21)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@ (0,4)
  for i.1 (0,2)
    for k.0 (0,4)
      for i.2 (0,2)
        for j.2 (0,32)
          for k.1 (0,8)
            for i.3 (0,2)
              out = ...

==================================================
No: 92	GFLOPS: 22.27 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908176.48)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,256)
  for j.2 (0,4)
    for k.1 (0,32)
      out = ...

==================================================
No: 93	GFLOPS: 46.09 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696908176.82)
==================================================
Placeholder: A, B
parallel i.0@ (0,2)
  out.l....****
ocal auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,4)
      for k.0 (0,2)
        for j_c.2 (0,8)
          for k.1 (0,16)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,32)
      out = ...

==================================================
No: 94	GFLOPS: 34.28 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696908177.09)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,128)
  for i.2 (0,2)
    for k.1 (0,32)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 95	GFLOPS: 39.48 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.04, Tstamp:1696908177.29)
==================================================
Placeholder: A, B
parallel i.0@ (0,16)
  for j.0 (0,2)
    out.local auto_unroll: 512
    for i_c.1 (0,2)
      for k.0 (0,8)
        for j_c.2 (0,4)
          for k.1 (0,4)
            vectorize j_c.3 (0,4)
              out.local = ...
    for i.1 (0,2)
      vectorize j.1 (0,16)
        out = ...

==================================================
No: 96	GFLOPS: 46.63 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908177.56)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,16)
    for k.1 (0,2)
      for i.3 (0,8)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 97	GFLOPS: 10.31 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908179.68)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,256)
  for k.0 (0,8)
    for i.2 (0,2)
      for k.1 (0,4)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 98	GFLOPS: 23.17 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908179.94)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.0 (0,4)
    for k.1 (0,8)
      for i.3 (0,8)
        out = ...

==================================================
No: 99	GFLOPS: 41.84 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908180.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 64
  for j_c.1 (0,8)
    for k.0 (0,16)
      for i_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 100	GFLOPS: 16.42 / 86.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.73, Tstamp:1696908180.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for j_c.1 (0,2)
    for k.0 (0,32)
      for i_c.2 (0,16)
        for j_c.2 (0,8)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

Time elapsed for measurement: 20.37 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((32, 32), "float32"), B: T.Buffer((32, 32), "float32"), out: T.Buffer((32, 32), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        out_local = T.allocate([1024], "float32", "local")
        out_local_1 = T.Buffer((1024,), data=out_local, scope="local")
        for i_c_outer_outer_inner in range(4):
            for j_c_outer_inner_init, i_c_inner_init in T.grid(4, 8):
                out_local_1[i_c_outer_outer_inner * 256 + i_c_inner_init * 32 + j_c_outer_inner_init * 8:i_c_outer_outer_inner * 256 + i_c_inner_init * 32 + j_c_outer_inner_init * 8 + 8] = T.Broadcast(T.float32(0), 8)
            for j_c_outer_inner, k_inner, i_c_inner in T.grid(4, 32, 8):
                cse_var_3: T.int32 = j_c_outer_inner * 8
                cse_var_2: T.int32 = i_c_outer_outer_inner * 256 + i_c_inner * 32
                cse_var_1: T.int32 = cse_var_2 + cse_var_3
                A_1 = T.Buffer((1024,), data=A.data)
                B_1 = T.Buffer((1024,), data=B.data)
                out_local_1[cse_var_1:cse_var_1 + 8] = out_local_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_2 + k_inner], 8) * B_1[k_inner * 32 + cse_var_3:k_inner * 32 + cse_var_3 + 8]
        for i_inner in range(32):
            cse_var_4: T.int32 = i_inner * 32
            out_1 = T.Buffer((1024,), data=out.data)
            out_1[cse_var_4:cse_var_4 + 32] = out_local_1[cse_var_4:cse_var_4 + 32]
Execution time of this operator: max:0.703 us   median:0.698 us   min:0.694 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_local, = s.cache_write([out], "local")
out_local_i_c, out_local_j_c, out_local_k = tuple(out_local.op.axis) + tuple(out_local.op.reduce_axis)
out_local_i_c_o_i, out_local_i_c_i = s[out_local].split(out_local_i_c, factor=8)
out_local_i_c_o_o_i, out_local_i_c_o_i = s[out_local].split(out_local_i_c_o_i, factor=1)
out_local_i_c_o_o_o, out_local_i_c_o_o_i = s[out_local].split(out_local_i_c_o_o_i, factor=4)
out_local_j_c_o_i, out_local_j_c_i = s[out_local].split(out_local_j_c, factor=8)
out_local_j_c_o_o_i, out_local_j_c_o_i = s[out_local].split(out_local_j_c_o_i, factor=4)
out_local_j_c_o_o_o, out_local_j_c_o_o_i = s[out_local].split(out_local_j_c_o_o_i, factor=1)
out_local_k_o, out_local_k_i = s[out_local].split(out_local_k, factor=32)
s[out_local].reorder(out_local_i_c_o_o_o, out_local_j_c_o_o_o, out_local_i_c_o_o_i, out_local_j_c_o_o_i, out_local_k_o, out_local_i_c_o_i, out_local_j_c_o_i, out_local_k_i, out_local_i_c_i, out_local_j_c_i)
out_i_o, out_i_i = s[out].split(out_i, factor=32)
out_j_o, out_j_i = s[out].split(out_j, factor=32)
s[out].reorder(out_i_o, out_j_o, out_i_i, out_j_i)
s[out_local].compute_at(s[out], out_j_o)
out_i_o_j_o_fused = s[out].fuse(out_i_o, out_j_o)
s[out].parallel(out_i_o_j_o_fused)
s[out_local].pragma(out_local_i_c_o_o_o, "auto_unroll_max_step", 0)
s[out_local].pragma(out_local_i_c_o_o_o, "unroll_explicit", True)
s[out_local].vectorize(out_local_j_c_i)
s[out].vectorize(out_j_i)

