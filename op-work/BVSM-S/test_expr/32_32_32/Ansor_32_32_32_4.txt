----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1896	fail_ct: 44	Time elapsed: 1.10
GA Iter: 0	Max score: 0.9995	Min score: 0.9214	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9877	#Pop: 128	#M+: 1381	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 4.92
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [32, 32]
B = PLACEHOLDER [32, 32]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 44.50 / 44.50	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.02, Tstamp:1696908406.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,32)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 2	GFLOPS: 11.45 / 44.50	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908406.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 16
  for i_c.2 (0,16)
    for j_c.2 (0,2)
      for k.1 (0,32)
        out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 3	GFLOPS: 28.78 / 44.50	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908406.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for k.1 (0,8)
      for i_c.3 (0,32)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 4	GFLOPS: 40.95 / 44.50	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908407.13)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,16)
    for i.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,2)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 5	GFLOPS: 61.79 / 61.79	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696908407.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,16)
    for k.0 (0,8)
      for k.1 (0,4)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,16)
            out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 6	GFLOPS: 34.32 / 61.79	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908407.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,2)
      for k.1 (0,16)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 7	GFLOPS: 19.79 / 61.79	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908407.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,8)
        for i_c.3 (0,16)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 8	GFLOPS: 64.69 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696908408.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,32)
    for j_c.2 (0,32)
      for i_c.3 (0,4)
        out.local = ...
  for i.2 (0,4)
    for j.2 (0,32)
      out = ...

==================================================
No: 9	GFLOPS: 16.85 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908408.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,8)
      for k.1 (0,16)
        out.local = ...
  for i.1 (0,8)
    out = ...

==================================================
No: 10	GFLOPS: 42.13 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tst................****************
amp:1696908408.80)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,16)
    for k.1 (0,2)
      for i.3 (0,32)
        vectorize j.3 (0,8)
          out = ...

==================================================
No: 11	GFLOPS: 17.69 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908409.06)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,16)
    for i.2 (0,4)
      for j.2 (0,8)
        for k.1 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 12	GFLOPS: 13.59 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908409.35)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,256)
  for i.2 (0,4)
    for k.1 (0,32)
      out = ...

==================================================
No: 13	GFLOPS: 40.65 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908409.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 64
  for k.0 (0,32)
    for i_c.2 (0,8)
      for j_c.2 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 14	GFLOPS: 52.38 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908409.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i_c.2 (0,2)
    for k.1 (0,32)
      for i_c.3 (0,8)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 15	GFLOPS: 46.71 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908410.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for k.0 (0,2)
    for j_c.2 (0,8)
      for k.1 (0,16)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 16	GFLOPS: 32.24 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696908410.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 512
  for k.0 (0,16)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,8)
            out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 17	GFLOPS: 18.13 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.56, Tstamp:1696908421.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for k.0 (0,4)
      for j_c.2 (0,16)
        for k.1 (0,8)
          out.local = ...
  for i.1 (0,4)
    for j.1 (0,16)
      out = ...

==================================================
No: 18	GFLOPS: 58.37 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.46, Tstamp:1696908421.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,16)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 19	GFLOPS: 13.24 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696908421.64)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  for k.0 (0,2)
    for j.2 (0,2)
      for k.1 (0,16)
        for i.3 (0,2)
          out = ...

==================================================
No: 20	GFLOPS: 60.39 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908421.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,16)
    for k.0 (0,4)
      for k.1 (0,8)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 21	GFLOPS: 31.27 / 64.69	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.42, Tstamp:1696908422.13)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,8)
    for k.1 (0,4)
      for i.3 (0,16)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 22	GFLOPS: 67.53 / 67.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908422.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for k.1 (0,8)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,32)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,32)
      out = ...

==================================================
No: 23	GFLOPS: 27.39 / 67.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908422.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,32)
    for k.0 (0,16)
      for j_c.2 (0,16)
        for k.1 (0,2)
          out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 24	GFLOPS: 76.18 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696908422.71)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for k.1 (0,4)
      for i.3 (0,8)
        vectorize j.3 (0,8)
          out = ...

==================================================
No: 25	GFLOPS: 34.63 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908422.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,8)
      for k.0 (0,32)
        for i_c.2 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 26	GFLOPS: 4.55 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:9.13, Tstamp:1696908423.27)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for j_c.1 (0,2)
  for k.0 (0,32)
    for i_c.2 (0,16)
      for j_c.2 (0,16)
        for i_c.3 (0,2)
          out.local = ...
for i.1 (0,32)
  for j.1 (0,32)
    out = ...

==================================================
No: 27	GFLOPS: 47.02 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908423.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for j_c.2 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 28	GFLOPS: 33.05 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696908423.76)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,32)
    for i.2 (0,4)
      for j.2 (0,16)
        vectorize j.3 (0,2)
          out = ...

=========................****************
=========================================
No: 29	GFLOPS: 60.76 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.72, Tstamp:1696908423.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 512
  for i_c.2 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,32)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,16)
            out.local = ...
  for i.2 (0,4)
    for j.2 (0,32)
      out = ...

==================================================
No: 30	GFLOPS: 28.17 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696908424.16)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,128)
  for j_c.1 (0,8)
    for k.0 (0,16)
      for k.1 (0,2)
        out.local = ...
  vectorize j.1 (0,8)
    out = ...

==================================================
No: 31	GFLOPS: 30.31 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908424.43)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for j.2 (0,4)
    for k.1 (0,32)
      for i.3 (0,8)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 32	GFLOPS: 57.47 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908424.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,4)
      for k.0 (0,32)
        for j_c.2 (0,8)
          for i_c.3 (0,4)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,32)
      out = ...

==================================================
No: 33	GFLOPS: 26.78 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696908427.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 64
  for k.0 (0,32)
    for i_c.2 (0,8)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 34	GFLOPS: 55.23 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908428.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 64
  for k.0 (0,16)
    for i_c.2 (0,16)
      for j_c.2 (0,32)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,16)
    for j.2 (0,32)
      out = ...

==================================================
No: 35	GFLOPS: 43.95 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908428.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,32)
      for j_c.2 (0,16)
        out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 36	GFLOPS: 28.20 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908428.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,32)
    for i_c.2 (0,32)
      vectorize j_c.3 (0,4)
        out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 37	GFLOPS: 17.73 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908428.84)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,32)
    for i.3 (0,16)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 38	GFLOPS: 58.99 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908429.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,8)
      for i_c.2 (0,8)
        for k.1 (0,4)
          vectorize j_c.3 (0,16)
            out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 39	GFLOPS: 28.16 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.48, Tstamp:1696908429.26)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for j.2 (0,8)
      for k.1 (0,8)
        for i.3 (0,8)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 40	GFLOPS: 4.87 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696908429.39)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,32)
    for i.2 (0,16)
      for j.2 (0,4)
        out = ...

==================================================
No: 41	GFLOPS: 17.52 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.55, Tstamp:1696908429.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,8)
    for j_c.1 (0,4)
      for k.0 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,8)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 42	GFLOPS: 58.89 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908429.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,16)
    for k.0 (0,2)
      for k.1 (0,16)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 43	GFLOPS: 8.55 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696908429.89)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,16)
    for i.2 (0,2)
      for j.2 (0,16)
        for k.1 (0,2)
          for i.3 (0,4)
            out = ...

==================================================
No: 44	GFLOPS: 24.49 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696908430.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,16)
          for i.3 (0,2)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 45	GFLOPS: 32.48 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908430.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for i_c.2 (0,32)
      for k.1 (0,16)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 46	GFLOPS: 29.79 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908430.75)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,256)
  for k.0 (0,16)
    for j.2 (0,4)
      for k.1 (0,2)
        out = ...

==================================================
No: 47	GFLOPS: 10.42 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908431.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,256)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,16)
        out.local = ...
  vectorize j.2 (0,4)
    out = ...

==========................****************
========================================
No: 48	GFLOPS: 60.48 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908431.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.2 (0,16)
    for k.1 (0,32)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,16)
          out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 49	GFLOPS: 31.71 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.14, Tstamp:1696908434.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,8)
    for k.0 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 50	GFLOPS: 54.26 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.61, Tstamp:1696908434.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for j_c.2 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,8)
    for j.2 (0,32)
      out = ...

==================================================
No: 51	GFLOPS: 11.06 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696908434.81)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@ (0,2)
  for j.0 (0,2)
    for i.1 (0,16)
      for j.1 (0,8)
        for k.0 (0,8)
          for j.2 (0,2)
            for k.1 (0,4)
              out = ...

==================================================
No: 52	GFLOPS: 4.01 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908435.09)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,4)
  for j_c.1 (0,16)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,32)
          out.local = ...
for i.1 (0,32)
  for j.1 (0,32)
    out = ...

==================================================
No: 53	GFLOPS: 16.38 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908435.37)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for j_c.2 (0,8)
      for k.1 (0,16)
        out.local = ...
  vectorize j.2 (0,8)
    out = ...

==================================================
No: 54	GFLOPS: 8.13 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908435.66)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,16)
    for i.2 (0,8)
      for j.2 (0,8)
        for k.1 (0,2)
          out = ...

==================================================
No: 55	GFLOPS: 12.98 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908435.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 64
  for k.0 (0,32)
    for j_c.2 (0,4)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 56	GFLOPS: 58.07 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908436.19)
==================================================
Placeholder: A, B
out auto_unroll: 64
for k.0 (0,8)
  for i.2 (0,16)
    for j.2 (0,8)
      for k.1 (0,4)
        for i.3 (0,2)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 57	GFLOPS: 29.72 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.23, Tstamp:1696908436.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 58	GFLOPS: 64.23 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.80, Tstamp:1696908436.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 59	GFLOPS: 51.60 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696908436.90)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for j.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,8)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 60	GFLOPS: 20.74 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.26, Tstamp:1696908437.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for i_c.2 (0,4)
          for k.1 (0,16)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 61	GFLOPS: 58.43 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908437.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,8)
          vectorize j_c.3 (0,16)
            out.local = ...
  for i.2 (0,4)
    for j.2 (0,32)
      out = ...

==================================================
No: 62	GFLOPS: 1.00 / 76.18	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.23, Tstamp:1696908437.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,16)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,2)
          for i.3 (0,16)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 63	GFLOPS: 32.23 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908437.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 64
  for k.0 (0,16)
    for i_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 64	GFLOPS: 54.63 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696908437.99)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for j.2 (0,16)
      for k.1 (0,8)
        for i.3 (0,8)
          out = ...

Time elapsed for measurement: 34.42 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.13 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1894	fail_ct: 47	Time elapsed: 1.11
GA Iter: 0	Max score: 0.9997	Min score: 0.9357	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9872	#Pop: 128	#M+: 1385	#M-: 71
EvolutionarySearch		#s: 128	Time elapsed: 5.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 9.51 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908449.68)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,1024)
  for k.1 (0,32)
    out = ...

==================================================
No: 66	GFLOPS: 62.16 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908449.88)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,4)
    for k.1 (0,32)
      for i.3 (0,2)
        vectorize j.3 (0,8)
          out = ...

==================================================
No: 67	GFLOPS: 19.10 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908450.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,2)
    for k.1 (0,16)
      for i_c.3 (0,16)
        out.local = ...
  for i.2 (0,16)
    out = ...

==================================================
No: 68	GFLOPS: 16.52 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.55, Tstamp:1696908450.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,128)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (0,2)
      for k.1 (0,16)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 69	GFLOPS: 41.28 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696908450.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.1 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,32)
        for i_c.3 (0,16)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.1 (0,16)
    for j.1 (0,32)
      out = ...

==================================================
No: 70	GFLOPS: 74.34 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696908450.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for i_c.1 (0,2)
    for k.0 (0,16)
      for i_c.2 (0,2)
        for k.1 (0,2)
          vectorize j_c.3 (0,32)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,32)
      out = ...

==================================================
No: 71	GFLOPS: 15.70 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696908451.11)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,32)
    for i.2 (0,2)
      for i.3 (0,16)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 72	GFLOPS: 11.36 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696908451.24)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,2)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,16)
          for i.3 (0,4)
            out = ...

==================================================
No: 73	GFLOPS: 29.74 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.26, Tstamp:1696908451.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,4)
      for k.0 (0,32)
        for i_c.2 (0,2)
          for j_c.2 (0,2)
            for i_c.3 (0,4)
              vectorize j_c.3 (0,4)
                out.local = ...
  for i.1 (0,16)
    for j.1 (0,32)
      out = ...

==================================================
No: 74	GFLOPS: 40.55 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.90, Tstamp:1696908451.79)
==================================================
Placeholder:................****************
 A, B
out.local auto_unroll: 512
for i_c.1 (0,4)
  for k.0 (0,4)
    for i_c.2 (0,8)
      for j_c.2 (0,32)
        for k.1 (0,8)
          out.local = ...
for i.1 (0,32)
  for j.1 (0,32)
    out = ...

==================================================
No: 75	GFLOPS: 48.17 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696908452.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,32)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,16)
      out = ...

==================================================
No: 76	GFLOPS: 8.99 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908452.33)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,512)
  for k.0 (0,2)
    for k.1 (0,16)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 77	GFLOPS: 17.21 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696908452.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,2)
    for i_c.2 (0,16)
      for j_c.2 (0,2)
        for k.1 (0,16)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,32)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 78	GFLOPS: 16.83 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696908452.88)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,32)
    for i.2 (0,2)
      for j.2 (0,8)
        for i.3 (0,2)
          out = ...

==================================================
No: 79	GFLOPS: 14.00 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908453.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,8)
        for i_c.3 (0,32)
          out.local = ...
  for i.1 (0,32)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 80	GFLOPS: 38.08 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908453.28)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.0 (0,4)
    for j.2 (0,4)
      for k.1 (0,8)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 81	GFLOPS: 27.10 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908456.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 16
  for k.0 (0,16)
    for j_c.2 (0,8)
      for k.1 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for j.2 (0,16)
    out = ...

==================================================
No: 82	GFLOPS: 16.42 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908456.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  for j.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,16)
        for j_c.2 (0,2)
          for k.1 (0,16)
            out.local = ...
    for i.2 (0,16)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 83	GFLOPS: 46.38 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696908457.01)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,128)
  for k.0 (0,4)
    for i.2 (0,2)
      for k.1 (0,8)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 84	GFLOPS: 40.38 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696908457.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,32)
    for j_c.2 (0,8)
      for i_c.3 (0,8)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 85	GFLOPS: 17.60 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696908457.59)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i.2 (0,16)
    for j.2 (0,4)
      for k.1 (0,32)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 86	GFLOPS: 34.83 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696908457.92)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,16)
    for i.2 (0,4)
      for j.2 (0,16)
        for k.1 (0,2)
          out = ...

==================================================
No: 87	GFLOPS: 39.00 / 76.18	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696908458.17)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@ (0,8)
  for j.0 (0,8)
    for i.1 (0,4)
      for k.0 (0,2)
        for j.2 (0,4)
          for k.1 (0,16)
            out = ...

==================================================
No: 88	GFLOPS: 80.46 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696908458.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i.1 (0,4)
    for k.0 (0,4)
      for j.2 (0,32)
        for k.1 (0,8)
          for i.3 (0,2)
            out = ...

==================================================
No: 89	GFLOPS: 49.75 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908458.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for j.1 (0,8)
    for k.0 (0,16)
      for i_c.2 (0,8)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
    for i.2 (0,8)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 90	GFLOPS: 20.42 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908458.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,128)
  for j.1 (0,2)
    out.local auto_unroll: 64
    for k.0 (0,32)
      for j_c.2 (0,2)
        for i_c.3 (0,2)
          out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 91	GFLOPS: 45.60 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.56, Tstamp:1696908459.33)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for j_c.1 (0,2)
    for k.0 (0,16)
      for k.1 (0,2)
        for i_c.3 (0,16)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.1 (0,16)
    vectorize j.1 (0,16)
      out = ...

==================================================
No: 92	GFLOPS: 21.20 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908459.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,512)
  for k.0 (0,2)
    for j.2 (0,2)
      for k.1 (0,16)
        out = ...

==================================================
No: 93	GFLOPS: 44.32 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696908459.75)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,4)
    for i.2 (0,4)
      for k.1 (0,8)
        vectorize j.3 (0,4)
          out = ...

================================....****
==================
No: 94	GFLOPS: 48.29 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696908460.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for j_c.1 (0,8)
    for k.0 (0,8)
      for j_c.2 (0,4)
        for k.1 (0,4)
          for i_c.3 (0,8)
            out.local = ...
  for i.1 (0,8)
    for j.1 (0,32)
      out = ...

==================================================
No: 95	GFLOPS: 17.34 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908460.29)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,256)
  out.local auto_unroll: 512
  for k.1 (0,32)
    vectorize j_c.3 (0,4)
      out.local = ...
  vectorize j.2 (0,4)
    out = ...

==================================================
No: 96	GFLOPS: 19.58 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.19, Tstamp:1696908460.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for i_c.2 (0,8)
    for k.1 (0,32)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,16)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 97	GFLOPS: 29.41 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696908463.18)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,128)
  for k.0 (0,2)
    for j.2 (0,4)
      for k.1 (0,16)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 98	GFLOPS: 4.88 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.93, Tstamp:1696908463.31)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,128)
  for k.0 (0,32)
    for j.2 (0,4)
      for i.3 (0,2)
        out = ...

==================================================
No: 99	GFLOPS: 31.19 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696908463.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  out.local auto_unroll: 64
  for j_c.1 (0,4)
    for k.0 (0,8)
      for k.1 (0,4)
        for i_c.3 (0,8)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 100	GFLOPS: 15.00 / 80.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696908463.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,8)
    for i_c.2 (0,8)
      for k.1 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,16)
    out = ...

Time elapsed for measurement: 19.25 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((32, 32), "float32"), B: T.Buffer((32, 32), "float32"), out: T.Buffer((32, 32), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        out_local = T.allocate([1024], "float32", "local")
        out_local_1 = T.Buffer((1024,), data=out_local, scope="local")
        for i_c_outer_outer_inner in range(4):
            for j_c_outer_inner_init, i_c_inner_init in T.grid(4, 8):
                out_local_1[i_c_outer_outer_inner * 256 + i_c_inner_init * 32 + j_c_outer_inner_init * 8:i_c_outer_outer_inner * 256 + i_c_inner_init * 32 + j_c_outer_inner_init * 8 + 8] = T.Broadcast(T.float32(0), 8)
            for j_c_outer_inner, k_inner, i_c_inner in T.grid(4, 32, 8):
                cse_var_3: T.int32 = j_c_outer_inner * 8
                cse_var_2: T.int32 = i_c_outer_outer_inner * 256 + i_c_inner * 32
                cse_var_1: T.int32 = cse_var_2 + cse_var_3
                A_1 = T.Buffer((1024,), data=A.data)
                B_1 = T.Buffer((1024,), data=B.data)
                out_local_1[cse_var_1:cse_var_1 + 8] = out_local_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_2 + k_inner], 8) * B_1[k_inner * 32 + cse_var_3:k_inner * 32 + cse_var_3 + 8]
        for i_inner in range(32):
            cse_var_4: T.int32 = i_inner * 32
            out_1 = T.Buffer((1024,), data=out.data)
            out_1[cse_var_4:cse_var_4 + 32] = out_local_1[cse_var_4:cse_var_4 + 32]
Execution time of this operator: max:0.698 us   median:0.688 us   min:0.685 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_local, = s.cache_write([out], "local")
out_local_i_c, out_local_j_c, out_local_k = tuple(out_local.op.axis) + tuple(out_local.op.reduce_axis)
out_local_i_c_o_i, out_local_i_c_i = s[out_local].split(out_local_i_c, factor=8)
out_local_i_c_o_o_i, out_local_i_c_o_i = s[out_local].split(out_local_i_c_o_i, factor=1)
out_local_i_c_o_o_o, out_local_i_c_o_o_i = s[out_local].split(out_local_i_c_o_o_i, factor=4)
out_local_j_c_o_i, out_local_j_c_i = s[out_local].split(out_local_j_c, factor=8)
out_local_j_c_o_o_i, out_local_j_c_o_i = s[out_local].split(out_local_j_c_o_i, factor=4)
out_local_j_c_o_o_o, out_local_j_c_o_o_i = s[out_local].split(out_local_j_c_o_o_i, factor=1)
out_local_k_o, out_local_k_i = s[out_local].split(out_local_k, factor=32)
s[out_local].reorder(out_local_i_c_o_o_o, out_local_j_c_o_o_o, out_local_i_c_o_o_i, out_local_j_c_o_o_i, out_local_k_o, out_local_i_c_o_i, out_local_j_c_o_i, out_local_k_i, out_local_i_c_i, out_local_j_c_i)
out_i_o, out_i_i = s[out].split(out_i, factor=32)
out_j_o, out_j_i = s[out].split(out_j, factor=32)
s[out].reorder(out_i_o, out_j_o, out_i_i, out_j_i)
s[out_local].compute_at(s[out], out_j_o)
out_i_o_j_o_fused = s[out].fuse(out_i_o, out_j_o)
s[out].parallel(out_i_o_j_o_fused)
s[out_local].pragma(out_local_i_c_o_o_o, "auto_unroll_max_step", 0)
s[out_local].pragma(out_local_i_c_o_o_o, "unroll_explicit", True)
s[out_local].vectorize(out_local_j_c_i)
s[out].vectorize(out_j_i)

