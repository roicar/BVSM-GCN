----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1938	fail_ct: 19	Time elapsed: 1.11
GA Iter: 0	Max score: 0.9997	Min score: 0.9365	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9875	#Pop: 128	#M+: 1386	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.28
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [40, 40]
B = PLACEHOLDER [40, 40]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 5.66 / 5.66	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696730645.00)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,5)
    for i.2 (0,20)
      for j.2 (0,5)
        for k.1 (0,8)
          for i.3 (0,2)
            out = ...

==================================================
No: 2	GFLOPS: 30.81 / 30.81	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.71, Tstamp:1696730645.29)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,400)
  for k.0 (0,20)
    for k.1 (0,2)
      for j.3 (0,4)
        out = ...

==================================================
No: 3	GFLOPS: 54.84 / 54.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696730645.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,80)
  for k.0 (0,4)
    for j.2 (0,20)
      for k.1 (0,10)
        out = ...

==================================================
No: 4	GFLOPS: 47.80 / 54.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.69, Tstamp:1696730645.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,5)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,5)
              out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 5	GFLOPS: 14.88 / 54.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.66, Tstamp:1696730646.01)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,320)
  for j.1 (0,5)
    for k.0 (0,4)
      for k.1 (0,10)
        out = ...

==================================================
No: 6	GFLOPS: 3.53 / 54.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730646.29)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,40)
  for k.0 (0,20)
    for j.2 (0,8)
      for k.1 (0,2)
        for i.3 (0,5)
          out = ...

==================================================
No: 7	GFLOPS: 43.45 / 54.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.60, Tstamp:1696730646.51)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,5)
    for i.2 (0,20)
      for k.1 (0,8)
        vectorize j.3 (0,5)
          out = ...

==================================================
No: 8	GFLOPS: 38.25 / 54.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696730646.63)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,10)
  for i.1 (0,4)
    for j.1 (0,10)
      for k.0 (0,40)
        for j_c.2 (0,4)
          out.local = ...
      vectorize j.2 (0,4)
        out = ...

==================================================
No: 9	GFLOPS: 6.93 / 54.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730646.92)
==================================================
Placeholder: A, B
for i_c.1 (0,4)
  for j_c.1 (0,40)
    for i_c.2 (0,2)
      for k.1 (0,40)
        for i_c.3 (0,5)
          out.local = ...
for i.1 (0,40)
  vectorize j.1 (0,40)
    out = ...

==================================================
No: 10	GFLOPS: 26.63 / 54.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696730647.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,200)
  out.local auto_unroll: 64
  for k.0 (0,40)
    for j_c.2 (0,4)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 11	GFLOPS: 49.87 / 54.84	results................****************
: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696730647.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 64
  for k.0 (0,5)
    for j_c.2 (0,4)
      for k.1 (0,8)
        vectorize j_c.3 (0,10)
          out.local = ...
  vectorize j.2 (0,40)
    out = ...

==================================================
No: 12	GFLOPS: 86.53 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696730647.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for j_c.1 (0,4)
    for k.0 (0,40)
      for i_c.2 (0,5)
        for j_c.2 (0,2)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,5)
              out.local = ...
  for i.1 (0,10)
    for j.1 (0,40)
      out = ...

==================================================
No: 13	GFLOPS: 38.68 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730647.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,40)
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,10)
        for k.1 (0,10)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,10)
      out = ...

==================================================
No: 14	GFLOPS: 8.70 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696730647.98)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,8)
    for i.2 (0,10)
      for j.2 (0,10)
        for k.1 (0,5)
          for i.3 (0,2)
            out = ...

==================================================
No: 15	GFLOPS: 56.41 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696730648.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,5)
  out.local auto_unroll: 512
  for i_c.1 (0,10)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for k.1 (0,40)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 16	GFLOPS: 14.43 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730648.47)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,2)
    for i.2 (0,5)
      for j.2 (0,5)
        for k.1 (0,20)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 17	GFLOPS: 47.16 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696730651.55)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,160)
  for j.2 (0,2)
    for k.1 (0,40)
      vectorize j.3 (0,5)
        out = ...

==================================================
No: 18	GFLOPS: 3.69 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696730651.69)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,40)
    for i.2 (0,10)
      for j.2 (0,10)
        for i.3 (0,2)
          out = ...

==================================================
No: 19	GFLOPS: 51.64 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.64, Tstamp:1696730651.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.1 (0,2)
    for k.0 (0,8)
      for i_c.2 (0,20)
        for j_c.2 (0,4)
          for k.1 (0,5)
            vectorize j_c.3 (0,5)
              out.local = ...
  for i.1 (0,20)
    for j.1 (0,40)
      out = ...

==================================================
No: 20	GFLOPS: 74.09 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696730652.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,80)
  for k.0 (0,8)
    for j.2 (0,5)
      for k.1 (0,5)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 21	GFLOPS: 33.07 / 86.53	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696730652.43)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,5)
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,10)
        for i_c.2 (0,10)
          for j_c.2 (0,2)
            for k.1 (0,4)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 22	GFLOPS: 90.40 / 90.40	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696730652.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,8)
    for i_c.2 (0,10)
      for k.1 (0,5)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,10)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 23	GFLOPS: 95.61 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696730653.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for k.0 (0,8)
    for k.1 (0,5)
      for i_c.3 (0,5)
        for j_c.3 (0,40)
          out.local = ...
  for i.1 (0,5)
    for j.1 (0,40)
      out = ...

==================================================
No: 24	GFLOPS: 24.67 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696730653.37)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,200)
  out.local auto_unroll: 64
  for k.0 (0,20)
    for i_c.2 (0,8)
      for k.1 (0,2)
        out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 25	GFLOPS: 55.81 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696730653.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 16
  for k.0 (0,40)
    for i_c.2 (0,10)
      for j_c.2 (0,2)
        vectorize j_c.3 (0,5)
          out.local = ...
  for i.2 (0,10)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 26	GFLOPS: 58.79 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730653.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,10)
    for i_c.2 (0,2)
      for j_c.2 (0,20)
        for k.1 (0,4)
          for i_c.3 (0,10)
            out.local = ...
  for i.2 (0,20)
    vectorize j.2 (0,20)
      out = ...

==================================================
No: 27	GFLOPS: 24.45 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696730654.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,20)
    for k.0 (0,10)
      for j_c.2 (0,10)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,20)
      out = ...

==================================================
No: 28	GFLOPS: 61.53 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.99, Tstamp:1696730654.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,10)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,5)
      for k.0 (0,20)
        for j_c.2 (0,8)
          for k.1 (0,2)
            out.local = ...
  for i.1 (0,4)
    for j.1 (0,40)
      out = ...

==================================================
No: 29	GFLOPS: 39.56 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696730654.41)
==================================================
Placeholder: A, B
out aut................****************
o_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,2)
    for i.2 (0,10)
      for k.1 (0,20)
        for i.3 (0,2)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 30	GFLOPS: 9.47 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696730654.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,10)
          for i_c.3 (0,10)
            vectorize j_c.3 (0,10)
              out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

==================================================
No: 31	GFLOPS: 25.79 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730654.77)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,5)
    for j.2 (0,20)
      for k.1 (0,40)
        out = ...

==================================================
No: 32	GFLOPS: 18.42 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696730654.90)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,40)
  for k.0 (0,40)
    for i.2 (0,2)
      for i.3 (0,2)
        vectorize j.3 (0,10)
          out = ...

==================================================
No: 33	GFLOPS: 27.68 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730657.48)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,8)
    for i.2 (0,10)
      for k.1 (0,5)
        vectorize j.3 (0,20)
          out = ...

==================================================
No: 34	GFLOPS: 8.41 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696730657.61)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,5)
        for k.1 (0,10)
          for i.3 (0,5)
            out = ...

==================================================
No: 35	GFLOPS: 72.49 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696730657.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 512
  for k.0 (0,40)
    for j_c.2 (0,20)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    for j.2 (0,20)
      out = ...

==================================================
No: 36	GFLOPS: 0.87 / 95.61	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.27, Tstamp:1696730658.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,5)
    for i.2 (0,2)
      for j.2 (0,5)
        for k.1 (0,8)
          for i.3 (0,5)
            out = ...

==================================================
No: 37	GFLOPS: 25.61 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696730658.37)
==================================================
Placeholder: A, B
for j_c.1 (0,2)
  for k.0 (0,8)
    for i_c.2 (0,20)
      for j_c.2 (0,4)
        for k.1 (0,5)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,5)
              out.local = ...
for i.1 (0,40)
  for j.1 (0,40)
    out = ...

==================================================
No: 38	GFLOPS: 7.77 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696730658.50)
==================================================
Placeholder: A, B
out.local auto_unroll: 64
for k.0 (0,8)
  for j_c.2 (0,40)
    for k.1 (0,5)
      for i_c.3 (0,40)
        out.local = ...
for i.2 (0,40)
  vectorize j.2 (0,40)
    out = ...

==================================================
No: 39	GFLOPS: 13.04 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696730658.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,400)
  for j.1 (0,2)
    out.local auto_unroll: 512
    for k.0 (0,40)
      for j_c.2 (0,2)
        out.local = ...
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 40	GFLOPS: 35.13 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730659.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,160)
  for k.0 (0,10)
    for j_c.2 (0,5)
      for k.1 (0,4)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,5)
      out = ...

==================================================
No: 41	GFLOPS: 18.81 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.18, Tstamp:1696730659.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,400)
  for k.0 (0,40)
    vectorize j_c.3 (0,4)
      out.local = ...
  vectorize j.2 (0,4)
    out = ...

==================================================
No: 42	GFLOPS: 33.79 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696730659.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,160)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,10)
        for i_c.3 (0,5)
          out.local = ...
  for i.1 (0,5)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 43	GFLOPS: 40.04 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730659.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 16
  for j_c.2 (0,10)
    for k.1 (0,40)
      vectorize j_c.3 (0,4)
        out.local = ...
  for j.2 (0,40)
    out = ...

==================================================
No: 44	GFLOPS: 46.98 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696730660.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,80)
  for j_c.1 (0,2)
    for k.0 (0,8)
      for j_c.2 (0,5)
        for k.1 (0,5)
          vectorize j_c.3 (0,2)
            out.local = ...
  for j.1 (0,20)
    out = ...

==================================================
No: 45	GFLOPS: 10.65 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730660.20)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,40)
  for k.0 (0,20)
    for i.2 (0,20)
      for k.1 (0,2)
        for i.3 (0,2)
          out = ...

==================================================
No: 46	GFLOPS: 18.44 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696730660.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,10)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,20)
      for i_c.2 (0,5)
        for j_c.2 (0,2)
          for k.1 (0,2)
            for i_c.3 (0,8)
              out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 47	GFLOPS: 30.04 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696730660.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,5)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for j_c.2 (0,2)
          for k.1 (0,5)
            for i_c.3 (0,10)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 48	GFLOPS: 35.10 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696730660.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  o................****************
ut.local auto_unroll: 16
  for i_c.1 (0,20)
    for j_c.1 (0,4)
      for k.0 (0,40)
        for j_c.2 (0,5)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,20)
    for j.1 (0,40)
      out = ...

==================================================
No: 49	GFLOPS: 4.86 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696730664.68)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,10)
  for k.0 (0,20)
    for i.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,20)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 50	GFLOPS: 56.41 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.31, Tstamp:1696730664.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,20)
        for k.1 (0,2)
          for i_c.3 (0,10)
            for j_c.3 (0,20)
              out.local = ...
  for i.1 (0,20)
    for j.1 (0,40)
      out = ...

==================================================
No: 51	GFLOPS: 8.79 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730665.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,800)
  out.local auto_unroll: 512
  for k.0 (0,40)
    for j_c.2 (0,2)
      out.local = ...
  vectorize j.2 (0,2)
    out = ...

==================================================
No: 52	GFLOPS: 39.24 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.68, Tstamp:1696730665.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,10)
    for j_c.1 (0,10)
      for k.0 (0,2)
        for i_c.2 (0,2)
          for j_c.2 (0,4)
            for k.1 (0,20)
              out.local = ...
  for i.1 (0,20)
    for j.1 (0,40)
      out = ...

==================================================
No: 53	GFLOPS: 34.06 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696730665.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,200)
  out.local auto_unroll: 16
  for k.0 (0,10)
    for j_c.2 (0,2)
      for k.1 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  vectorize j.2 (0,8)
    out = ...

==================================================
No: 54	GFLOPS: 14.50 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730665.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,20)
  for i.1 (0,8)
    for j.1 (0,10)
      for k.0 (0,5)
        for k.1 (0,8)
          out.local = ...
      out = ...

==================================================
No: 55	GFLOPS: 32.29 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696730666.13)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,10)
    for i.2 (0,5)
      for j.2 (0,10)
        for k.1 (0,4)
          out = ...

==================================================
No: 56	GFLOPS: 53.44 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.81, Tstamp:1696730666.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  out.local auto_unroll: 512
  for k.0 (0,10)
    for i_c.2 (0,2)
      for j_c.2 (0,20)
        for k.1 (0,4)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,20)
      out = ...

==================================================
No: 57	GFLOPS: 28.51 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696730666.64)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,20)
  out.local auto_unroll: 16
  for i_c.1 (0,5)
    for k.0 (0,10)
      for i_c.2 (0,8)
        for j_c.2 (0,2)
          for k.1 (0,4)
            out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 58	GFLOPS: 46.56 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696730666.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,50)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,40)
      for j_c.2 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 59	GFLOPS: 63.48 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.80, Tstamp:1696730667.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for k.1 (0,40)
      for i_c.3 (0,10)
        for j_c.3 (0,40)
          out.local = ...
  for i.2 (0,20)
    for j.2 (0,40)
      out = ...

==================================================
No: 60	GFLOPS: 43.99 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.75, Tstamp:1696730667.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,10)
      for j_c.2 (0,10)
        for k.1 (0,5)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,40)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 61	GFLOPS: 21.94 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696730667.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for j_c.1 (0,10)
    for k.0 (0,40)
      for i_c.2 (0,4)
        for i_c.3 (0,10)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

==================================================
No: 62	GFLOPS: 35.51 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730668.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,10)
  for j_c.1 (0,10)
    for k.0 (0,20)
      for i_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,20)
      out = ...

==================================================
No: 63	GFLOPS: 38.39 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696730668.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  out.local auto_unroll: 16
  for i_c.2 (0,2)
    for j_c.2 (0,10)
      for k.1 (0,40)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,40)
      out = ...

==================================================
No: 64	GFLOPS: 32.78 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730668.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,5)
  for k.0 (0,8)
    for i_c.2 (0,10)
      for j_c.2 (0,4)
        for k.1 (0,5)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,40)
    vectorize j.2 (0,8)
      out = ...

Time elapsed for measurement: 26.99 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.14 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1930	fail_ct: 20	Time elapsed: 1.21
GA Iter: 0	Max score: 0.9999	Min score: 0.9342	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9886	#Pop: 128	#M+: 1376	#M-: 85
EvolutionarySearch		#s: 128	Time elapsed: 5.24
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 43.06 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696730677.64)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,10)
    for i_c.2 (0,5)
      for j_c.2 (0,4)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,10)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 66	GFLOPS: 17.88 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730677.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,800)
  for k.0 (0,20)
    for i.2 (0,2)
      for k.1 (0,2)
        out = ...

==================================================
No: 67	GFLOPS: 52.24 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696730678.26)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,5)
  for k.0 (0,40)
    for i_c.2 (0,40)
      vectorize j_c.3 (0,8)
        out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 68	GFLOPS: 50.09 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696730678.39)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,200)
  for k.0 (0,40)
    for i.2 (0,2)
      for i.3 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 69	GFLOPS: 60.05 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730678.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,40)
  for i_c.1 (0,2)
    for k.0 (0,20)
      for i_c.2 (0,5)
        for k.1 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,10)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 70	GFLOPS: 7.91 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696730678.80)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,160)
  for j.1 (0,5)
    for j.2 (0,2)
      for k.1 (0,40)
        out = ...

==================================================
No: 71	GFLOPS: 43.01 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696730679.03)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i.2 (0,2)
    for j.2 (0,4)
      for k.1 (0,40)
        for i.3 (0,10)
          vectorize j.3 (0,5)
            out = ...

==================================================
No: 72	GFLOPS: 28.42 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696730679.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,40)
      for k.1 (0,10)
        vectorize j_c.3 (0,10)
          out.local = ...
  for i.2 (0,40)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 73	GFLOPS: 40.28 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730679.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,100)
  out.local auto_unroll: 64
  for k.0 (0,5)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,8)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 74	GFLOPS: 59.87 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696730679.58)
==================================================
Placeholder: A, B
out auto_unroll: 51................****************
2
parallel i.0@j.0@i.1@j.1@ (0,80)
  for k.0 (0,10)
    for j.2 (0,4)
      for k.1 (0,4)
        vectorize j.3 (0,5)
          out = ...

==================================================
No: 75	GFLOPS: 58.80 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730679.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,4)
    for j_c.2 (0,20)
      for k.1 (0,10)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,20)
      out = ...

==================================================
No: 76	GFLOPS: 2.31 / 95.61	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.22, Tstamp:1696730679.96)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for k.1 (0,20)
      for i.3 (0,40)
        vectorize j.3 (0,10)
          out = ...

==================================================
No: 77	GFLOPS: 33.48 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696730680.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i_c.2 (0,2)
    for j_c.2 (0,5)
      for k.1 (0,40)
        for i_c.3 (0,20)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,40)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 78	GFLOPS: 22.44 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696730680.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 16
  for i_c.2 (0,2)
    for j_c.2 (0,40)
      for k.1 (0,40)
        for i_c.3 (0,10)
          out.local = ...
  for i.2 (0,20)
    for j.2 (0,40)
      out = ...

==================================================
No: 79	GFLOPS: 60.86 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696730680.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,80)
  out.local auto_unroll: 16
  for k.0 (0,10)
    for i_c.2 (0,4)
      for k.1 (0,4)
        vectorize j_c.3 (0,5)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,5)
      out = ...

==================================================
No: 80	GFLOPS: 31.49 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.53, Tstamp:1696730681.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,20)
    for j_c.1 (0,4)
      for k.0 (0,5)
        for k.1 (0,8)
          vectorize j_c.3 (0,10)
            out.local = ...
  for i.1 (0,20)
    for j.1 (0,40)
      out = ...

==================================================
No: 81	GFLOPS: 5.12 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696730683.77)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,10)
  for k.0 (0,20)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,2)
          for i.3 (0,5)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 82	GFLOPS: 45.22 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.63, Tstamp:1696730684.11)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,160)
  for i.2 (0,2)
    for k.1 (0,40)
      vectorize j.3 (0,5)
        out = ...

==================================================
No: 83	GFLOPS: 13.93 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696730684.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,2)
    for j_c.1 (0,10)
      for k.0 (0,5)
        for i_c.2 (0,5)
          for j_c.2 (0,2)
            for k.1 (0,8)
              for i_c.3 (0,4)
                out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

==================================================
No: 84	GFLOPS: 60.42 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730684.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  out.local auto_unroll: 16
  for k.0 (0,5)
    for i_c.2 (0,2)
      for j_c.2 (0,10)
        for k.1 (0,8)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,2)
    for j.2 (0,40)
      out = ...

==================================================
No: 85	GFLOPS: 30.07 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696730684.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,5)
  out.local auto_unroll: 16
  for j_c.1 (0,4)
    for k.0 (0,20)
      for i_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,10)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 86	GFLOPS: 49.02 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730684.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,5)
  out.local auto_unroll: 16
  for i_c.2 (0,8)
    for j_c.2 (0,40)
      for k.1 (0,40)
        out.local = ...
  for i.1 (0,8)
    for j.1 (0,40)
      out = ...

==================================================
No: 87	GFLOPS: 52.94 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696730684.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,5)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for k.1 (0,20)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,5)
              out.local = ...
  for i.2 (0,8)
    for j.2 (0,40)
      out = ...

==================================================
No: 88	GFLOPS: 49.71 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696730685.33)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,5)
  for i_c.1 (0,8)
    for j_c.1 (0,40)
      for k.0 (0,4)
        for k.1 (0,10)
          out.local = ...
  for i.1 (0,8)
    for j.1 (0,40)
      out = ...

==================================================
No: 89	GFLOPS: 17.99 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696730685.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  out.local auto_unroll: 64
  for k.0 (0,40)
    for i_c.3 (0,8)
      vectorize j_c.3 (0,10)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 90	GFLOPS: 29.00 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730685.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for i_c.1 (0,10)
    for j_c.1 (0,5)
      for k.0 (0,40)
        for j_c.2 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,20)
    vectorize j.1 (0,10)
      out = ...

==================================================
No: 91	GFLOPS: 59.58 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.65, Tstamp:1696730685.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,5)
      for k.1 (0,5)
        vectorize j_c.3 (0,10)
          out.local = ...
  for i.2 (0,5)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 92	GFLOPS: 20.74 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696730686.10)
==================================================
Placeholder: A, B
parallel i.....****
0@j.0@i.1@j.1@ (0,100)
  for k.0 (0,5)
    for j.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,8)
          out = ...

==================================================
No: 93	GFLOPS: 39.07 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696730686.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,4)
  for j.1 (0,4)
    for i_c.2 (0,10)
      for k.1 (0,40)
        vectorize j_c.3 (0,10)
          out.local = ...
    for i.2 (0,10)
      vectorize j.2 (0,10)
        out = ...

==================================================
No: 94	GFLOPS: 74.25 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730686.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,20)
  out.local auto_unroll: 16
  for j_c.1 (0,5)
    for k.0 (0,8)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,5)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,2)
    for j.1 (0,40)
      out = ...

==================================================
No: 95	GFLOPS: 71.96 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.59, Tstamp:1696730686.90)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,80)
  for k.0 (0,5)
    for i.2 (0,4)
      for k.1 (0,8)
        vectorize j.3 (0,5)
          out = ...

==================================================
No: 96	GFLOPS: 21.46 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730687.17)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,800)
  for k.0 (0,2)
    for k.1 (0,20)
      for i.3 (0,2)
        out = ...

==================================================
No: 97	GFLOPS: 45.94 / 95.61	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696730688.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  for k.0 (0,20)
    for i.2 (0,5)
      for k.1 (0,2)
        for i.3 (0,2)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 98	GFLOPS: 103.95 / 103.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696730689.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,10)
  for k.0 (0,40)
    for j.2 (0,40)
      for i.3 (0,4)
        out = ...

==================================================
No: 99	GFLOPS: 36.12 / 103.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730689.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,40)
  for i_c.1 (0,2)
    for j_c.1 (0,5)
      for k.0 (0,20)
        for j_c.2 (0,2)
          for k.1 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,2)
    for j.1 (0,20)
      out = ...

==================================================
No: 100	GFLOPS: 34.84 / 103.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696730689.90)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,320)
  for k.0 (0,40)
    for i.2 (0,5)
      out = ...

Time elapsed for measurement: 14.70 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((40, 40), "float32"), B: T.Buffer((40, 40), "float32"), out: T.Buffer((40, 40), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(40):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 40
            out_1 = T.Buffer((1600,), data=out.data)
            out_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 8:cse_var_1 + 8 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 16:cse_var_1 + 16 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 24:cse_var_1 + 24 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 32:cse_var_1 + 32 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer in range(10):
                cse_var_10: T.int32 = k_outer * 160
                cse_var_9: T.int32 = cse_var_1 + 8
                cse_var_8: T.int32 = cse_var_1 + 32
                cse_var_7: T.int32 = cse_var_1 + 24
                cse_var_6: T.int32 = cse_var_1 + 16
                cse_var_5: T.int32 = cse_var_1 + k_outer * 4
                cse_var_4: T.int32 = cse_var_5 + 3
                cse_var_3: T.int32 = cse_var_5 + 2
                cse_var_2: T.int32 = cse_var_5 + 1
                A_1 = T.Buffer((1600,), data=A.data)
                B_1 = T.Buffer((1600,), data=B.data)
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_5], 8) * B_1[cse_var_10:cse_var_10 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_2], 8) * B_1[cse_var_10 + 40:cse_var_10 + 40 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_3], 8) * B_1[cse_var_10 + 80:cse_var_10 + 80 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_4], 8) * B_1[cse_var_10 + 120:cse_var_10 + 120 + 8]
                out_1[cse_var_9:cse_var_9 + 8] = out_1[cse_var_9:cse_var_9 + 8] + T.Broadcast(A_1[cse_var_5], 8) * B_1[cse_var_10 + 8:cse_var_10 + 8 + 8]
                out_1[cse_var_9:cse_var_9 + 8] = out_1[cse_var_9:cse_var_9 + 8] + T.Broadcast(A_1[cse_var_2], 8) * B_1[cse_var_10 + 48:cse_var_10 + 48 + 8]
                out_1[cse_var_9:cse_var_9 + 8] = out_1[cse_var_9:cse_var_9 + 8] + T.Broadcast(A_1[cse_var_3], 8) * B_1[cse_var_10 + 88:cse_var_10 + 88 + 8]
                out_1[cse_var_9:cse_var_9 + 8] = out_1[cse_var_9:cse_var_9 + 8] + T.Broadcast(A_1[cse_var_4], 8) * B_1[cse_var_10 + 128:cse_var_10 + 128 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_5], 8) * B_1[cse_var_10 + 16:cse_var_10 + 16 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_2], 8) * B_1[cse_var_10 + 56:cse_var_10 + 56 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_3], 8) * B_1[cse_var_10 + 96:cse_var_10 + 96 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_4], 8) * B_1[cse_var_10 + 136:cse_var_10 + 136 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_5], 8) * B_1[cse_var_10 + 24:cse_var_10 + 24 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_2], 8) * B_1[cse_var_10 + 64:cse_var_10 + 64 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_3], 8) * B_1[cse_var_10 + 104:cse_var_10 + 104 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_4], 8) * B_1[cse_var_10 + 144:cse_var_10 + 144 + 8]
                out_1[cse_var_8:cse_var_8 + 8] = out_1[cse_var_8:cse_var_8 + 8] + T.Broadcast(A_1[cse_var_5], 8) * B_1[cse_var_10 + 32:cse_var_10 + 32 + 8]
                out_1[cse_var_8:cse_var_8 + 8] = out_1[cse_var_8:cse_var_8 + 8] + T.Broadcast(A_1[cse_var_2], 8) * B_1[cse_var_10 + 72:cse_var_10 + 72 + 8]
                out_1[cse_var_8:cse_var_8 + 8] = out_1[cse_var_8:cse_var_8 + 8] + T.Broadcast(A_1[cse_var_3], 8) * B_1[cse_var_10 + 112:cse_var_10 + 112 + 8]
                out_1[cse_var_8:cse_var_8 + 8] = out_1[cse_var_8:cse_var_8 + 8] + T.Broadcast(A_1[cse_var_4], 8) * B_1[cse_var_10 + 152:cse_var_10 + 152 + 8]
Execution time of this operator: max:1.057 us   median:1.039 us   min:1.029 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=1)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=8)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=5)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=4)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 64)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

