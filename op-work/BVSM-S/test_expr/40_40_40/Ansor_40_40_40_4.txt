----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1932	fail_ct: 21	Time elapsed: 1.08
GA Iter: 0	Max score: 0.9998	Min score: 0.9378	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9861	#Pop: 128	#M+: 1388	#M-: 69
EvolutionarySearch		#s: 128	Time elapsed: 5.23
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [40, 40]
B = PLACEHOLDER [40, 40]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 16.43 / 16.43	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696730037.86)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,10)
  for i.2 (0,40)
    for j.2 (0,2)
      for k.1 (0,40)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 2	GFLOPS: 23.84 / 23.84	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.70, Tstamp:1696730038.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,100)
  for j.1 (0,2)
    out.local auto_unroll: 512
    for k.0 (0,8)
      for i_c.2 (0,2)
        for k.1 (0,5)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 3	GFLOPS: 52.98 / 52.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696730038.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,40)
    for i_c.2 (0,20)
      vectorize j_c.3 (0,5)
        out.local = ...
  for i.2 (0,20)
    vectorize j.2 (0,5)
      out = ...

==================================================
No: 4	GFLOPS: 8.44 / 52.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730038.74)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,10)
    for i.2 (0,5)
      for j.2 (0,5)
        for k.1 (0,4)
          out = ...

==================================================
No: 5	GFLOPS: 92.45 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.81, Tstamp:1696730039.09)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,40)
  for k.0 (0,5)
    for i.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,2)
          vectorize j.3 (0,10)
            out = ...

==================================================
No: 6	GFLOPS: 32.20 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696730039.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,200)
  for k.0 (0,20)
    for k.1 (0,2)
      vectorize j_c.3 (0,8)
        out.local = ...
  vectorize j.2 (0,8)
    out = ...

==================================================
No: 7	GFLOPS: 47.87 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696730039.52)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,8)
    for i.2 (0,2)
      for k.1 (0,5)
        for i.3 (0,5)
          vectorize j.3 (0,40)
            out = ...

==================================================
No: 8	GFLOPS: 26.27 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696730039.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,80)
  out.local auto_unroll: 16
  for k.1 (0,40)
    vectorize j_c.3 (0,20)
      out.local = ...
  for j.2 (0,20)
    out = ...

==================================================
No: 9	GFLOPS: 8.35 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696730040.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,10)
  for k.0 (0,2)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,20)
          for i.3 (0,10)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 10	GFLOPS: 50.14 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696730040.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,4)
    for i.2 (0,4)
      for j.2 (0,10)
        for k.1 (0,10)................****************

          vectorize j.3 (0,2)
            out = ...

==================================================
No: 11	GFLOPS: 19.12 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696730040.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  for k.0 (0,40)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        vectorize j_c.3 (0,10)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,20)
      out = ...

==================================================
No: 12	GFLOPS: 31.77 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696730040.57)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,50)
  out.local auto_unroll: 64
  for j_c.1 (0,4)
    for k.0 (0,5)
      for i_c.2 (0,8)
        for k.1 (0,8)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 13	GFLOPS: 22.76 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730040.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,200)
  out.local auto_unroll: 16
  for k.0 (0,5)
    for i_c.2 (0,4)
      for k.1 (0,8)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 14	GFLOPS: 34.60 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696730041.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,40)
  for j_c.1 (0,10)
    for k.0 (0,2)
      for k.1 (0,20)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,2)
    for j.1 (0,20)
      out = ...

==================================================
No: 15	GFLOPS: 46.03 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.07, Tstamp:1696730041.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,80)
  out.local auto_unroll: 512
  for k.0 (0,40)
    for i_c.2 (0,2)
      for j_c.2 (0,5)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 16	GFLOPS: 43.29 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730041.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,320)
  for k.0 (0,20)
    for k.1 (0,2)
      vectorize j.3 (0,5)
        out = ...

==================================================
No: 17	GFLOPS: 7.13 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696730045.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,40)
    for i.2 (0,5)
      vectorize j.3 (0,5)
        out = ...

==================================================
No: 18	GFLOPS: 19.35 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696730046.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,200)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,10)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 19	GFLOPS: 16.52 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730046.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,400)
  out.local auto_unroll: 16
  for k.0 (0,40)
    for i_c.3 (0,4)
      out.local = ...
  for i.2 (0,4)
    out = ...

==================================================
No: 20	GFLOPS: 53.01 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730046.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 64
  for k.0 (0,10)
    for j_c.2 (0,10)
      for k.1 (0,4)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,20)
      out = ...

==================================================
No: 21	GFLOPS: 57.00 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.43, Tstamp:1696730046.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,20)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,5)
            for j_c.3 (0,20)
              out.local = ...
  for i.1 (0,10)
    for j.1 (0,40)
      out = ...

==================================================
No: 22	GFLOPS: 35.76 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696730047.20)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,10)
  for k.0 (0,8)
    for i.2 (0,2)
      for k.1 (0,5)
        for i.3 (0,10)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 23	GFLOPS: 18.65 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.41, Tstamp:1696730047.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for j_c.2 (0,40)
      for k.1 (0,20)
        for i_c.3 (0,20)
          out.local = ...
  for i.2 (0,20)
    for j.2 (0,40)
      out = ...

==================================================
No: 24	GFLOPS: 28.85 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696730047.84)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,4)
    for i.2 (0,5)
      for j.2 (0,2)
        for k.1 (0,10)
          for i.3 (0,2)
            vectorize j.3 (0,10)
              out = ...

==================================================
No: 25	GFLOPS: 52.86 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696730048.17)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for i_c.1 (0,5)
    for j_c.1 (0,4)
      for k.0 (0,5)
        for k.1 (0,8)
          vectorize j_c.3 (0,10)
            out.local = ...
  for i.1 (0,5)
    for j.1 (0,40)
      out = ...

==================================================
No: 26	GFLOPS: 18.04 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696730048.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 512
  for k.0 (0,10)
    for i_c.2 (0,5)
      for k.1 (0,4)
        for i_c.3 (0,8)
          out.local = ...
  for i.2 (0,40)
    out = ...

==================================================
No: 27	GFLOPS: 55.53 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730048.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,20)
  for i_c.1 (0,2)
    for k.0 (0,20)
      for i_c.2 (0,10)
        for k.1 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,20)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 28	GFLOPS: 44.14 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696730048.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,5)
      for k.0 (0,8)
        for i_c.2 (0,2)
          for k.1 (0,5)
            for i_c.3 (0,10)
              vectorize j_c.3 (0,4)
                out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

==================================================
No: 29	GFLOPS: 49.42 / 92.45	resul................****************
ts: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696730049.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for j_c.2 (0,4)
      for k.1 (0,5)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,10)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,40)
      out = ...

==================================================
No: 30	GFLOPS: 40.74 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696730049.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for j_c.2 (0,5)
      for k.1 (0,40)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,20)
      out = ...

==================================================
No: 31	GFLOPS: 64.57 / 92.45	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730049.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for i_c.1 (0,5)
    for j_c.1 (0,40)
      for k.0 (0,40)
        out.local = ...
  for i.1 (0,5)
    for j.1 (0,40)
      out = ...

==================================================
No: 32	GFLOPS: 107.31 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696730050.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,10)
  out.local auto_unroll: 16
  for j_c.2 (0,5)
    for k.1 (0,40)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,4)
    for j.2 (0,40)
      out = ...

==================================================
No: 33	GFLOPS: 22.86 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.78, Tstamp:1696730053.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,50)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,40)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 34	GFLOPS: 97.19 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696730054.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for k.1 (0,10)
      for j_c.3 (0,40)
        out.local = ...
  for j.2 (0,40)
    out = ...

==================================================
No: 35	GFLOPS: 17.13 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730054.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for j_c.2 (0,5)
    for k.1 (0,40)
      for i_c.3 (0,40)
        out.local = ...
  for i.2 (0,40)
    vectorize j.2 (0,5)
      out = ...

==================================================
No: 36	GFLOPS: 55.24 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696730054.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,40)
    for i_c.2 (0,5)
      for j_c.2 (0,4)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,5)
            out.local = ...
  for i.2 (0,20)
    vectorize j.2 (0,20)
      out = ...

==================================================
No: 37	GFLOPS: 2.17 / 107.31	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.48, Tstamp:1696730055.01)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,10)
  for k.0 (0,40)
    for i.2 (0,4)
      for j.2 (0,8)
        for i.3 (0,5)
          out = ...

==================================================
No: 38	GFLOPS: 19.81 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696730055.29)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,100)
  out.local auto_unroll: 64
  for i_c.2 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,40)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 39	GFLOPS: 59.84 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696730055.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,80)
  for k.0 (0,4)
    for k.1 (0,10)
      for j_c.3 (0,20)
        out.local = ...
  for j.2 (0,20)
    out = ...

==================================================
No: 40	GFLOPS: 103.53 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730055.67)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for k.0 (0,10)
    for j_c.2 (0,40)
      for k.1 (0,4)
        for i_c.3 (0,5)
          out.local = ...
  for i.1 (0,5)
    for j.1 (0,40)
      out = ...

==================================================
No: 41	GFLOPS: 30.56 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730055.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,20)
  out.local auto_unroll: 16
  for i_c.1 (0,10)
    for k.0 (0,10)
      for k.1 (0,4)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,40)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 42	GFLOPS: 19.67 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696730056.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,80)
  for k.1 (0,40)
    for i_c.3 (0,20)
      out.local = ...
  for i.2 (0,20)
    out = ...

==================================================
No: 43	GFLOPS: 22.51 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696730056.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,25)
  out.local auto_unroll: 64
  for j_c.1 (0,4)
    for i_c.2 (0,8)
      for k.1 (0,40)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 44	GFLOPS: 17.47 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696730056.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,80)
  for k.0 (0,4)
    for i_c.2 (0,5)
      for k.1 (0,10)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,20)
    out = ...

==================================================
No: 45	GFLOPS: 18.05 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.65, Tstamp:1696730057.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for j_c.1 (0,2)
    for k.0 (0,5)
      for i_c.2 (0,40)
        for j_c.2 (0,10)
          for k.1 (0,8)
            out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

==================================================
No: 46	GFLOPS: 38.89 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696730057.35)
==================================================
Placeholder: A, B
out.local auto_unroll: 64
for i_c.1 (0,10)
  for j_c.1 (0,10)
    for k.0 (0,8)
      for i_c.2 (0,2)
        for k.1 (0,5)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
for i.1 (0,40)
  for j.1 (0,40)
    out = ...

==================================================
No: 47	GFLOPS: 9.67 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696730057.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@................****************
j.1@ (0,800)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for k.1 (0,5)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 48	GFLOPS: 14.90 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696730057.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,100)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,20)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 49	GFLOPS: 34.39 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.74, Tstamp:1696730061.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,160)
  out.local auto_unroll: 512
  for k.1 (0,40)
    for i_c.3 (0,5)
      vectorize j_c.3 (0,2)
        out.local = ...
  for i.1 (0,5)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 50	GFLOPS: 34.26 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696730061.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,20)
    for j_c.1 (0,5)
      for k.1 (0,40)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

==================================================
No: 51	GFLOPS: 29.51 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696730061.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,2)
    for i_c.2 (0,20)
      for k.1 (0,20)
        vectorize j_c.3 (0,10)
          out.local = ...
  for i.2 (0,20)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 52	GFLOPS: 33.19 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696730061.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,200)
  for k.0 (0,10)
    for i_c.2 (0,2)
      for k.1 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 53	GFLOPS: 36.94 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696730062.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,10)
  for i_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,20)
          for k.1 (0,20)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,20)
      out = ...

==================================================
No: 54	GFLOPS: 34.72 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730062.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,50)
  for j.1 (0,4)
    out.local auto_unroll: 16
    for k.1 (0,40)
      for i_c.3 (0,8)
        out.local = ...
    for i.2 (0,8)
      out = ...

==================================================
No: 55	GFLOPS: 26.50 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730062.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,2)
    for j_c.1 (0,5)
      for k.0 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,10)
            for i_c.3 (0,20)
              out.local = ...
  for i.1 (0,40)
    for j.1 (0,10)
      out = ...

==================================================
No: 56	GFLOPS: 12.31 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730062.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,20)
    for j_c.1 (0,2)
      for i_c.2 (0,2)
        for k.1 (0,40)
          vectorize j_c.3 (0,10)
            out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

==================================================
No: 57	GFLOPS: 77.44 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.54, Tstamp:1696730063.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,5)
  out.local auto_unroll: 64
  for j_c.1 (0,2)
    for k.0 (0,5)
      for i_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,4)
            for j_c.3 (0,20)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,40)
      out = ...

==================================================
No: 58	GFLOPS: 63.03 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.04, Tstamp:1696730063.47)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,80)
  for k.0 (0,10)
    for j.2 (0,2)
      for k.1 (0,4)
        for i.3 (0,2)
          vectorize j.3 (0,5)
            out = ...

==================================================
No: 59	GFLOPS: 92.01 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696730063.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,40)
  for k.0 (0,8)
    for j_c.2 (0,5)
      for k.1 (0,5)
        vectorize j_c.3 (0,8)
          out.local = ...
  for j.1 (0,40)
    out = ...

==================================================
No: 60	GFLOPS: 31.24 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696730064.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  out.local auto_unroll: 16
  for k.0 (0,40)
    for i_c.2 (0,20)
      for j_c.2 (0,2)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,40)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 61	GFLOPS: 32.08 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696730064.39)
==================================================
Placeholder: A, B
for i_c.1 (0,4)
  for k.0 (0,2)
    for i_c.2 (0,5)
      for j_c.2 (0,10)
        for k.1 (0,20)
          for i_c.3 (0,2)
            for j_c.3 (0,4)
              out.local = ...
for i.1 (0,40)
  for j.1 (0,40)
    out = ...

==================================================
No: 62	GFLOPS: 5.73 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.21, Tstamp:1696730064.53)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,10)
    for i.2 (0,10)
      for k.1 (0,4)
        for i.3 (0,4)
          for j.3 (0,20)
            out = ...

==================================================
No: 63	GFLOPS: 41.51 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730064.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,100)
  for k.0 (0,10)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 64	GFLOPS: 30.91 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696730065.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,80)
  for j.1 (0,5)
    out.local auto_unroll: 16
    for k.0 (0,4)
      for k.1 (0,10)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,2)
        out = ...

Time elapsed for measurement: 31.13 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.14 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1939	fail_ct: 20	Time elapsed: 1.22
GA Iter: 0	Max score: 0.9984	Min score: 0.9315	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9863	#Pop: 128	#M+: 1380	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.36
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 8.37 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.38, Tstamp:1696730074.95)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,8)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,5)
          for i.3 (0,5)
            out = ...

==================================================
No: 66	GFLOPS: 36.97 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696730075.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,10)
    for i_c.2 (0,8)
      for j_c.2 (0,10)
        for k.1 (0,4)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 67	GFLOPS: 36.09 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696730075.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for j_c.2 (0,10)
      for k.1 (0,40)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,40)
      out = ...

==================================================
No: 68	GFLOPS: 12.56 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.81, Tstamp:1696730075.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,20)
  for j.1 (0,2)
    out.local auto_unroll: 512
    for i_c.2 (0,8)
      for j_c.2 (0,5)
        for k.1 (0,40)
          out.local = ...
    for i.2 (0,8)
      vectorize j.2 (0,5)
        out = ...

==================================================
No: 69	GFLOPS: 32.53 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696730076.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,100)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,10)
      for j_c.2 (0,2)
        for k.1 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 70	GFLOPS: 51.57 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.61, Tstamp:1696730076.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for i_c.1 (0,5)
    for j_c.1 (0,10)
      for k.0 (0,20)
        for i_c.2 (0,2)
          for k.1 (0,2)
            out.local = ...
  for i.1 (0,10)
    vectorize j.1 (0,10)
      out = ...

==================================================
No: 71	GFLOPS: 32.47 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696730076.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,20)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,10)
        for k.1 (0,40)
          out.local = ...
  for i.1 (0,8)
    for j.1 (0,10)
      out = ...

==================================================
No: 72	GFLOPS: 54.84 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.75, Tstamp:1696730076.91)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,5)
      for j_c.2 (0,4)
        for k.1 (0,10)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,5)
              out.local = ...
  for i.2 (0,20)
    vectorize j.2 (0,20)
      out = ...

==================================================
No: 73	GFLOPS: 37.64 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696730077.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,40)
  for k.0 (0,4)
    for i_c.2 (0,5)
      for j_c.2 (0,2)
        for k.1 (0,10)
          for i_c.3 ................****************
(0,2)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,10)
    for j.1 (0,4)
      out = ...

==================================================
No: 74	GFLOPS: 42.15 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696730077.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for i_c.1 (0,20)
    for k.0 (0,8)
      for k.1 (0,5)
        vectorize j_c.3 (0,5)
          out.local = ...
  for i.1 (0,20)
    vectorize j.1 (0,5)
      out = ...

==================================================
No: 75	GFLOPS: 27.86 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696730077.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,40)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,5)
          for i_c.3 (0,5)
            out.local = ...
  for i.2 (0,20)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 76	GFLOPS: 9.24 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696730077.82)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,40)
  for k.0 (0,5)
    for i.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,10)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 77	GFLOPS: 38.78 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730078.10)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,400)
  for k.0 (0,10)
    for i.2 (0,2)
      for k.1 (0,4)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 78	GFLOPS: 37.50 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696730078.23)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@ (0,80)
  for j.1 (0,2)
    for k.0 (0,10)
      for i.2 (0,5)
        for k.1 (0,4)
          for i.3 (0,2)
            out = ...

==================================================
No: 79	GFLOPS: 57.43 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696730078.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,40)
    for i_c.2 (0,5)
      for j_c.2 (0,4)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,5)
            out.local = ...
  for i.2 (0,20)
    vectorize j.2 (0,20)
      out = ...

==================================================
No: 80	GFLOPS: 17.18 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696730078.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,200)
  for i.2 (0,4)
    for k.1 (0,40)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 81	GFLOPS: 70.22 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696730081.18)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,8)
    for j.2 (0,20)
      for k.1 (0,5)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 82	GFLOPS: 13.50 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696730081.32)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,20)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,10)
          for i.3 (0,10)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 83	GFLOPS: 31.75 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696730081.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,80)
  for k.0 (0,20)
    for i_c.2 (0,10)
      for j_c.2 (0,2)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,10)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 84	GFLOPS: 12.85 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696730081.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,5)
  for j.1 (0,2)
    for k.0 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,10)
          for i_c.3 (0,8)
            vectorize j_c.3 (0,10)
              out.local = ...
    for i.2 (0,8)
      vectorize j.2 (0,20)
        out = ...

==================================================
No: 85	GFLOPS: 14.08 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730082.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i_c.1 (0,2)
    for j_c.1 (0,20)
      for k.0 (0,20)
        for i_c.2 (0,10)
          for k.1 (0,2)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

==================================================
No: 86	GFLOPS: 22.61 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696730082.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,10)
  out.local auto_unroll: 16
  for k.0 (0,5)
    for i_c.2 (0,4)
      for k.1 (0,8)
        vectorize j_c.3 (0,40)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,40)
      out = ...

==================================================
No: 87	GFLOPS: 49.59 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696730082.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,10)
  for k.0 (0,2)
    for i.2 (0,4)
      for j.2 (0,8)
        for k.1 (0,20)
          vectorize j.3 (0,5)
            out = ...

==================================================
No: 88	GFLOPS: 37.55 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696730083.02)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,8)
    for i.2 (0,10)
      for j.2 (0,2)
        for k.1 (0,5)
          vectorize j.3 (0,10)
            out = ...

==================================================
No: 89	GFLOPS: 37.93 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696730083.30)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,400)
  for k.0 (0,20)
    for j.2 (0,2)
      for k.1 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 90	GFLOPS: 76.23 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696730083.49)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,5)
  for k.0 (0,20)
    for i.2 (0,8)
      for j.2 (0,5)
        for k.1 (0,2)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 91	GFLOPS: 41.95 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696730083.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for k.0 (0,5)
    for i_c.2 (0,4)
      for k.1 (0,8)
        for i_c.3 (0,5)
          for j_c.3 (0,10)
            out.local = ...
  for i.1 (0,20)
    for j.1 (0,10)
      out = ...

==================================================
No: 92	GFLOPS: 47.11 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696730084.05)
==================================================
Pl....****
aceholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,80)
  out.local auto_unroll: 16
  for k.0 (0,5)
    for i_c.2 (0,2)
      for k.1 (0,8)
        vectorize j_c.3 (0,10)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,10)
      out = ...

==================================================
No: 93	GFLOPS: 21.05 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696730084.33)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,80)
  out.local auto_unroll: 512
  for k.0 (0,40)
    for i_c.2 (0,5)
      for i_c.3 (0,4)
        out.local = ...
  for i.2 (0,20)
    out = ...

==================================================
No: 94	GFLOPS: 30.29 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.65, Tstamp:1696730084.62)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for i_c.1 (0,10)
  for j_c.1 (0,8)
    for k.0 (0,4)
      for i_c.2 (0,4)
        for k.1 (0,10)
          vectorize j_c.3 (0,5)
            out.local = ...
for i.1 (0,40)
  for j.1 (0,40)
    out = ...

==================================================
No: 95	GFLOPS: 33.81 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696730084.91)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,2)
  for i.2 (0,5)
    for j.2 (0,20)
      for k.1 (0,40)
        for i.3 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 96	GFLOPS: 22.05 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696730085.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,80)
  for i.1 (0,2)
    for j.1 (0,5)
      out.local auto_unroll: 64
      for k.0 (0,4)
        for k.1 (0,10)
          vectorize j_c.3 (0,2)
            out.local = ...
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 97	GFLOPS: 53.65 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696730088.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,100)
  out.local auto_unroll: 512
  for k.0 (0,5)
    for j_c.2 (0,4)
      for k.1 (0,8)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 98	GFLOPS: 19.72 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696730088.48)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,5)
    for i.2 (0,20)
      for j.2 (0,2)
        for k.1 (0,8)
          for i.3 (0,2)
            vectorize j.3 (0,10)
              out = ...

==================================================
No: 99	GFLOPS: 64.56 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696730088.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,20)
  for j_c.2 (0,2)
    for k.1 (0,40)
      for i_c.3 (0,10)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,10)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 100	GFLOPS: 36.21 / 107.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.51, Tstamp:1696730088.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,5)
        for i_c.3 (0,40)
          vectorize j_c.3 (0,10)
            out.local = ...
  for i.1 (0,40)
    for j.1 (0,20)
      out = ...

Time elapsed for measurement: 17.19 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((40, 40), "float32"), B: T.Buffer((40, 40), "float32"), out: T.Buffer((40, 40), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(40):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused // 5 * 200 + i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused % 5 * 8
            out_1 = T.Buffer((1600,), data=out.data)
            out_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 40:cse_var_1 + 40 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 80:cse_var_1 + 80 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 120:cse_var_1 + 120 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 160:cse_var_1 + 160 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer in range(5):
                cse_var_14: T.int32 = cse_var_1 + 80
                cse_var_13: T.int32 = cse_var_1 + 40
                cse_var_12: T.int32 = cse_var_1 + 160
                cse_var_11: T.int32 = cse_var_1 + 120
                cse_var_10: T.int32 = k_outer * 320 + i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused % 5 * 8
                cse_var_9: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused // 5 * 200 + k_outer * 8
                cse_var_8: T.int32 = cse_var_10 + 80
                cse_var_7: T.int32 = cse_var_10 + 40
                cse_var_6: T.int32 = cse_var_10 + 280
                cse_var_5: T.int32 = cse_var_10 + 240
                cse_var_4: T.int32 = cse_var_10 + 200
                cse_var_3: T.int32 = cse_var_10 + 160
                cse_var_2: T.int32 = cse_var_10 + 120
                A_1 = T.Buffer((1600,), data=A.data)
                B_1 = T.Buffer((1600,), data=B.data)
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_9], 8) * B_1[cse_var_10:cse_var_10 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_9 + 40], 8) * B_1[cse_var_10:cse_var_10 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_9 + 80], 8) * B_1[cse_var_10:cse_var_10 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_9 + 120], 8) * B_1[cse_var_10:cse_var_10 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_9 + 160], 8) * B_1[cse_var_10:cse_var_10 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_9 + 1], 8) * B_1[cse_var_7:cse_var_7 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_9 + 41], 8) * B_1[cse_var_7:cse_var_7 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_9 + 81], 8) * B_1[cse_var_7:cse_var_7 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_9 + 121], 8) * B_1[cse_var_7:cse_var_7 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_9 + 161], 8) * B_1[cse_var_7:cse_var_7 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_9 + 2], 8) * B_1[cse_var_8:cse_var_8 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_9 + 42], 8) * B_1[cse_var_8:cse_var_8 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_9 + 82], 8) * B_1[cse_var_8:cse_var_8 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_9 + 122], 8) * B_1[cse_var_8:cse_var_8 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_9 + 162], 8) * B_1[cse_var_8:cse_var_8 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_9 + 3], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_9 + 43], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_9 + 83], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_9 + 123], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_9 + 163], 8) * B_1[cse_var_2:cse_var_2 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_9 + 4], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_9 + 44], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_9 + 84], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_9 + 124], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_9 + 164], 8) * B_1[cse_var_3:cse_var_3 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_9 + 5], 8) * B_1[cse_var_4:cse_var_4 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_9 + 45], 8) * B_1[cse_var_4:cse_var_4 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_9 + 85], 8) * B_1[cse_var_4:cse_var_4 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_9 + 125], 8) * B_1[cse_var_4:cse_var_4 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_9 + 165], 8) * B_1[cse_var_4:cse_var_4 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_9 + 6], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_9 + 46], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_9 + 86], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_9 + 126], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_9 + 166], 8) * B_1[cse_var_5:cse_var_5 + 8]
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_9 + 7], 8) * B_1[cse_var_6:cse_var_6 + 8]
                out_1[cse_var_13:cse_var_13 + 8] = out_1[cse_var_13:cse_var_13 + 8] + T.Broadcast(A_1[cse_var_9 + 47], 8) * B_1[cse_var_6:cse_var_6 + 8]
                out_1[cse_var_14:cse_var_14 + 8] = out_1[cse_var_14:cse_var_14 + 8] + T.Broadcast(A_1[cse_var_9 + 87], 8) * B_1[cse_var_6:cse_var_6 + 8]
                out_1[cse_var_11:cse_var_11 + 8] = out_1[cse_var_11:cse_var_11 + 8] + T.Broadcast(A_1[cse_var_9 + 127], 8) * B_1[cse_var_6:cse_var_6 + 8]
                out_1[cse_var_12:cse_var_12 + 8] = out_1[cse_var_12:cse_var_12 + 8] + T.Broadcast(A_1[cse_var_9 + 167], 8) * B_1[cse_var_6:cse_var_6 + 8]
Execution time of this operator: max:1.072 us   median:1.053 us   min:1.034 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=5)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=1)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=1)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=8)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 64)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

