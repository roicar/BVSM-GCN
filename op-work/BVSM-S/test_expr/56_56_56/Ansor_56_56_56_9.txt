----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1927	fail_ct: 12	Time elapsed: 1.06
GA Iter: 0	Max score: 0.9997	Min score: 0.9311	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9861	#Pop: 128	#M+: 1380	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [56, 56]
B = PLACEHOLDER [56, 56]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 21.23 / 21.23	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696660359.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  out.local auto_unroll: 16
  for i_c.2 (0,4)
    for k.1 (0,56)
      vectorize j_c.3 (0,2)
        out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 2	GFLOPS: 29.86 / 29.86	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696660360.01)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,448)
  for k.0 (0,14)
    for i.2 (0,7)
      for k.1 (0,4)
        out = ...

==================================================
No: 3	GFLOPS: 43.30 / 43.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660360.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for k.1 (0,14)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 4	GFLOPS: 38.27 / 43.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660360.56)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,4)
  for j_c.1 (0,4)
    for k.0 (0,4)
      for i_c.2 (0,14)
        for j_c.2 (0,14)
          for k.1 (0,14)
            out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 5	GFLOPS: 21.83 / 43.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696660360.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 64
  for i_c.1 (0,56)
    for j_c.2 (0,4)
      for k.1 (0,56)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 6	GFLOPS: 29.39 / 43.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660360.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for i_c.1 (0,2)
    for j_c.1 (0,4)
      for k.0 (0,56)
        for i_c.3 (0,28)
          out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 7	GFLOPS: 29.66 / 43.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.34, Tstamp:1696660361.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,2)
      for i_c.3 (0,4)
        out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 8	GFLOPS: 4.21 / 43.30	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.24, Tstamp:1696660361.22)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,2)
  for i.1 (0,2)
    for j.1 (0,2)
      for k.0 (0,56)
        for i.2 (0,7)
          for i.3 (0,4)
            vectorize j.3 (0,14)
              out = ...

==================================================
No: 9	GFLOPS: 44.95 / 44.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696660361.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 16
  for k.0 (0,14)
    for i_c.2 (0,7)
      for k.1 (0,4)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,56)
            out.local = ...
  for i.2 (0,28)
    for j.2 (0,56)
      out = ...

==================================================
No: 10	GFLOPS: 11.65 / 44.95	results: MeasureResult(cost:[0.0000], error_no:0, all_................****************
cost:0.48, Tstamp:1696660361.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,14)
    for j_c.1 (0,28)
      for i_c.2 (0,2)
        for k.1 (0,56)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 11	GFLOPS: 27.51 / 44.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696660362.09)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,56)
    for j.2 (0,2)
      for i.3 (0,14)
        out = ...

==================================================
No: 12	GFLOPS: 48.51 / 48.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.31, Tstamp:1696660362.37)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,448)
  for k.1 (0,56)
    for i.3 (0,7)
      out = ...

==================================================
No: 13	GFLOPS: 42.79 / 48.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696660362.51)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,16)
  for j.1 (0,28)
    for k.0 (0,14)
      for i.2 (0,7)
        for k.1 (0,4)
          out = ...

==================================================
No: 14	GFLOPS: 12.18 / 48.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.86, Tstamp:1696660362.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for i.1 (0,14)
    for j.1 (0,4)
      out.local auto_unroll: 512
      for i_c.2 (0,4)
        for k.1 (0,56)
          out.local = ...
      for i.2 (0,4)
        out = ...

==================================================
No: 15	GFLOPS: 13.19 / 48.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696660362.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,224)
  for j.1 (0,7)
    out.local auto_unroll: 16
    for i_c.2 (0,2)
      for k.1 (0,56)
        out.local = ...
    for i.2 (0,2)
      out = ...

==================================================
No: 16	GFLOPS: 47.06 / 48.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696660363.05)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,7)
  for k.0 (0,8)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,7)
          for i.3 (0,2)
            vectorize j.3 (0,14)
              out = ...

==================================================
No: 17	GFLOPS: 22.83 / 48.51	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660366.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,784)
  out.local auto_unroll: 64
  for k.0 (0,56)
    for i_c.3 (0,2)
      vectorize j_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 18	GFLOPS: 75.95 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660366.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,28)
      for k.1 (0,14)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 19	GFLOPS: 44.57 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660366.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for j_c.2 (0,14)
      for k.1 (0,28)
        for i_c.3 (0,8)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 20	GFLOPS: 46.22 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696660366.99)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,112)
  for j.1 (0,28)
    for k.0 (0,14)
      for k.1 (0,4)
        out = ...

==================================================
No: 21	GFLOPS: 45.14 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696660367.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  for i.1 (0,14)
    for k.0 (0,56)
      vectorize j_c.3 (0,14)
        out.local = ...
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 22	GFLOPS: 60.91 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696660367.50)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,28)
  for k.0 (0,4)
    for i.2 (0,2)
      for j.2 (0,28)
        for k.1 (0,14)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 23	GFLOPS: 41.98 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660367.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,56)
    for i_c.2 (0,14)
      for j_c.2 (0,2)
        out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 24	GFLOPS: 20.99 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660367.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  for j.1 (0,14)
    out.local auto_unroll: 64
    for k.0 (0,8)
      for k.1 (0,7)
        for i_c.3 (0,2)
          out.local = ...
    for i.2 (0,2)
      out = ...

==================================================
No: 25	GFLOPS: 40.01 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696660368.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 64
  for i_c.2 (0,56)
    for j_c.2 (0,4)
      for k.1 (0,56)
        out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 26	GFLOPS: 25.24 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696660368.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  for j_c.1 (0,2)
    for k.0 (0,4)
      for i_c.2 (0,28)
        for j_c.2 (0,4)
          for k.1 (0,14)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 27	GFLOPS: 23.10 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696660368.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  for k.0 (0,2)
    for i.2 (0,2)
      for k.1 (0,28)
        for i.3 (0,14)
          out = ...

==================================================
No: 28	GFLOPS: 47.61 / 75.95	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.25, Tstamp:1696660368.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for i_c.2 (0,7)
      for k.1 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 29	GFLOPS: 89.35 / 89.35	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696660369.09)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1................****************
@j.1@ (0,56)
  for k.0 (0,8)
    for i.2 (0,4)
      for k.1 (0,7)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 30	GFLOPS: 59.37 / 89.35	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.72, Tstamp:1696660369.35)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,14)
  for j.1 (0,2)
    out.local auto_unroll: 512
    for k.0 (0,14)
      for i_c.2 (0,14)
        for j_c.2 (0,2)
          for k.1 (0,4)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,2)
                out.local = ...
    for i.2 (0,28)
      vectorize j.2 (0,4)
        out = ...

==================================================
No: 31	GFLOPS: 137.72 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660369.60)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,7)
    for j.2 (0,4)
      for k.1 (0,8)
        for i.3 (0,7)
          out = ...

==================================================
No: 32	GFLOPS: 27.65 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696660369.89)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,14)
        for i_c.3 (0,56)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 33	GFLOPS: 45.93 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696660373.57)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@ (0,196)
  for i.1 (0,4)
    for k.0 (0,7)
      for k.1 (0,8)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 34	GFLOPS: 38.18 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696660373.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 512
  for k.0 (0,28)
    for i_c.2 (0,8)
      for k.1 (0,2)
        for i_c.3 (0,7)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 35	GFLOPS: 31.96 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.83, Tstamp:1696660373.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 512
  for k.0 (0,7)
    for k.1 (0,8)
      for i_c.3 (0,2)
        for j_c.3 (0,28)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,28)
      out = ...

==================================================
No: 36	GFLOPS: 28.71 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660373.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 16
  for i_c.1 (0,14)
    for j_c.1 (0,4)
      for k.0 (0,14)
        for k.1 (0,4)
          for i_c.3 (0,4)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 37	GFLOPS: 91.59 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696660374.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for i_c.2 (0,4)
      for j_c.2 (0,7)
        for k.1 (0,4)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,4)
    for j.2 (0,28)
      out = ...

==================================================
No: 38	GFLOPS: 52.32 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660374.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  for k.0 (0,14)
    for i_c.2 (0,14)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 39	GFLOPS: 99.71 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.60, Tstamp:1696660374.77)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@ (0,98)
  for k.0 (0,7)
    for i.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,4)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 40	GFLOPS: 28.69 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.57, Tstamp:1696660375.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for j_c.1 (0,56)
    for k.0 (0,28)
      for i_c.2 (0,7)
        for k.1 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 41	GFLOPS: 28.01 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696660375.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,28)
    for j_c.1 (0,14)
      for j_c.2 (0,4)
        for k.1 (0,56)
          out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 42	GFLOPS: 35.29 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696660375.64)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  for j.1 (0,4)
    for k.0 (0,8)
      for j.2 (0,2)
        for k.1 (0,7)
          for i.3 (0,2)
            out = ...

==================================================
No: 43	GFLOPS: 40.07 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696660375.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for j_c.2 (0,7)
      for k.1 (0,7)
        for i_c.3 (0,7)
          out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 44	GFLOPS: 20.16 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696660376.22)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,56)
    for j.2 (0,28)
      for i.3 (0,28)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 45	GFLOPS: 5.86 / 137.72	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.22, Tstamp:1696660376.36)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,7)
    for i.2 (0,28)
      for k.1 (0,8)
        for i.3 (0,2)
          out = ...

==================================================
No: 46	GFLOPS: 57.12 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696660376.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,8)
      for i_c.2 (0,28)
        for j_c.2 (0,7)
          for k.1 (0,7)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,14)
      out = ...

==================================================
No: 47	GFLOPS: 32.54 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.51, Tstamp:1696660376.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for i_................****************
c.2 (0,2)
        for j_c.2 (0,7)
          for k.1 (0,56)
            for i_c.3 (0,7)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 48	GFLOPS: 33.32 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660376.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  for j.1 (0,7)
    for k.0 (0,56)
      for j.2 (0,4)
        out = ...

==================================================
No: 49	GFLOPS: 10.32 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696660382.24)
==================================================
Placeholder: A, B
for k.0 (0,7)
  for i_c.2 (0,56)
    for j_c.2 (0,2)
      for k.1 (0,8)
        vectorize j_c.3 (0,28)
          out.local = ...
for i.2 (0,56)
  vectorize j.2 (0,56)
    out = ...

==================================================
No: 50	GFLOPS: 100.32 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.94, Tstamp:1696660382.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,14)
      for i_c.3 (0,2)
        for j_c.3 (0,56)
          out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 51	GFLOPS: 3.74 / 137.72	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.24, Tstamp:1696660382.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,7)
    for k.1 (0,8)
      for i.3 (0,4)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 52	GFLOPS: 103.42 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696660382.89)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,28)
    for k.1 (0,2)
      for i.3 (0,4)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 53	GFLOPS: 15.55 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660383.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,7)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for i_c.2 (0,4)
          for k.1 (0,7)
            vectorize j_c.3 (0,28)
              out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 54	GFLOPS: 84.71 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696660383.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,7)
    for k.0 (0,8)
      for i_c.2 (0,4)
        for j_c.2 (0,7)
          for k.1 (0,7)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 55	GFLOPS: 43.78 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696660383.57)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,28)
        for k.1 (0,14)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,56)
      out = ...

==================================================
No: 56	GFLOPS: 45.53 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696660383.86)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for j_c.1 (0,8)
    for k.0 (0,56)
      for i_c.2 (0,7)
        for j_c.2 (0,7)
          out.local = ...
  for i.1 (0,7)
    for j.1 (0,56)
      out = ...

==================================================
No: 57	GFLOPS: 23.35 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696660383.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,784)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for k.1 (0,2)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 58	GFLOPS: 10.40 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696660384.18)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,3136)
  for k.0 (0,7)
    for k.1 (0,8)
      out = ...

==================================================
No: 59	GFLOPS: 26.75 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.75, Tstamp:1696660384.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,28)
      for k.1 (0,14)
        out.local = ...
  for i.2 (0,28)
    out = ...

==================================================
No: 60	GFLOPS: 57.25 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696660384.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,8)
    for i_c.2 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,7)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,14)
              out.local = ...
  for i.2 (0,14)
    for j.2 (0,28)
      out = ...

==================================================
No: 61	GFLOPS: 16.93 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660384.87)
==================================================
Placeholder: A, B
for i_c.1 (0,2)
  for j_c.1 (0,2)
    for k.0 (0,28)
      for i_c.2 (0,14)
        for j_c.2 (0,2)
          for k.1 (0,2)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,14)
                out.local = ...
for i.1 (0,56)
  vectorize j.1 (0,56)
    out = ...

==================================================
No: 62	GFLOPS: 46.34 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696660385.00)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,2)
    for i.2 (0,14)
      for j.2 (0,2)
        for k.1 (0,28)
          for i.3 (0,2)
            for j.3 (0,28)
              out = ...

==================================================
No: 63	GFLOPS: 33.29 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.38, Tstamp:1696660385.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,49)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,4)
      for k.0 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,14)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 64	GFLOPS: 109.96 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696660385.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for j_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,14)
      out = ...

Time elapsed for measurement: 29.23 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.15 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1924	fail_ct: 20	Time elapsed: 1.06
GA Iter: 0	Max score: 0.9999	Min score: 0.9236	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9855	#Pop: 128	#M+: 1388	#M-: 73
EvolutionarySearch		#s: 128	Time elapsed: 5.14
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 23.55 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.18, Tstamp:1696660395.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,784)
  for k.0 (0,7)
    for k.1 (0,8)
      vectorize j_c.3 (0,4)
        out.local = ...
  vectorize j.1 (0,4)
    out = ...

==================================================
No: 66	GFLOPS: 21.48 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696660395.34)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,14)
    for j.2 (0,28)
      for k.1 (0,4)
        for i.3 (0,28)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 67	GFLOPS: 76.31 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696660395.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 16
  for i_c.2 (0,2)
    for k.1 (0,56)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 68	GFLOPS: 47.12 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.56, Tstamp:1696660395.83)
==================================================
Placeholder: A, B
out.local auto_unroll: 64
for k.0 (0,2)
  for j_c.2 (0,8)
    for k.1 (0,28)
      for i_c.3 (0,56)
        vectorize j_c.3 (0,7)
          out.local = ...
for i.2 (0,56)
  vectorize j.2 (0,56)
    out = ...

==================================================
No: 69	GFLOPS: 45.64 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.33, Tstamp:1696660395.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,196)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,14)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 70	GFLOPS: 44.53 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.70, Tstamp:1696660396.25)
==================================================
Placeholder: A, B
parallel i.0@ (0,28)
  for j.0 (0,28)
    out.local auto_unroll: 512
    for i_c.1 (0,2)
      for k.0 (0,4)
        for k.1 (0,14)
          vectorize j_c.3 (0,2)
            out.local = ...
    for i.1 (0,2)
      vectorize j.1 (0,2)
        out = ...

==================================================
No: 71	GFLOPS: 21.62 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.56, Tstamp:1696660396.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  for j.1 (0,14)
    out.local auto_unroll: 512
    for k.0 (0,28)
      for i_c.2 (0,2)
        for k.1 (0,2)
          out.local = ...
    for i.2 (0,2)
      out = ...

==================================================
No: 72	GFLOPS: 123.79 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696660396.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,7)
    for j_c.1 (0,4)
      for k.0 (0,56)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 73	GFLOPS: 27.78 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.19, Tstamp:1696660396.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,448)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for k.1 (0,4)
      for i_c.3 (0,7)
        out.local = ...
  for i.2 (0,7)
    out = ...

=============================================................****************
=====
No: 74	GFLOPS: 47.27 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.35, Tstamp:1696660396.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for j_c.2 (0,14)
      for k.1 (0,14)
        for i_c.3 (0,28)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 75	GFLOPS: 60.57 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660397.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 64
  for j_c.1 (0,2)
    for i_c.2 (0,7)
      for k.1 (0,56)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 76	GFLOPS: 72.67 / 137.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696660397.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for j_c.1 (0,4)
    for k.0 (0,28)
      for i_c.2 (0,7)
        for k.1 (0,2)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,7)
              out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 77	GFLOPS: 183.06 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696660397.62)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,14)
    for i.2 (0,2)
      for j.2 (0,7)
        for k.1 (0,4)
          vectorize j.3 (0,8)
            out = ...

==================================================
No: 78	GFLOPS: 4.96 / 183.06	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.50, Tstamp:1696660397.90)
==================================================
Placeholder: A, B
out.local auto_unroll: 64
for i_c.2 (0,2)
  for j_c.2 (0,4)
    for k.1 (0,56)
      for i_c.3 (0,28)
        vectorize j_c.3 (0,14)
          out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 79	GFLOPS: 101.39 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696660398.02)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,196)
  for k.0 (0,28)
    for k.1 (0,2)
      for i.3 (0,4)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 80	GFLOPS: 21.61 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660398.21)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,56)
    for j.2 (0,14)
      for i.3 (0,28)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 81	GFLOPS: 26.36 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696660403.17)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  for k.0 (0,7)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,8)
          for i.3 (0,2)
            vectorize j.3 (0,7)
              out = ...

==================================================
No: 82	GFLOPS: 62.95 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.57, Tstamp:1696660403.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 512
  for j_c.1 (0,7)
    for k.0 (0,8)
      for i_c.2 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,7)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,8)
    for j.1 (0,28)
      out = ...

==================================================
No: 83	GFLOPS: 5.27 / 183.06	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.40, Tstamp:1696660403.55)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,56)
    for i.2 (0,2)
      for j.2 (0,4)
        for i.3 (0,14)
          out = ...

==================================================
No: 84	GFLOPS: 12.02 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.31, Tstamp:1696660403.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for j_c.1 (0,7)
    for i_c.2 (0,28)
      for j_c.2 (0,4)
        for k.1 (0,56)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 85	GFLOPS: 18.39 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.69, Tstamp:1696660404.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for j_c.1 (0,7)
    for k.0 (0,8)
      for i_c.2 (0,14)
        for j_c.2 (0,4)
          for k.1 (0,7)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 86	GFLOPS: 19.99 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696660404.26)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for j_c.1 (0,2)
    for k.0 (0,4)
      for i_c.2 (0,2)
        for k.1 (0,14)
          for i_c.3 (0,7)
            vectorize j_c.3 (0,14)
              out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,28)
      out = ...

==================================================
No: 87	GFLOPS: 31.50 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660404.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,14)
      for k.1 (0,28)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 88	GFLOPS: 24.51 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696660404.67)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,448)
  for k.0 (0,8)
    for k.1 (0,7)
      for i.3 (0,7)
        out = ...

==================================================
No: 89	GFLOPS: 44.87 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696660404.95)
==================================================
Placeholder: A, B
for j.0 (0,7)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,14)
        for i_c.2 (0,14)
          for k.1 (0,4)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 90	GFLOPS: 9.74 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696660405.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,7)
    for i.2 (0,4)
      for k.1 (0,8)
        for i.3 (0,7)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 91	GFLOPS: 88.63 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696660405.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for i_c.1 (0,7)
    for k.0 (0,7)
      for i_c.2 (0,8)
        for k.1 (0,8)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,4)
      out = ...

================================================....****
==
No: 92	GFLOPS: 27.64 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696660405.63)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for i_c.1 (0,2)
    for j_c.1 (0,8)
      for k.0 (0,28)
        for j_c.2 (0,7)
          for k.1 (0,2)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,4)
    for j.1 (0,56)
      out = ...

==================================================
No: 93	GFLOPS: 51.89 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696660405.91)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for i_c.2 (0,8)
      for j_c.2 (0,14)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    for j.2 (0,28)
      out = ...

==================================================
No: 94	GFLOPS: 36.95 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696660406.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for j_c.1 (0,7)
    for k.0 (0,8)
      for i_c.2 (0,28)
        for j_c.2 (0,2)
          for k.1 (0,7)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,56)
    for j.1 (0,14)
      out = ...

==================================================
No: 95	GFLOPS: 53.08 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660406.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,4)
    for i_c.2 (0,7)
      for k.1 (0,14)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 96	GFLOPS: 10.12 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696660406.74)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for j_c.1 (0,2)
  for i_c.2 (0,2)
    for j_c.2 (0,28)
      for k.1 (0,56)
        for i_c.3 (0,28)
          out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 97	GFLOPS: 59.15 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696660409.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for i_c.3 (0,7)
          out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 98	GFLOPS: 18.47 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696660409.95)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,14)
    for i.2 (0,14)
      for j.2 (0,4)
        for k.1 (0,4)
          for i.3 (0,2)
            vectorize j.3 (0,7)
              out = ...

==================================================
No: 99	GFLOPS: 50.44 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696660410.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 512
  for k.0 (0,28)
    for i_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,2)
          for j_c.3 (0,7)
            out.local = ...
  for i.2 (0,4)
    for j.2 (0,7)
      out = ...

==================================================
No: 100	GFLOPS: 35.82 / 183.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.48, Tstamp:1696660410.38)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,196)
  for k.0 (0,14)
    for i.2 (0,4)
      for k.1 (0,4)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

Time elapsed for measurement: 18.37 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((56, 56), "float32"), B: T.Buffer((56, 56), "float32"), out: T.Buffer((56, 56), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(56):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 56
            out_1 = T.Buffer((3136,), data=out.data)
            out_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 8:cse_var_1 + 8 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 16:cse_var_1 + 16 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 24:cse_var_1 + 24 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 32:cse_var_1 + 32 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 40:cse_var_1 + 40 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 48:cse_var_1 + 48 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer in range(56):
                cse_var_9: T.int32 = k_outer * 56
                cse_var_8: T.int32 = cse_var_1 + k_outer
                cse_var_7: T.int32 = cse_var_1 + 8
                cse_var_6: T.int32 = cse_var_1 + 48
                cse_var_5: T.int32 = cse_var_1 + 40
                cse_var_4: T.int32 = cse_var_1 + 32
                cse_var_3: T.int32 = cse_var_1 + 24
                cse_var_2: T.int32 = cse_var_1 + 16
                A_1 = T.Buffer((3136,), data=A.data)
                B_1 = T.Buffer((3136,), data=B.data)
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9:cse_var_9 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 8:cse_var_9 + 8 + 8]
                out_1[cse_var_2:cse_var_2 + 8] = out_1[cse_var_2:cse_var_2 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 16:cse_var_9 + 16 + 8]
                out_1[cse_var_3:cse_var_3 + 8] = out_1[cse_var_3:cse_var_3 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 24:cse_var_9 + 24 + 8]
                out_1[cse_var_4:cse_var_4 + 8] = out_1[cse_var_4:cse_var_4 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 32:cse_var_9 + 32 + 8]
                out_1[cse_var_5:cse_var_5 + 8] = out_1[cse_var_5:cse_var_5 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 40:cse_var_9 + 40 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 48:cse_var_9 + 48 + 8]
Execution time of this operator: max:1.499 us   median:1.477 us   min:1.396 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=1)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=8)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=7)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=1)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 16)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

