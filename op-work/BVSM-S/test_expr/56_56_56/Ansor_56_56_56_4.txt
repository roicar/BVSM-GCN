----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1935	fail_ct: 19	Time elapsed: 1.11
GA Iter: 0	Max score: 0.9997	Min score: 0.9422	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9880	#Pop: 128	#M+: 1381	#M-: 63
EvolutionarySearch		#s: 128	Time elapsed: 5.29
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [56, 56]
B = PLACEHOLDER [56, 56]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 82.58 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.58, Tstamp:1696659693.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,14)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for j_c.3 (0,28)
            out.local = ...
  for i.2 (0,14)
    for j.2 (0,56)
      out = ...

==================================================
No: 2	GFLOPS: 26.36 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659693.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,28)
    for j_c.1 (0,14)
      for k.0 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,14)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 3	GFLOPS: 39.34 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.55, Tstamp:1696659694.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,14)
      for j_c.2 (0,2)
        for k.1 (0,7)
          out.local = ...
  for i.2 (0,14)
    for j.2 (0,2)
      out = ...

==================================================
No: 4	GFLOPS: 35.67 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659694.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for j_c.2 (0,28)
      vectorize j_c.3 (0,2)
        out.local = ...
  for j.2 (0,56)
    out = ...

==================================================
No: 5	GFLOPS: 3.13 / 82.58	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.35, Tstamp:1696659694.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for k.1 (0,14)
      for i.3 (0,14)
        for j.3 (0,7)
          out = ...

==================================================
No: 6	GFLOPS: 13.22 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659694.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  for k.0 (0,4)
    for j.2 (0,4)
      for k.1 (0,14)
        for i.3 (0,2)
          out = ...

==================================================
No: 7	GFLOPS: 26.15 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696659694.79)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,14)
    for i.2 (0,14)
      for k.1 (0,4)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 8	GFLOPS: 20.32 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696659694.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,784)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,14)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    out = ...

==================================================
No: 9	GFLOPS: 23.47 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659695.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for j_c.1 (0,56)
    for k.0 (0,4)
      for i_c.2 (0,7)
        for k.1 (0,14)
          out.local = ...
  for i.1 (0,7)
    for j.1 (0,56)
      out = ...

==================================================
No: 10	GFLOPS: 25.76 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659695.18)
==================================================
Placeholder: A, B
out auto_unro................****************
ll: 16
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,56)
    for i.2 (0,28)
      out = ...

==================================================
No: 11	GFLOPS: 18.92 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659695.31)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,32)
  for k.1 (0,56)
    for i.3 (0,7)
      vectorize j.3 (0,14)
        out = ...

==================================================
No: 12	GFLOPS: 71.95 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659695.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,28)
    for i_c.2 (0,7)
      for j_c.2 (0,14)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 13	GFLOPS: 55.78 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659695.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for i_c.2 (0,28)
      for j_c.2 (0,4)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 14	GFLOPS: 46.92 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659696.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,56)
    for j_c.2 (0,14)
      for i_c.3 (0,28)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,28)
    for j.2 (0,56)
      out = ...

==================================================
No: 15	GFLOPS: 40.92 / 82.58	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.53, Tstamp:1696659696.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for i_c.2 (0,14)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 16	GFLOPS: 93.72 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696659696.52)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,7)
  for j.1 (0,7)
    for k.0 (0,56)
      for i.2 (0,4)
        for j.2 (0,8)
          for i.3 (0,2)
            out = ...

==================================================
No: 17	GFLOPS: 29.99 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659699.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 16
  for i_c.2 (0,4)
    for k.1 (0,56)
      vectorize j_c.3 (0,56)
        out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,56)
      out = ...

==================================================
No: 18	GFLOPS: 42.85 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659699.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,196)
  for j.1 (0,2)
    out.local auto_unroll: 64
    for k.0 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,7)
          for i_c.3 (0,4)
            out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 19	GFLOPS: 10.27 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659699.98)
==================================================
Placeholder: A, B
out auto_unroll: 16
for k.0 (0,8)
  for i.2 (0,56)
    for j.2 (0,4)
      for k.1 (0,7)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 20	GFLOPS: 89.51 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696659700.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,7)
  out.local auto_unroll: 512
  for k.0 (0,28)
    for i_c.2 (0,14)
      for k.1 (0,2)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 21	GFLOPS: 15.65 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659700.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,14)
      for k.1 (0,28)
        out.local = ...
  for i.2 (0,14)
    out = ...

==================================================
No: 22	GFLOPS: 22.13 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.10, Tstamp:1696659700.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for j_c.1 (0,7)
    for k.0 (0,2)
      for i_c.2 (0,7)
        for j_c.2 (0,8)
          for k.1 (0,28)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 23	GFLOPS: 58.48 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.82, Tstamp:1696659700.63)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 512
  for k.0 (0,28)
    for i_c.2 (0,2)
      for j_c.2 (0,28)
        for k.1 (0,2)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,28)
      out = ...

==================================================
No: 24	GFLOPS: 13.33 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659700.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,196)
  for i_c.2 (0,4)
    for j_c.2 (0,4)
      for k.1 (0,56)
        out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 25	GFLOPS: 13.12 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659700.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,196)
  for i_c.2 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,56)
        out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 26	GFLOPS: 27.63 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659701.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,49)
  for k.0 (0,2)
    for i_c.2 (0,8)
      for j_c.2 (0,4)
        for k.1 (0,28)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 27	GFLOPS: 44.11 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696659701.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for i_c.2 (0,14)
    for j_c.2 (0,7)
      for k.1 (0,56)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,14)
    for j.2 (0,28)
      out = ...

==================================================
No: 28	GFLOPS: 51.59 / 93.72	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696659701.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 64
  for j_c.1 (0,2)
    for k.0 (0,56)
      for j_c.2 (0,14)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,4)
    for j.1 (0,56)
      out = ...

===................****************
===============================================
No: 29	GFLOPS: 2.13 / 93.72	results: MeasureResult(cost:[0.0002], error_no:0, all_cost:0.22, Tstamp:1696659701.69)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,8)
  for k.0 (0,2)
    for k.1 (0,28)
      for i.3 (0,56)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 30	GFLOPS: 99.75 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659701.91)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  for j_c.1 (0,7)
    for k.0 (0,28)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,2)
    for j.1 (0,56)
      out = ...

==================================================
No: 31	GFLOPS: 21.60 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.70, Tstamp:1696659702.17)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 512
  for j_c.1 (0,7)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,56)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    for j.1 (0,28)
      out = ...

==================================================
No: 32	GFLOPS: 98.48 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659702.35)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for k.1 (0,14)
      for i_c.3 (0,28)
        for j_c.3 (0,28)
          out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 33	GFLOPS: 51.65 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659704.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,32)
  out.local auto_unroll: 64
  for j_c.2 (0,7)
    for k.1 (0,56)
      for i_c.3 (0,14)
        out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 34	GFLOPS: 17.52 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696659705.23)
==================================================
Placeholder: A, B
for j_c.1 (0,7)
  for i_c.2 (0,28)
    for k.1 (0,56)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,8)
          out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 35	GFLOPS: 2.01 / 99.75	results: MeasureResult(cost:[0.0002], error_no:0, all_cost:0.61, Tstamp:1696659705.63)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,8)
    for i.2 (0,4)
      for j.2 (0,28)
        for k.1 (0,7)
          for i.3 (0,7)
            out = ...

==================================================
No: 36	GFLOPS: 25.35 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659705.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for i_c.2 (0,7)
    for j_c.2 (0,14)
      for k.1 (0,56)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 37	GFLOPS: 68.62 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659706.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  for k.0 (0,28)
    for j_c.2 (0,14)
      for k.1 (0,2)
        out.local = ...
  vectorize j.2 (0,14)
    out = ...

==================================================
No: 38	GFLOPS: 48.66 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659706.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,14)
        for i_c.2 (0,7)
          for k.1 (0,4)
            for i_c.3 (0,4)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 39	GFLOPS: 32.91 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696659706.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,98)
  for j.1 (0,2)
    out.local auto_unroll: 64
    for k.0 (0,4)
      for j_c.2 (0,4)
        for k.1 (0,14)
          for i_c.3 (0,4)
            out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,4)
        out = ...

==================================================
No: 40	GFLOPS: 42.05 / 99.75	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659706.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for i_c.2 (0,4)
      for k.1 (0,2)
        for i_c.3 (0,14)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 41	GFLOPS: 118.27 / 118.27	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659706.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for j_c.2 (0,28)
      for k.1 (0,7)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    for j.2 (0,28)
      out = ...

==================================================
No: 42	GFLOPS: 120.46 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696659707.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,56)
    for j_c.2 (0,14)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,56)
      out = ...

==================================================
No: 43	GFLOPS: 18.48 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.63, Tstamp:1696659707.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,7)
    for j_c.1 (0,7)
      for k.0 (0,14)
        for i_c.2 (0,8)
          for j_c.2 (0,4)
            for k.1 (0,4)
              out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 44	GFLOPS: 44.70 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.57, Tstamp:1696659707.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for j_c.1 (0,4)
    for i_c.2 (0,14)
      for k.1 (0,56)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 45	GFLOPS: 74.33 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696659708.10)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,112)
  for k.0 (0,8)
    for k.1 (0,7)
      for i.3 (0,2)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 46	GFLOPS: 20.28 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696659708.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,784)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for k.1 (0,7)
      for i_c.3 (0,4)
        out.local = ...
  for i.2 (0,4)
    out = ...

==================================================
No: 47	GFLOPS: 0.60 / 120.46	results: MeasureResult(cost:[0.0006], error_no:0, all_cost:0.27, Tstamp:1696................****************
659708.37)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,56)
    for i.2 (0,2)
      for j.2 (0,7)
        for i.3 (0,14)
          out = ...

==================================================
No: 48	GFLOPS: 41.19 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.53, Tstamp:1696659708.67)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,8)
      for k.0 (0,7)
        for i_c.2 (0,4)
          for j_c.2 (0,7)
            for k.1 (0,8)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,56)
      out = ...

==================================================
No: 49	GFLOPS: 111.31 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.63, Tstamp:1696659712.61)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,98)
  for k.0 (0,4)
    for i.2 (0,2)
      for k.1 (0,14)
        for i.3 (0,4)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 50	GFLOPS: 23.84 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659712.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for j_c.1 (0,7)
      for k.0 (0,28)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 51	GFLOPS: 5.69 / 120.46	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.18, Tstamp:1696659713.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,3136)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for k.1 (0,2)
      out.local = ...
  out = ...

==================================================
No: 52	GFLOPS: 29.57 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696659713.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for k.0 (0,2)
      for i_c.2 (0,7)
        for k.1 (0,28)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,14)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 53	GFLOPS: 4.95 / 120.46	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.60, Tstamp:1696659713.29)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,2)
    for i.2 (0,7)
      for k.1 (0,28)
        for i.3 (0,8)
          for j.3 (0,28)
            out = ...

==================================================
No: 54	GFLOPS: 35.25 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659713.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  for k.0 (0,8)
    for k.1 (0,7)
      for i.3 (0,4)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 55	GFLOPS: 64.31 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659713.86)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for k.0 (0,8)
    for i_c.2 (0,56)
      for j_c.2 (0,4)
        for k.1 (0,7)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 56	GFLOPS: 43.16 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.15, Tstamp:1696659714.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,28)
          for i_c.3 (0,7)
            out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 57	GFLOPS: 81.62 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.62, Tstamp:1696659714.34)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,28)
      for i_c.2 (0,7)
        for k.1 (0,2)
          vectorize j_c.3 (0,14)
            out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 58	GFLOPS: 26.24 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696659714.63)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@ (0,1568)
  for k.0 (0,2)
    for j.2 (0,2)
      for k.1 (0,28)
        out = ...

==================================================
No: 59	GFLOPS: 36.70 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659714.92)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,28)
    for k.1 (0,2)
      for i.3 (0,2)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 60	GFLOPS: 91.62 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659715.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  for k.0 (0,56)
    for j.2 (0,8)
      out = ...

==================================================
No: 61	GFLOPS: 101.07 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.99, Tstamp:1696659715.44)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,2)
    for i.2 (0,4)
      for k.1 (0,28)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 62	GFLOPS: 38.67 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.53, Tstamp:1696659715.72)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,392)
  for j.1 (0,2)
    for k.0 (0,14)
      for k.1 (0,4)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 63	GFLOPS: 20.96 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659715.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,28)
    for i_c.2 (0,4)
      for k.1 (0,2)
        for i_c.3 (0,7)
          out.local = ...
  for i.2 (0,28)
    out = ...

==================================================
No: 64	GFLOPS: 81.47 / 120.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659716.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,14)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for i_c.2 (0,2)
          for j_c.2 (0,4)
            for k.1 (0,14)
              vectorize j_c.3 (0,7)
                out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

Time elapsed for measurement: 26.02 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.15 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1922	fail_ct: 9	Time elapsed: 1.19
GA Iter: 0	Max score: 0.9997	Min score: 0.9299	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9874	#Pop: 128	#M+: 1377	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.19
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 127.36 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659727.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,28)
          for j_c.3 (0,28)
            out.local = ...
  for i.1 (0,2)
    for j.1 (0,56)
      out = ...

==================================================
No: 66	GFLOPS: 44.73 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659727.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  for j.1 (0,2)
    out.local auto_unroll: 16
    for k.0 (0,8)
      for i_c.2 (0,7)
        for k.1 (0,7)
          vectorize j_c.3 (0,2)
            out.local = ...
    for i.2 (0,7)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 67	GFLOPS: 114.51 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696659728.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for j_c.2 (0,56)
      out.local = ...
  for j.1 (0,56)
    out = ...

==================================================
No: 68	GFLOPS: 118.44 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659728.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,14)
        for i_c.3 (0,7)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 69	GFLOPS: 32.64 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.64, Tstamp:1696659728.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,4)
    for i_c.2 (0,28)
      for j_c.2 (0,2)
        for k.1 (0,14)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,14)
              out.local = ...
  for i.2 (0,56)
    for j.2 (0,28)
      out = ...

==================================================
No: 70	GFLOPS: 45.37 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659728.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for i_c.2 (0,4)
      for j_c.2 (0,14)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 71	GFLOPS: 24.18 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659729.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,4)
  for j.1 (0,7)
    out.local auto_unroll: 512
    for i_c.2 (0,56)
      for k.1 (0,56)
        vectorize j_c.3 (0,2)
          out.local = ...
    for i.2 (0,56)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 72	GFLOPS: 71.99 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659729.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,7)
        for k.1 (0,7)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 73	GFLOPS: 53.81 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.85, Tstamp:1696659729.47)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,98)
  for i.1 (0,4)
    out.local auto_unroll: 512
    for k.0 (0,28)
      for ................****************
i_c.2 (0,2)
        for j_c.2 (0,4)
          for k.1 (0,2)
            out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,4)
        out = ...

==================================================
No: 74	GFLOPS: 28.46 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.17, Tstamp:1696659729.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  out.local auto_unroll: 512
  for k.1 (0,56)
    for i_c.3 (0,8)
      out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 75	GFLOPS: 65.09 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659729.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,8)
    for i_c.2 (0,7)
      for j_c.2 (0,14)
        for k.1 (0,7)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 76	GFLOPS: 91.54 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696659730.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,7)
        for i_c.3 (0,7)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 77	GFLOPS: 107.67 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.57, Tstamp:1696659730.52)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,98)
  for k.1 (0,56)
    for i.3 (0,8)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 78	GFLOPS: 117.99 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659730.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,7)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for j_c.2 (0,14)
      for k.1 (0,28)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,8)
    for j.2 (0,56)
      out = ...

==================================================
No: 79	GFLOPS: 12.75 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696659731.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,28)
          for i_c.3 (0,2)
            out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 80	GFLOPS: 110.02 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659731.24)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,28)
    for j.2 (0,14)
      for k.1 (0,2)
        for i.3 (0,7)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 81	GFLOPS: 3.95 / 127.36	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.32, Tstamp:1696659734.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,8)
    for i.2 (0,7)
      for j.2 (0,2)
        for k.1 (0,7)
          for i.3 (0,8)
            out = ...

==================================================
No: 82	GFLOPS: 25.05 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696659734.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for i_c.2 (0,7)
        for k.1 (0,56)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 83	GFLOPS: 76.71 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659734.99)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for j_c.1 (0,2)
  for i_c.2 (0,4)
    for j_c.2 (0,4)
      for k.1 (0,56)
        for i_c.3 (0,14)
          vectorize j_c.3 (0,7)
            out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 84	GFLOPS: 99.02 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696659735.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 16
  for k.0 (0,14)
    for j_c.2 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.1 (0,4)
    for j.1 (0,28)
      out = ...

==================================================
No: 85	GFLOPS: 97.44 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659735.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 16
  for k.0 (0,7)
    for i_c.2 (0,8)
      for j_c.2 (0,7)
        for k.1 (0,8)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,8)
    for j.2 (0,28)
      out = ...

==================================================
No: 86	GFLOPS: 96.06 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659735.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,2)
      for j_c.2 (0,7)
        for k.1 (0,2)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,2)
    for j.2 (0,56)
      out = ...

==================================================
No: 87	GFLOPS: 10.25 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659735.67)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,1568)
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,14)
        out.local = ...
  for i.2 (0,2)
    out = ...

==================================================
No: 88	GFLOPS: 49.98 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.67, Tstamp:1696659735.96)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,392)
  for j.2 (0,2)
    for k.1 (0,56)
      vectorize j.3 (0,4)
        out = ...

==================================================
No: 89	GFLOPS: 14.55 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659736.25)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for k.0 (0,2)
  for i_c.2 (0,4)
    for j_c.2 (0,56)
      for k.1 (0,28)
        for i_c.3 (0,14)
          out.local = ...
for i.1 (0,56)
  vectorize j.1 (0,56)
    out = ...

==================================================
No: 90	GFLOPS: 97.34 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.49, Tstamp:1696659736.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for k.1 (0,14)
      for i_c.3 (0,8)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 91	GFLOPS: 1.39 / 127.36	results: MeasureResult(cost:[0.0003], error_no:0, all_cost:0.23, Tstamp:1696659736.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,14)
    for k.1 (0,4)
      for i.3 (0,28)
        out = ...

==================================================
No: 92	GFLOPS: 75.53 / 127.36	results: Measur....****
eResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696659736.92)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for j_c.2 (0,14)
      for k.1 (0,7)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 93	GFLOPS: 10.18 / 127.36	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659737.05)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,56)
  for i.2 (0,28)
    for j.2 (0,2)
      for k.1 (0,56)
        out = ...

==================================================
No: 94	GFLOPS: 133.30 / 133.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659737.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for j_c.1 (0,14)
    for k.0 (0,14)
      for i_c.2 (0,7)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 95	GFLOPS: 35.18 / 133.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.31, Tstamp:1696659737.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,98)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for j_c.2 (0,4)
          for k.1 (0,14)
            out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 96	GFLOPS: 43.76 / 133.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.91, Tstamp:1696659737.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for j_c.2 (0,28)
      for i_c.3 (0,14)
        out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,28)
      out = ...

==================================================
No: 97	GFLOPS: 58.78 / 133.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659739.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,28)
    for i_c.2 (0,2)
      for j_c.2 (0,28)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,2)
    for j.2 (0,56)
      out = ...

==================================================
No: 98	GFLOPS: 19.73 / 133.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696659739.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,28)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 99	GFLOPS: 17.16 / 133.30	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659740.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,28)
    for j_c.1 (0,2)
      for k.0 (0,56)
        for j_c.2 (0,2)
          vectorize j_c.3 (0,14)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 100	GFLOPS: 133.89 / 133.89	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659740.25)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,56)
  for k.0 (0,8)
    for j.2 (0,7)
      for k.1 (0,7)
        for i.3 (0,2)
          vectorize j.3 (0,4)
            out = ...

Time elapsed for measurement: 17.56 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((56, 56), "float32"), B: T.Buffer((56, 56), "float32"), out: T.Buffer((56, 56), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(56):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 56
            out_1 = T.Buffer((3136,), data=out.data)
            out_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 8:cse_var_1 + 8 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 16:cse_var_1 + 16 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 24:cse_var_1 + 24 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 32:cse_var_1 + 32 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 40:cse_var_1 + 40 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 48:cse_var_1 + 48 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer in range(56):
                cse_var_9: T.int32 = k_outer * 56
                cse_var_8: T.int32 = cse_var_1 + k_outer
                cse_var_7: T.int32 = cse_var_1 + 8
                cse_var_6: T.int32 = cse_var_1 + 48
                cse_var_5: T.int32 = cse_var_1 + 40
                cse_var_4: T.int32 = cse_var_1 + 32
                cse_var_3: T.int32 = cse_var_1 + 24
                cse_var_2: T.int32 = cse_var_1 + 16
                A_1 = T.Buffer((3136,), data=A.data)
                B_1 = T.Buffer((3136,), data=B.data)
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9:cse_var_9 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 8:cse_var_9 + 8 + 8]
                out_1[cse_var_2:cse_var_2 + 8] = out_1[cse_var_2:cse_var_2 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 16:cse_var_9 + 16 + 8]
                out_1[cse_var_3:cse_var_3 + 8] = out_1[cse_var_3:cse_var_3 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 24:cse_var_9 + 24 + 8]
                out_1[cse_var_4:cse_var_4 + 8] = out_1[cse_var_4:cse_var_4 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 32:cse_var_9 + 32 + 8]
                out_1[cse_var_5:cse_var_5 + 8] = out_1[cse_var_5:cse_var_5 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 40:cse_var_9 + 40 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 48:cse_var_9 + 48 + 8]
Execution time of this operator: max:1.568 us   median:1.508 us   min:1.435 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=1)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=8)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=7)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=1)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 16)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

