----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1926	fail_ct: 11	Time elapsed: 1.05
GA Iter: 0	Max score: 0.9983	Min score: 0.9460	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9873	#Pop: 128	#M+: 1390	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 4.89
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [56, 56]
B = PLACEHOLDER [56, 56]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 16.87 / 16.87	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659286.71)
==================================================
Placeholder: A, B
for i_c.1 (0,2)
  for j_c.1 (0,7)
    for k.0 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,28)
            vectorize j_c.3 (0,4)
              out.local = ...
for i.1 (0,56)
  vectorize j.1 (0,56)
    out = ...

==================================================
No: 2	GFLOPS: 35.08 / 35.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659286.99)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,784)
  for k.0 (0,56)
    for j.2 (0,2)
      for i.3 (0,2)
        out = ...

==================================================
No: 3	GFLOPS: 24.52 / 35.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.69, Tstamp:1696659287.28)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for i_c.2 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,56)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 4	GFLOPS: 13.00 / 35.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659287.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,3136)
  for k.0 (0,28)
    for k.1 (0,2)
      out = ...

==================================================
No: 5	GFLOPS: 59.26 / 59.26	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659287.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for i_c.2 (0,14)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 6	GFLOPS: 13.38 / 59.26	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659287.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,2)
    for j_c.1 (0,28)
      for i_c.2 (0,14)
        for k.1 (0,56)
          out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 7	GFLOPS: 17.45 / 59.26	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659288.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,14)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 8	GFLOPS: 89.97 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659288.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,56)
      for i_c.2 (0,2)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,7)
      out = ...

==================================================
No: 9	GFLOPS: 27.37 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696659288.65)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for i_c.1 (0,4)
  for j_c.1 (0,28)
    for k.0 (0,8)
      for i_c.2 (0,14)
        for k.1 (0,7)
          vectorize j_c.3 (0,2)
            out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 10	GFLOPS: 53.04 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659288.78)
===................****************
===============================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 512
  for j_c.1 (0,14)
    for k.0 (0,14)
      for k.1 (0,4)
        for i_c.3 (0,14)
          out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 11	GFLOPS: 11.22 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.69, Tstamp:1696659288.91)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,7)
      for k.0 (0,56)
        for i_c.3 (0,2)
          out.local = ...
  for i.1 (0,4)
    for j.1 (0,7)
      out = ...

==================================================
No: 12	GFLOPS: 33.55 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659289.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,14)
    for i_c.2 (0,28)
      for k.1 (0,4)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 13	GFLOPS: 19.77 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659289.17)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 64
  for k.1 (0,56)
    for i_c.3 (0,7)
      vectorize j_c.3 (0,14)
        out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 14	GFLOPS: 65.30 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659289.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,224)
  for k.0 (0,4)
    for j_c.2 (0,2)
      for k.1 (0,14)
        vectorize j_c.3 (0,7)
          out.local = ...
  vectorize j.2 (0,14)
    out = ...

==================================================
No: 15	GFLOPS: 78.29 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659289.74)
==================================================
Placeholder: A, B
parallel i.0@ (0,2)
  for i.1 (0,4)
    out.local auto_unroll: 16
    for k.0 (0,14)
      for j_c.2 (0,14)
        for k.1 (0,4)
          for i_c.3 (0,7)
            vectorize j_c.3 (0,4)
              out.local = ...
    for i.2 (0,7)
      vectorize j.2 (0,56)
        out = ...

==================================================
No: 16	GFLOPS: 20.19 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659289.86)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for j_c.2 (0,4)
    for k.1 (0,56)
      for i_c.3 (0,28)
        out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 17	GFLOPS: 30.98 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659293.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for i_c.2 (0,14)
    for j_c.2 (0,7)
      for k.1 (0,56)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 18	GFLOPS: 18.74 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659293.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,392)
  for j.1 (0,4)
    out.local auto_unroll: 16
    for k.0 (0,56)
      for i_c.2 (0,2)
        out.local = ...
    for i.2 (0,2)
      out = ...

==================================================
No: 19	GFLOPS: 20.19 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659293.37)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,7)
    for i.2 (0,7)
      for j.2 (0,7)
        for k.1 (0,8)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 20	GFLOPS: 60.06 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696659293.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,7)
      for k.1 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,56)
            out.local = ...
  for i.2 (0,14)
    for j.2 (0,56)
      out = ...

==================================================
No: 21	GFLOPS: 14.22 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.18, Tstamp:1696659293.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,784)
  for j.1 (0,2)
    out.local auto_unroll: 16
    for k.1 (0,56)
      for i_c.3 (0,2)
        out.local = ...
    for i.2 (0,2)
      out = ...

==================================================
No: 22	GFLOPS: 68.48 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659294.05)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,28)
    for i.2 (0,28)
      for k.1 (0,2)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 23	GFLOPS: 20.31 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.76, Tstamp:1696659294.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,28)
    for j.2 (0,2)
      for k.1 (0,2)
        for i.3 (0,28)
          for j.3 (0,28)
            out = ...

==================================================
No: 24	GFLOPS: 4.43 / 89.97	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.37, Tstamp:1696659294.47)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,56)
    for i.2 (0,2)
      for j.2 (0,2)
        for i.3 (0,7)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 25	GFLOPS: 3.32 / 89.97	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.20, Tstamp:1696659294.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for k.0 (0,28)
    for k.1 (0,2)
      for i.3 (0,56)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 26	GFLOPS: 29.39 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659294.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  for j.1 (0,7)
    out.local auto_unroll: 64
    for k.0 (0,7)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,8)
            out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 27	GFLOPS: 12.78 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696659294.87)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,14)
    for i.2 (0,14)
      for j.2 (0,7)
        for k.1 (0,4)
          for i.3 (0,2)
            out = ...

==================================================
No: 28	GFLOPS: 17.92 / 89.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.18, Tstamp:1696659295.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for i_c.2 (0,28)
    for k.1 (0,56)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,56)
    out = ...

==================================================
No: 29	GFLOPS: 106.98 / 106.98	results: MeasureRe................****************
sult(cost:[0.0000], error_no:0, all_cost:1.39, Tstamp:1696659295.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for j_c.2 (0,14)
      for k.1 (0,14)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,2)
    for j.1 (0,56)
      out = ...

==================================================
No: 30	GFLOPS: 135.92 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696659295.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for j_c.1 (0,7)
    for k.0 (0,56)
      for i_c.2 (0,7)
        for j_c.2 (0,8)
          out.local = ...
  for i.1 (0,7)
    for j.1 (0,56)
      out = ...

==================================================
No: 31	GFLOPS: 23.13 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696659295.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for j_c.2 (0,56)
    for k.1 (0,56)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    for j.2 (0,56)
      out = ...

==================================================
No: 32	GFLOPS: 70.48 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659295.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,7)
    for i.2 (0,2)
      for j.2 (0,14)
        for k.1 (0,8)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 33	GFLOPS: 36.93 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659299.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  for k.0 (0,4)
    for j_c.2 (0,14)
      for k.1 (0,14)
        for i_c.3 (0,4)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 34	GFLOPS: 18.49 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659299.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,14)
    for j_c.1 (0,28)
      for k.0 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,28)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 35	GFLOPS: 68.15 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659299.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i_c.2 (0,4)
    for j_c.2 (0,7)
      for k.1 (0,56)
        for i_c.3 (0,14)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 36	GFLOPS: 21.80 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659299.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,7)
      for j_c.2 (0,8)
        for k.1 (0,28)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 37	GFLOPS: 51.82 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659299.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,4)
    for i.2 (0,14)
      for k.1 (0,14)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 38	GFLOPS: 53.99 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.55, Tstamp:1696659300.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,14)
      for j_c.2 (0,2)
        for k.1 (0,14)
          out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 39	GFLOPS: 30.13 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659300.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,14)
      for i_c.2 (0,7)
        for j_c.2 (0,2)
          for k.1 (0,4)
            for i_c.3 (0,8)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 40	GFLOPS: 5.40 / 135.92	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.57, Tstamp:1696659300.54)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,8)
    for i.2 (0,28)
      for k.1 (0,7)
        out = ...

==================================================
No: 41	GFLOPS: 22.18 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659300.67)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  out.local auto_unroll: 512
  for j_c.1 (0,2)
    for k.0 (0,56)
      for i_c.3 (0,28)
        out.local = ...
  for i.1 (0,28)
    for j.1 (0,2)
      out = ...

==================================================
No: 42	GFLOPS: 22.23 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659300.81)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for k.1 (0,56)
      vectorize j_c.3 (0,14)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 43	GFLOPS: 46.41 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696659301.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for j_c.2 (0,2)
      for i_c.3 (0,7)
        out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 44	GFLOPS: 55.34 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696659301.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,8)
    for k.0 (0,8)
      for j_c.2 (0,28)
        for k.1 (0,7)
          for i_c.3 (0,7)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 45	GFLOPS: 70.15 / 135.92	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.69, Tstamp:1696659301.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,14)
    for j_c.1 (0,7)
      for k.0 (0,14)
        for i_c.2 (0,2)
          for k.1 (0,4)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 46	GFLOPS: 150.31 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659301.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,14)
    for k.0 (0,28)
      for j_c.2 (0,14)
        for k.1 (0,2)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 47	GFLOPS: 51.99 / 150.31	results: MeasureResult(cost:[0.0000................****************
], error_no:0, all_cost:0.25, Tstamp:1696659301.86)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,4)
  for i.2 (0,2)
    for j.2 (0,14)
      for k.1 (0,56)
        for i.3 (0,14)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 48	GFLOPS: 11.14 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659301.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 64
  for i_c.1 (0,56)
    for j_c.1 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,56)
          out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 49	GFLOPS: 32.11 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.88, Tstamp:1696659305.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,98)
  for i.1 (0,2)
    for j.1 (0,4)
      out.local auto_unroll: 512
      for k.0 (0,7)
        for k.1 (0,8)
          for i_c.3 (0,4)
            out.local = ...
      for i.2 (0,4)
        out = ...

==================================================
No: 50	GFLOPS: 15.28 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.81, Tstamp:1696659305.81)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,7)
    for i.2 (0,14)
      for k.1 (0,8)
        for i.3 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 51	GFLOPS: 40.32 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696659306.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  out.local auto_unroll: 16
  for j_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,2)
        for j_c.2 (0,4)
          for k.1 (0,28)
            out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 52	GFLOPS: 130.01 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.65, Tstamp:1696659306.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,7)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for j_c.2 (0,7)
      for k.1 (0,4)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.2 (0,8)
    for j.2 (0,56)
      out = ...

==================================================
No: 53	GFLOPS: 83.49 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.74, Tstamp:1696659306.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for k.1 (0,7)
      for j_c.3 (0,56)
        out.local = ...
  for j.2 (0,56)
    out = ...

==================================================
No: 54	GFLOPS: 29.64 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659306.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,49)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for k.1 (0,28)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,8)
    for j.2 (0,8)
      out = ...

==================================================
No: 55	GFLOPS: 46.36 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659306.96)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i.2 (0,28)
      for k.1 (0,28)
        for i.3 (0,2)
          vectorize j.3 (0,14)
            out = ...

==================================================
No: 56	GFLOPS: 25.32 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659307.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 64
  for k.0 (0,56)
    for i_c.2 (0,14)
      for i_c.3 (0,4)
        out.local = ...
  for i.2 (0,56)
    out = ...

==================================================
No: 57	GFLOPS: 26.54 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659307.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  for i.1 (0,2)
    for j.1 (0,2)
      out.local auto_unroll: 64
      for k.0 (0,14)
        for i_c.2 (0,4)
          for k.1 (0,4)
            for i_c.3 (0,7)
              out.local = ...
      for i.2 (0,28)
        out = ...

==================================================
No: 58	GFLOPS: 5.58 / 150.31	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.22, Tstamp:1696659307.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,14)
    for i.2 (0,2)
      for j.2 (0,14)
        for k.1 (0,4)
          for i.3 (0,2)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 59	GFLOPS: 15.82 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696659307.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,56)
      for j_c.2 (0,2)
        for k.1 (0,28)
          out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 60	GFLOPS: 4.46 / 150.31	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.19, Tstamp:1696659307.63)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,56)
    for i.2 (0,56)
      for j.2 (0,7)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 61	GFLOPS: 81.13 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696659307.88)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,196)
  for k.1 (0,56)
    for i.3 (0,8)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 62	GFLOPS: 86.25 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659308.14)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,98)
  for j.1 (0,2)
    for k.0 (0,28)
      for i.2 (0,8)
        for k.1 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 63	GFLOPS: 125.00 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.58, Tstamp:1696659308.48)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,4)
    for i.2 (0,2)
      for k.1 (0,14)
        for i.3 (0,4)
          vectorize j.3 (0,7)
            out = ...

==================================================
No: 64	GFLOPS: 64.08 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696659308.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for i_c.1 (0,7)
    for j_c.1 (0,8)
      for k.0 (0,4)
        for k.1 (0,14)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.1 (0,7)
    for j.1 (0,56)
      out = ...

Time elapsed for measurement: 24.58 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.14 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1913	fail_ct: 21	Time elapsed: 1.06
GA Iter: 0	Max score: 0.9980	Min score: 0.9252	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9863	#Pop: 128	#M+: 1380	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 4.82
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 10.18 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.24, Tstamp:1696659320.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,56)
      for k.0 (0,2)
        for i_c.2 (0,14)
          for k.1 (0,28)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 66	GFLOPS: 28.90 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659320.33)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,56)
  for j.1 (0,2)
    for k.0 (0,4)
      for j.2 (0,2)
        for k.1 (0,14)
          for i.3 (0,14)
            out = ...

==================================================
No: 67	GFLOPS: 21.56 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659320.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  for j.1 (0,7)
    out.local auto_unroll: 64
    for i_c.2 (0,2)
      for k.1 (0,56)
        vectorize j_c.3 (0,2)
          out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 68	GFLOPS: 88.54 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659320.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,98)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for k.1 (0,56)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 69	GFLOPS: 14.97 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659321.04)
==================================================
Placeholder: A, B
for j_c.1 (0,4)
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,14)
        for i_c.3 (0,28)
          vectorize j_c.3 (0,14)
            out.local = ...
for i.1 (0,56)
  vectorize j.1 (0,56)
    out = ...

==================================================
No: 70	GFLOPS: 69.82 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659321.17)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,28)
  for i.1 (0,7)
    for k.0 (0,56)
      for i.3 (0,8)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 71	GFLOPS: 66.12 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659321.37)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,224)
  out.local auto_unroll: 16
  for k.0 (0,7)
    for i_c.2 (0,2)
      for k.1 (0,8)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,7)
      out = ...

==================================================
No: 72	GFLOPS: 30.40 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.18, Tstamp:1696659321.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  for k.0 (0,56)
    for i.2 (0,2)
      for j.2 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 73	GFLOPS: 86.80 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659321.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,14)
    for i_c.2 (0,2)
      for j_c.2 (0,7)
        for k.1 (0,4)
          for i_c.3 (0,14)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,28)
      out = ...

==================================================
No: 74	GFLOPS: 5.20 /................****************
 150.31	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.19, Tstamp:1696659321.89)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,56)
    for i.3 (0,28)
      vectorize j.3 (0,7)
        out = ...

==================================================
No: 75	GFLOPS: 19.67 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.16, Tstamp:1696659322.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 512
  for i_c.1 (0,14)
    for j_c.1 (0,4)
      for i_c.2 (0,2)
        for k.1 (0,56)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 76	GFLOPS: 121.56 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659322.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  for k.0 (0,8)
    for k.1 (0,7)
      for i.3 (0,7)
        vectorize j.3 (0,28)
          out = ...

==================================================
No: 77	GFLOPS: 78.44 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696659322.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,2)
    for i.2 (0,7)
      for j.2 (0,2)
        for k.1 (0,28)
          vectorize j.3 (0,7)
            out = ...

==================================================
No: 78	GFLOPS: 48.69 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696659322.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,28)
      for k.0 (0,14)
        for i_c.2 (0,14)
          for k.1 (0,4)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 79	GFLOPS: 20.37 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.64, Tstamp:1696659323.11)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for j_c.1 (0,8)
  for k.0 (0,8)
    for i_c.2 (0,28)
      for j_c.2 (0,7)
        for k.1 (0,7)
          for i_c.3 (0,2)
            out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 80	GFLOPS: 47.07 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659323.24)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,196)
  for k.0 (0,14)
    for i.2 (0,2)
      for j.2 (0,2)
        for k.1 (0,4)
          for i.3 (0,4)
            out = ...

==================================================
No: 81	GFLOPS: 128.71 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659326.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,14)
      for j_c.2 (0,56)
        for k.1 (0,2)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,28)
    for j.2 (0,56)
      out = ...

==================================================
No: 82	GFLOPS: 19.61 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659326.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 64
  for i_c.1 (0,14)
    for j_c.1 (0,2)
      for k.0 (0,4)
        for i_c.2 (0,4)
          for j_c.2 (0,4)
            for k.1 (0,14)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 83	GFLOPS: 51.94 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659327.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,196)
  out.local auto_unroll: 64
  for k.0 (0,7)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 84	GFLOPS: 41.67 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659327.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  for i_c.1 (0,7)
    for j_c.1 (0,28)
      for k.0 (0,2)
        for k.1 (0,28)
          out.local = ...
  for i.1 (0,7)
    for j.1 (0,28)
      out = ...

==================================================
No: 85	GFLOPS: 31.45 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659327.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,28)
      for k.1 (0,14)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.2 (0,28)
    for j.2 (0,14)
      out = ...

==================================================
No: 86	GFLOPS: 36.34 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.18, Tstamp:1696659327.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,56)
    for j.2 (0,2)
      vectorize j.3 (0,28)
        out = ...

==================================================
No: 87	GFLOPS: 65.05 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659327.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for j_c.2 (0,14)
      for k.1 (0,28)
        vectorize j_c.3 (0,4)
          out.local = ...
  for j.1 (0,56)
    out = ...

==================================================
No: 88	GFLOPS: 114.30 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696659328.21)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,196)
  for k.0 (0,8)
    for k.1 (0,7)
      for i.3 (0,4)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 89	GFLOPS: 114.56 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696659328.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for j_c.2 (0,28)
          for k.1 (0,7)
            out.local = ...
  for i.1 (0,4)
    for j.1 (0,56)
      out = ...

==================================================
No: 90	GFLOPS: 20.51 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659328.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for j_c.2 (0,14)
      for k.1 (0,7)
        for i_c.3 (0,56)
          out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 91	GFLOPS: 23.65 / 150.31	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659328.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,14)
    for j_c.1 (0,14)
      for k.0 (0,2)
        for i_c.2 (0,2)
          for k.1 (0,28)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 92	GFLOPS: 203.99 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659329.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 16
  for....****
 k.0 (0,4)
    for k.1 (0,14)
      for i_c.3 (0,14)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 93	GFLOPS: 65.28 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.54, Tstamp:1696659329.44)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,98)
  for k.0 (0,2)
    for i.2 (0,8)
      for k.1 (0,28)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 94	GFLOPS: 12.27 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.56, Tstamp:1696659329.58)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for i_c.1 (0,7)
  for i_c.2 (0,4)
    for j_c.2 (0,28)
      for k.1 (0,56)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
for i.1 (0,56)
  vectorize j.1 (0,56)
    out = ...

==================================================
No: 95	GFLOPS: 54.35 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659329.70)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,112)
  for i.2 (0,2)
    for j.2 (0,2)
      for k.1 (0,56)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 96	GFLOPS: 152.53 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659330.03)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,28)
  for j.1 (0,2)
    for k.0 (0,8)
      for j.2 (0,28)
        for k.1 (0,7)
          for i.3 (0,2)
            out = ...

==================================================
No: 97	GFLOPS: 187.82 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659331.82)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,98)
  for k.0 (0,56)
    for i.2 (0,4)
      vectorize j.3 (0,8)
        out = ...

==================================================
No: 98	GFLOPS: 88.68 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659332.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 64
  for k.0 (0,14)
    for i_c.2 (0,28)
      for j_c.2 (0,2)
        for k.1 (0,4)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 99	GFLOPS: 69.89 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659332.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for k.0 (0,14)
    for j_c.2 (0,28)
      for k.1 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for j.2 (0,56)
    out = ...

==================================================
No: 100	GFLOPS: 103.70 / 203.99	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659332.59)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,49)
  for k.0 (0,2)
    for i.2 (0,8)
      for k.1 (0,28)
        vectorize j.3 (0,8)
          out = ...

Time elapsed for measurement: 17.71 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((56, 56), "float32"), B: T.Buffer((56, 56), "float32"), out: T.Buffer((56, 56), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_j_outer_outer_fused_i_outer_inner_fused_j_outer_inner_fused in T.parallel(28):
            out_local = T.allocate([14], "float32x8", "local")
            out_local_1 = T.Buffer((14,), "float32x8", data=out_local, scope="local")
            out_local_1[0] = T.Broadcast(T.float32(0), 8)
            out_local_1[1] = T.Broadcast(T.float32(0), 8)
            out_local_1[2] = T.Broadcast(T.float32(0), 8)
            out_local_1[3] = T.Broadcast(T.float32(0), 8)
            out_local_1[4] = T.Broadcast(T.float32(0), 8)
            out_local_1[5] = T.Broadcast(T.float32(0), 8)
            out_local_1[6] = T.Broadcast(T.float32(0), 8)
            out_local_1[7] = T.Broadcast(T.float32(0), 8)
            out_local_1[8] = T.Broadcast(T.float32(0), 8)
            out_local_1[9] = T.Broadcast(T.float32(0), 8)
            out_local_1[10] = T.Broadcast(T.float32(0), 8)
            out_local_1[11] = T.Broadcast(T.float32(0), 8)
            out_local_1[12] = T.Broadcast(T.float32(0), 8)
            out_local_1[13] = T.Broadcast(T.float32(0), 8)
            for k_outer, k_inner in T.grid(4, 14):
                cse_var_2: T.int32 = i_outer_outer_j_outer_outer_fused_i_outer_inner_fused_j_outer_inner_fused // 7 * 784 + k_outer * 14 + k_inner
                cse_var_1: T.int32 = k_outer * 784 + k_inner * 56 + i_outer_outer_j_outer_outer_fused_i_outer_inner_fused_j_outer_inner_fused % 7 * 8
                A_1 = T.Buffer((3136,), data=A.data)
                B_1 = T.Buffer((3136,), data=B.data)
                out_local_1[0] = out_local_1[0] + T.Broadcast(A_1[cse_var_2], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[1] = out_local_1[1] + T.Broadcast(A_1[cse_var_2 + 56], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[2] = out_local_1[2] + T.Broadcast(A_1[cse_var_2 + 112], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[3] = out_local_1[3] + T.Broadcast(A_1[cse_var_2 + 168], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[4] = out_local_1[4] + T.Broadcast(A_1[cse_var_2 + 224], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[5] = out_local_1[5] + T.Broadcast(A_1[cse_var_2 + 280], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[6] = out_local_1[6] + T.Broadcast(A_1[cse_var_2 + 336], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[7] = out_local_1[7] + T.Broadcast(A_1[cse_var_2 + 392], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[8] = out_local_1[8] + T.Broadcast(A_1[cse_var_2 + 448], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[9] = out_local_1[9] + T.Broadcast(A_1[cse_var_2 + 504], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[10] = out_local_1[10] + T.Broadcast(A_1[cse_var_2 + 560], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[11] = out_local_1[11] + T.Broadcast(A_1[cse_var_2 + 616], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[12] = out_local_1[12] + T.Broadcast(A_1[cse_var_2 + 672], 8) * B_1[cse_var_1:cse_var_1 + 8]
                out_local_1[13] = out_local_1[13] + T.Broadcast(A_1[cse_var_2 + 728], 8) * B_1[cse_var_1:cse_var_1 + 8]
            for i_inner in range(14):
                out_1 = T.Buffer((3136,), data=out.data)
                out_1[i_outer_outer_j_outer_outer_fused_i_outer_inner_fused_j_outer_inner_fused // 7 * 784 + i_inner * 56 + i_outer_outer_j_outer_outer_fused_i_outer_inner_fused_j_outer_inner_fused % 7 * 8:i_outer_outer_j_outer_outer_fused_i_outer_inner_fused_j_outer_inner_fused // 7 * 784 + i_inner * 56 + i_outer_outer_j_outer_outer_fused_i_outer_inner_fused_j_outer_inner_fused % 7 * 8 + 8] = out_local_1[i_inner]
Execution time of this operator: max:1.924 us   median:1.800 us   min:1.702 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_local, = s.cache_write([out], "local")
out_local_i_c, out_local_j_c, out_local_k = tuple(out_local.op.axis) + tuple(out_local.op.reduce_axis)
out_local_i_c_o_i, out_local_i_c_i = s[out_local].split(out_local_i_c, factor=14)
out_local_i_c_o_o_i, out_local_i_c_o_i = s[out_local].split(out_local_i_c_o_i, factor=1)
out_local_i_c_o_o_o, out_local_i_c_o_o_i = s[out_local].split(out_local_i_c_o_o_i, factor=4)
out_local_j_c_o_i, out_local_j_c_i = s[out_local].split(out_local_j_c, factor=8)
out_local_j_c_o_o_i, out_local_j_c_o_i = s[out_local].split(out_local_j_c_o_i, factor=1)
out_local_j_c_o_o_o, out_local_j_c_o_o_i = s[out_local].split(out_local_j_c_o_o_i, factor=7)
out_local_k_o, out_local_k_i = s[out_local].split(out_local_k, factor=14)
s[out_local].reorder(out_local_i_c_o_o_o, out_local_j_c_o_o_o, out_local_i_c_o_o_i, out_local_j_c_o_o_i, out_local_k_o, out_local_i_c_o_i, out_local_j_c_o_i, out_local_k_i, out_local_i_c_i, out_local_j_c_i)
out_i_o_i, out_i_i = s[out].split(out_i, factor=14)
out_i_o_o, out_i_o_i = s[out].split(out_i_o_i, factor=4)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o, out_j_o_i = s[out].split(out_j_o_i, factor=7)
s[out].reorder(out_i_o_o, out_j_o_o, out_i_o_i, out_j_o_i, out_i_i, out_j_i)
s[out_local].compute_at(s[out], out_j_o_i)
out_i_o_o_j_o_o_fused_i_o_i_fused_j_o_i_fused = s[out].fuse(out_i_o_o, out_j_o_o, out_i_o_i, out_j_o_i)
s[out].parallel(out_i_o_o_j_o_o_fused_i_o_i_fused_j_o_i_fused)
s[out_local].pragma(out_local_i_c_o_o_o, "auto_unroll_max_step", 16)
s[out_local].pragma(out_local_i_c_o_o_o, "unroll_explicit", True)
s[out_local].vectorize(out_local_j_c_i)
s[out].vectorize(out_j_i)

