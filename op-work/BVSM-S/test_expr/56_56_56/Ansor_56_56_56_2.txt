----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1918	fail_ct: 23	Time elapsed: 1.36
GA Iter: 0	Max score: 0.9999	Min score: 0.9280	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9872	#Pop: 128	#M+: 1389	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.63
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [56, 56]
B = PLACEHOLDER [56, 56]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 22.46 / 22.46	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696659431.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,224)
  for i.1 (0,2)
    out.local auto_unroll: 16
    for k.0 (0,7)
      for i_c.2 (0,7)
        for k.1 (0,8)
          out.local = ...
    for i.2 (0,7)
      out = ...

==================================================
No: 2	GFLOPS: 52.56 / 52.56	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696659431.74)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,196)
  for k.0 (0,7)
    for j.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,8)
          out = ...

==================================================
No: 3	GFLOPS: 30.49 / 52.56	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659432.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,2)
  for j.1 (0,2)
    out.local auto_unroll: 16
    for k.0 (0,28)
      for i_c.2 (0,28)
        for k.1 (0,2)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,14)
              out.local = ...
    for i.2 (0,56)
      vectorize j.2 (0,14)
        out = ...

==================================================
No: 4	GFLOPS: 52.28 / 52.56	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696659432.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,4)
    for i_c.2 (0,28)
      for j_c.2 (0,7)
        for k.1 (0,14)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.2 (0,56)
    for j.2 (0,28)
      out = ...

==================================================
No: 5	GFLOPS: 113.78 / 113.78	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696659432.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,28)
          for i_c.3 (0,7)
            for j_c.3 (0,28)
              out.local = ...
  for i.2 (0,14)
    for j.2 (0,56)
      out = ...

==================================================
No: 6	GFLOPS: 53.41 / 113.78	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.57, Tstamp:1696659432.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,7)
    for k.0 (0,14)
      for i_c.2 (0,2)
        for j_c.2 (0,4)
          for k.1 (0,4)
            vectorize j_c.3 (0,14)
              out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 7	GFLOPS: 39.84 / 113.78	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659433.09)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  for j.1 (0,2)
    out.local auto_unroll: 16
    for k.0 (0,56)
      for i_c.2 (0,4)
        for i_c.3 (0,2)
          out.local = ...
    for i.2 (0,8)
      out = ...

==================================================
No: 8	GFLOPS: 70.97 / 113.78	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659433.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,196)
  out.local auto_unroll: 512
  for k.0 (0,28)
    for j_c.2 (0,4)
      for k.1 (0,2)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 9	GFLOPS: 235.49 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659433.46)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,56)
    for j.2 (0,7)
      vectorize j.3 (0,8)
        out = ...

==================................****************
================================
No: 10	GFLOPS: 5.98 / 235.49	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.20, Tstamp:1696659433.59)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,3136)
  out.local auto_unroll: 16
  for k.0 (0,7)
    for k.1 (0,8)
      out.local = ...
  out = ...

==================================================
No: 11	GFLOPS: 92.97 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659433.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,14)
    for k.0 (0,56)
      for i_c.2 (0,2)
        for j_c.2 (0,7)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 12	GFLOPS: 105.78 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.60, Tstamp:1696659434.18)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,7)
    for i.2 (0,2)
      for k.1 (0,8)
        for j.3 (0,56)
          out = ...

==================================================
No: 13	GFLOPS: 77.57 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659434.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,98)
  for i.1 (0,2)
    for k.1 (0,56)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,4)
        out = ...

==================================================
No: 14	GFLOPS: 5.32 / 235.49	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.38, Tstamp:1696659434.74)
==================================================
Placeholder: A, B
out.local auto_unroll: 64
for i_c.2 (0,14)
  for j_c.2 (0,2)
    for k.1 (0,56)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,28)
          out.local = ...
for i.2 (0,56)
  vectorize j.2 (0,56)
    out = ...

==================================================
No: 15	GFLOPS: 58.79 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.77, Tstamp:1696659435.15)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,2)
    for i.2 (0,7)
      for k.1 (0,28)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 16	GFLOPS: 90.81 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696659435.36)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,2)
      for k.1 (0,28)
        for j_c.3 (0,28)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,28)
      out = ...

==================================================
No: 17	GFLOPS: 43.88 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.56, Tstamp:1696659438.79)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,2)
    for j.2 (0,7)
      for k.1 (0,56)
        for i.3 (0,7)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 18	GFLOPS: 45.66 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659439.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  for k.1 (0,56)
    vectorize j.3 (0,14)
      out = ...

==================================================
No: 19	GFLOPS: 24.52 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696659439.35)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 64
  for j_c.1 (0,28)
    for k.0 (0,4)
      for i_c.2 (0,14)
        for k.1 (0,14)
          out.local = ...
  for i.1 (0,14)
    for j.1 (0,28)
      out = ...

==================================================
No: 20	GFLOPS: 21.09 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696659439.64)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,8)
  for k.0 (0,14)
    for i_c.2 (0,7)
      for j_c.2 (0,28)
        for k.1 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 21	GFLOPS: 48.19 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659439.77)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,7)
    for i_c.2 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 22	GFLOPS: 54.84 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659440.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for j_c.2 (0,28)
      vectorize j_c.3 (0,2)
        out.local = ...
  for j.2 (0,56)
    out = ...

==================================================
No: 23	GFLOPS: 30.20 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659440.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,49)
  out.local auto_unroll: 16
  for j_c.1 (0,8)
    for k.0 (0,14)
      for i_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,4)
            out.local = ...
  for i.1 (0,8)
    for j.1 (0,8)
      out = ...

==================================================
No: 24	GFLOPS: 38.16 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.68, Tstamp:1696659440.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,28)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,28)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 25	GFLOPS: 7.54 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659440.77)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,2)
  for k.0 (0,7)
    for j_c.2 (0,56)
      for k.1 (0,8)
        for i_c.3 (0,28)
          out.local = ...
for i.1 (0,56)
  vectorize j.1 (0,56)
    out = ...

==================================================
No: 26	GFLOPS: 14.43 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.27, Tstamp:1696659440.98)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,448)
  for j.1 (0,7)
    for k.0 (0,28)
      for k.1 (0,2)
        out = ...

==================================================
No: 27	GFLOPS: 79.13 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659441.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for k.1 (0,14)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 28	GFLOPS: 54.83 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659441.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for j_c.1 (0,2)
    for k.0 (0,14)
      for i_c.2 (0,56)
        for j_c.2 (0,7)
          for k.1 (0,4)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,14)
      out = ...

================................****************
==================================
No: 29	GFLOPS: 11.97 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696659441.44)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,3136)
  for k.0 (0,28)
    for k.1 (0,2)
      out = ...

==================================================
No: 30	GFLOPS: 9.09 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659441.73)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,56)
  for j_c.2 (0,2)
    for k.1 (0,56)
      vectorize j_c.3 (0,28)
        out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 31	GFLOPS: 5.33 / 235.49	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.20, Tstamp:1696659441.85)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,8)
    for i.2 (0,56)
      for k.1 (0,7)
        out = ...

==================================================
No: 32	GFLOPS: 21.78 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659441.99)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,56)
      for k.1 (0,2)
        out.local = ...
  for i.2 (0,56)
    out = ...

==================================================
No: 33	GFLOPS: 6.83 / 235.49	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.23, Tstamp:1696659445.29)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for i.2 (0,28)
    for k.1 (0,56)
      for i.3 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 34	GFLOPS: 28.11 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659445.42)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,14)
  for j.1 (0,4)
    for k.0 (0,2)
      for i.2 (0,2)
        for k.1 (0,28)
          for i.3 (0,2)
            vectorize j.3 (0,14)
              out = ...

==================================================
No: 35	GFLOPS: 94.49 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659445.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,7)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,28)
      for j_c.2 (0,2)
        for k.1 (0,7)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 36	GFLOPS: 17.77 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696659445.81)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,56)
    for i.2 (0,2)
      for j.2 (0,14)
        out = ...

==================================================
No: 37	GFLOPS: 34.42 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696659446.10)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,7)
    for j_c.1 (0,2)
      for k.0 (0,28)
        for i_c.2 (0,2)
          for j_c.2 (0,7)
            for k.1 (0,2)
              for i_c.3 (0,4)
                vectorize j_c.3 (0,2)
                  out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 38	GFLOPS: 21.48 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659446.24)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,1568)
  for k.0 (0,14)
    for i.2 (0,2)
      for k.1 (0,4)
        out = ...

==================================================
No: 39	GFLOPS: 42.96 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696659446.52)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.1 (0,4)
    for k.0 (0,8)
      for i_c.2 (0,2)
        for k.1 (0,7)
          for i_c.3 (0,14)
            vectorize j_c.3 (0,14)
              out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 40	GFLOPS: 78.05 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659446.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,14)
        for i_c.2 (0,2)
          for j_c.2 (0,14)
            for k.1 (0,4)
              out.local = ...
  for i.1 (0,4)
    for j.1 (0,28)
      out = ...

==================================================
No: 41	GFLOPS: 9.59 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.41, Tstamp:1696659446.87)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,98)
  for i.1 (0,2)
    out.local auto_unroll: 512
    for i_c.2 (0,2)
      for j_c.2 (0,8)
        for k.1 (0,56)
          out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,8)
        out = ...

==================================================
No: 42	GFLOPS: 24.79 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696659447.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for j_c.1 (0,7)
      for k.0 (0,28)
        for k.1 (0,2)
          for i_c.3 (0,28)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,7)
      out = ...

==================================================
No: 43	GFLOPS: 9.28 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659447.13)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,56)
  for k.0 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,28)
        vectorize j_c.3 (0,28)
          out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 44	GFLOPS: 35.44 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.69, Tstamp:1696659447.27)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,2)
    for i.2 (0,4)
      for k.1 (0,28)
        for i.3 (0,7)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 45	GFLOPS: 29.28 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659447.56)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for i_c.2 (0,8)
      for j_c.2 (0,4)
        for i_c.3 (0,7)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,28)
      out = ...

==================================================
No: 46	GFLOPS: 26.57 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659447.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  out.local auto_unroll: 16
  for i_c.1 (0,14)
    for j_c.2 (0,7)
      for k.1 (0,56)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 47	GFLOPS: 111.66 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659447.94)
==================================================
Placeholder: A, B
out auto_unroll: 64................****************

parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,28)
    for i.2 (0,14)
      for k.1 (0,2)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 48	GFLOPS: 19.48 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.82, Tstamp:1696659448.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,7)
    for k.0 (0,2)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,28)
            vectorize j_c.3 (0,28)
              out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 49	GFLOPS: 92.17 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659451.57)
==================================================
Placeholder: A, B
parallel i.0@ (0,2)
  for j.0 (0,7)
    for i.1 (0,2)
      out.local auto_unroll: 16
      for k.0 (0,14)
        for i_c.2 (0,2)
          for k.1 (0,4)
            for i_c.3 (0,7)
              vectorize j_c.3 (0,8)
                out.local = ...
      for i.2 (0,14)
        vectorize j.2 (0,8)
          out = ...

==================================================
No: 50	GFLOPS: 12.49 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659451.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for i_c.1 (0,28)
    for i_c.2 (0,2)
      for j_c.2 (0,7)
        for k.1 (0,56)
          out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,7)
      out = ...

==================================================
No: 51	GFLOPS: 43.48 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659451.83)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,784)
  for k.0 (0,56)
    for j.2 (0,2)
      vectorize j.3 (0,2)
        out = ...

==================================================
No: 52	GFLOPS: 10.53 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659451.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,784)
  for j.1 (0,2)
    out.local auto_unroll: 16
    for j_c.2 (0,2)
      for k.1 (0,56)
        out.local = ...
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 53	GFLOPS: 71.09 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.94, Tstamp:1696659452.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for j_c.2 (0,7)
      for k.1 (0,14)
        for i_c.3 (0,4)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 54	GFLOPS: 56.06 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696659452.31)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for j_c.2 (0,4)
      for i_c.3 (0,28)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.2 (0,28)
    for j.2 (0,28)
      out = ...

==================================================
No: 55	GFLOPS: 24.31 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696659452.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,56)
  out.local auto_unroll: 512
  for k.0 (0,28)
    for i_c.2 (0,56)
      for k.1 (0,2)
        out.local = ...
  for i.2 (0,56)
    out = ...

==================================================
No: 56	GFLOPS: 73.59 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659452.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for k.0 (0,7)
    for i_c.2 (0,14)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 57	GFLOPS: 104.34 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659452.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  out.local auto_unroll: 16
  for k.0 (0,14)
    for j_c.2 (0,7)
      for k.1 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for j.1 (0,28)
    out = ...

==================================================
No: 58	GFLOPS: 73.35 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.53, Tstamp:1696659453.03)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,56)
    for i.3 (0,7)
      for j.3 (0,28)
        out = ...

==================================================
No: 59	GFLOPS: 117.27 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696659453.37)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,7)
    for j_c.1 (0,2)
      for k.0 (0,14)
        for j_c.2 (0,28)
          for k.1 (0,4)
            for i_c.3 (0,2)
              out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,56)
      out = ...

==================================================
No: 60	GFLOPS: 79.77 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696659453.66)
==================================================
Placeholder: A, B
parallel i.0@ (0,2)
  for j.0 (0,7)
    for i.1 (0,2)
      out.local auto_unroll: 16
      for k.0 (0,28)
        for i_c.2 (0,2)
          for k.1 (0,2)
            for i_c.3 (0,7)
              vectorize j_c.3 (0,8)
                out.local = ...
      for i.2 (0,14)
        vectorize j.2 (0,8)
          out = ...

==================================================
No: 61	GFLOPS: 73.31 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659453.79)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,2)
      for k.1 (0,7)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,14)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 62	GFLOPS: 30.16 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659454.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,4)
      for j_c.2 (0,4)
        for k.1 (0,28)
          vectorize j_c.3 (0,14)
            out.local = ...
  for i.2 (0,4)
    for j.2 (0,56)
      out = ...

==================================================
No: 63	GFLOPS: 91.40 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696659454.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,8)
    for i_c.2 (0,28)
      for j_c.2 (0,4)
        for k.1 (0,7)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.2 (0,28)
    for j.2 (0,28)
      out = ...

==================================================
No: 64	GFLOPS: 121.44 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659454.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,7)
    for k.0 (0,28)
      for i_c.2 (0,2)
        for j_c.2 (0,7)
          for k.1 (0,2)
            vectorize j_c.3 (0,8)
              out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

Time elapsed for measurement: 26.51 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.15 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1916	fail_ct: 15	Time elapsed: 1.25
GA Iter: 0	Max score: 1.0000	Min score: 0.9366	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 1.0000	Min score: 0.9873	#Pop: 128	#M+: 1375	#M-: 78
EvolutionarySearch		#s: 128	Time elapsed: 5.55
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 89.63 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.84, Tstamp:1696659464.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for k.0 (0,8)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,7)
            for i_c.3 (0,7)
              vectorize j_c.3 (0,7)
                out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 66	GFLOPS: 140.86 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696659465.06)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,56)
    for i.2 (0,14)
      vectorize j.3 (0,7)
        out = ...

==================================================
No: 67	GFLOPS: 23.34 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659465.19)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@ (0,392)
  for i.1 (0,4)
    for k.0 (0,2)
      for k.1 (0,28)
        for i.3 (0,2)
          out = ...

==================================================
No: 68	GFLOPS: 119.50 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696659465.53)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,14)
  for k.0 (0,4)
    for i.2 (0,4)
      for j.2 (0,56)
        for k.1 (0,14)
          out = ...

==================================================
No: 69	GFLOPS: 48.89 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696659465.81)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i.2 (0,14)
      for j.2 (0,4)
        for k.1 (0,28)
          for i.3 (0,2)
            vectorize j.3 (0,7)
              out = ...

==================================================
No: 70	GFLOPS: 3.09 / 235.49	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.20, Tstamp:1696659465.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.1 (0,56)
    for i.3 (0,14)
      vectorize j.3 (0,7)
        out = ...

==================================================
No: 71	GFLOPS: 68.49 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659466.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for j_c.2 (0,2)
      for k.1 (0,7)
        vectorize j_c.3 (0,14)
          out.local = ...
  for j.2 (0,28)
    out = ...

==================================================
No: 72	GFLOPS: 30.59 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696659466.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,7)
        for k.1 (0,14)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 73	GFLOPS: 57.17 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.77, Tstamp:1696659466.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 512
  for k.0 (0,8)
    for i_c.2 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,7)
          vectorize j_c.3 (0,28)
            out.local = ...
  for i.2 (0,7)
    for j.2 (0,56)
      out = ...

==================================================
No: 74	GFLOPS: 101.31 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659466.81)
==========................****************
========================================
Placeholder: A, B
parallel i.0@j.0@ (0,16)
  for k.0 (0,56)
    for j_c.2 (0,2)
      for i_c.3 (0,14)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 75	GFLOPS: 78.00 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659467.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,7)
    for j.2 (0,2)
      for k.1 (0,8)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 76	GFLOPS: 51.00 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659467.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  for j_c.1 (0,7)
    for k.0 (0,2)
      for k.1 (0,28)
        for i_c.3 (0,8)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 77	GFLOPS: 31.52 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659467.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,448)
  for k.0 (0,8)
    for j.2 (0,7)
      for k.1 (0,7)
        out = ...

==================================================
No: 78	GFLOPS: 39.25 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.97, Tstamp:1696659467.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 512
  for k.0 (0,28)
    for i_c.2 (0,28)
      for j_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,7)
              out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,28)
      out = ...

==================================================
No: 79	GFLOPS: 20.91 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659467.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  for i_c.1 (0,7)
    for j_c.1 (0,14)
      for k.0 (0,2)
        for i_c.2 (0,2)
          for j_c.2 (0,2)
            for k.1 (0,28)
              for i_c.3 (0,2)
                out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 80	GFLOPS: 71.32 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.73, Tstamp:1696659467.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for i.1 (0,14)
    for j.1 (0,4)
      out.local auto_unroll: 512
      for k.0 (0,7)
        for j_c.2 (0,14)
          for k.1 (0,8)
            for i_c.3 (0,2)
              out.local = ...
      for i.2 (0,2)
        vectorize j.2 (0,14)
          out = ...

==================================================
No: 81	GFLOPS: 115.27 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659472.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,4)
      for k.1 (0,2)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 82	GFLOPS: 53.36 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696659473.22)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for j_c.2 (0,4)
      for k.1 (0,56)
        for i_c.3 (0,28)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,28)
      out = ...

==================================================
No: 83	GFLOPS: 16.25 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659473.36)
==================================================
Placeholder: A, B
out auto_unroll: 64
for k.0 (0,4)
  for i.2 (0,2)
    for j.2 (0,28)
      for k.1 (0,14)
        for i.3 (0,28)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 84	GFLOPS: 24.43 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659473.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for k.0 (0,2)
      for i_c.2 (0,14)
        for j_c.2 (0,2)
          for k.1 (0,28)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 85	GFLOPS: 12.18 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.12, Tstamp:1696659473.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,448)
  out.local auto_unroll: 512
  for j_c.2 (0,7)
    for k.1 (0,56)
      out.local = ...
  vectorize j.2 (0,7)
    out = ...

==================================================
No: 86	GFLOPS: 30.97 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659473.91)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,2)
    for i_c.2 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,28)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 87	GFLOPS: 1.60 / 235.49	results: MeasureResult(cost:[0.0002], error_no:0, all_cost:0.23, Tstamp:1696659474.05)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,8)
    for k.1 (0,7)
      for i.3 (0,56)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 88	GFLOPS: 17.22 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.82, Tstamp:1696659474.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 512
  for i_c.1 (0,14)
    for j_c.1 (0,28)
      for k.0 (0,14)
        for i_c.2 (0,4)
          for k.1 (0,4)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 89	GFLOPS: 1.70 / 235.49	results: MeasureResult(cost:[0.0002], error_no:0, all_cost:0.25, Tstamp:1696659474.31)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,28)
    for i.2 (0,4)
      for k.1 (0,2)
        for i.3 (0,14)
          out = ...

==================================================
No: 90	GFLOPS: 74.48 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.80, Tstamp:1696659474.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 512
  for i_c.1 (0,8)
    for k.0 (0,14)
      for j_c.2 (0,8)
        for k.1 (0,4)
          for i_c.3 (0,7)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 91	GFLOPS: 76.85 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659474.89)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,8)
    for k.1 (0,7)
      for i.3 (0,2)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 92	GFLOPS: 14.60 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.80, Tstamp:1696659475.02)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  out.local auto_unroll: 512
  for k.0 (0,2)
    for i_c.2 (....****
0,2)
      for j_c.2 (0,7)
        for k.1 (0,28)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 93	GFLOPS: 63.76 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659475.23)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,32)
  for i.2 (0,7)
    for j.2 (0,2)
      for k.1 (0,56)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 94	GFLOPS: 43.10 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.11, Tstamp:1696659475.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  out.local auto_unroll: 512
  for j_c.1 (0,2)
    for k.0 (0,56)
      for i_c.2 (0,2)
        for j_c.2 (0,4)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 95	GFLOPS: 25.81 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659475.80)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  for i.1 (0,2)
    out.local auto_unroll: 16
    for k.0 (0,7)
      for i_c.2 (0,4)
        for j_c.2 (0,4)
          for k.1 (0,8)
            vectorize j_c.3 (0,14)
              out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,56)
        out = ...

==================================================
No: 96	GFLOPS: 128.29 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659476.07)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,32)
  for k.0 (0,56)
    for i_c.3 (0,14)
      vectorize j_c.3 (0,7)
        out.local = ...
  for i.1 (0,14)
    vectorize j.1 (0,7)
      out = ...

==================================================
No: 97	GFLOPS: 78.97 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659477.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,196)
  for k.0 (0,8)
    for k.1 (0,7)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,8)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 98	GFLOPS: 65.42 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696659478.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,4)
    for i.2 (0,28)
      for j.2 (0,4)
        for k.1 (0,14)
          vectorize j.3 (0,7)
            out = ...

==================================================
No: 99	GFLOPS: 40.80 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659478.41)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,2)
      for k.1 (0,7)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 100	GFLOPS: 155.74 / 235.49	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659478.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  for i_c.1 (0,2)
    for k.0 (0,14)
      for k.1 (0,4)
        for i_c.3 (0,2)
          for j_c.3 (0,28)
            out.local = ...
  for i.1 (0,4)
    for j.1 (0,28)
      out = ...

Time elapsed for measurement: 16.98 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((56, 56), "float32"), B: T.Buffer((56, 56), "float32"), out: T.Buffer((56, 56), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(56):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 56
            out_1 = T.Buffer((3136,), data=out.data)
            out_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 8:cse_var_1 + 8 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 16:cse_var_1 + 16 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 24:cse_var_1 + 24 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 32:cse_var_1 + 32 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 40:cse_var_1 + 40 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 48:cse_var_1 + 48 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer in range(56):
                cse_var_9: T.int32 = k_outer * 56
                cse_var_8: T.int32 = cse_var_1 + k_outer
                cse_var_7: T.int32 = cse_var_1 + 8
                cse_var_6: T.int32 = cse_var_1 + 48
                cse_var_5: T.int32 = cse_var_1 + 40
                cse_var_4: T.int32 = cse_var_1 + 32
                cse_var_3: T.int32 = cse_var_1 + 24
                cse_var_2: T.int32 = cse_var_1 + 16
                A_1 = T.Buffer((3136,), data=A.data)
                B_1 = T.Buffer((3136,), data=B.data)
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9:cse_var_9 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 8:cse_var_9 + 8 + 8]
                out_1[cse_var_2:cse_var_2 + 8] = out_1[cse_var_2:cse_var_2 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 16:cse_var_9 + 16 + 8]
                out_1[cse_var_3:cse_var_3 + 8] = out_1[cse_var_3:cse_var_3 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 24:cse_var_9 + 24 + 8]
                out_1[cse_var_4:cse_var_4 + 8] = out_1[cse_var_4:cse_var_4 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 32:cse_var_9 + 32 + 8]
                out_1[cse_var_5:cse_var_5 + 8] = out_1[cse_var_5:cse_var_5 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 40:cse_var_9 + 40 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 48:cse_var_9 + 48 + 8]
Execution time of this operator: max:1.484 us   median:1.461 us   min:1.417 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=1)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=8)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=7)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=1)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 16)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

