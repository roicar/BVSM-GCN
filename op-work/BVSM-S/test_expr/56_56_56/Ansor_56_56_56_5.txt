----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1941	fail_ct: 17	Time elapsed: 1.10
GA Iter: 0	Max score: 0.9990	Min score: 0.9402	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9997	Min score: 0.9886	#Pop: 128	#M+: 1372	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [56, 56]
B = PLACEHOLDER [56, 56]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 68.54 / 68.54	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696659829.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,7)
      for j_c.2 (0,4)
        for k.1 (0,8)
          for i_c.3 (0,14)
            vectorize j_c.3 (0,7)
              out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 2	GFLOPS: 11.98 / 68.54	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659830.02)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,392)
  for i.2 (0,4)
    for j.2 (0,2)
      for k.1 (0,56)
        out = ...

==================================================
No: 3	GFLOPS: 59.13 / 68.54	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659830.30)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for j_c.2 (0,28)
      for k.1 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for j.2 (0,56)
    out = ...

==================================================
No: 4	GFLOPS: 86.11 / 86.11	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696659830.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 64
  for k.0 (0,56)
    for j_c.2 (0,4)
      for i_c.3 (0,7)
        out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 5	GFLOPS: 90.97 / 90.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696659831.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for j_c.1 (0,2)
    for k.0 (0,56)
      for i_c.2 (0,2)
        for j_c.2 (0,7)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,4)
    for j.1 (0,56)
      out = ...

==================================================
No: 6	GFLOPS: 46.83 / 90.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696659831.14)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,224)
  for k.0 (0,8)
    for j.2 (0,14)
      for k.1 (0,7)
        out = ...

==================================================
No: 7	GFLOPS: 47.20 / 90.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696659831.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for i_c.2 (0,4)
      for j_c.2 (0,28)
        for k.1 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,56)
      out = ...

==================================================
No: 8	GFLOPS: 25.98 / 90.97	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696659831.57)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,7)
    for i_c.2 (0,4)
      for k.1 (0,8)
        for j_c.3 (0,28)
          out.local = ...
  for i.2 (0,4)
    for j.2 (0,28)
      out = ...

==================================================
No: 9	GFLOPS: 169.08 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659831.74)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for i.2 (0,2)
    for k.1 (0,56)
      for i.3 (0,7)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 10	GFLOPS: 22.02 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696659831.87)
=========................****************
=========================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  out.local auto_unroll: 64
  for k.0 (0,14)
    for i_c.2 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,7)
          out.local = ...
  for i.1 (0,28)
    out = ...

==================================================
No: 11	GFLOPS: 49.87 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659832.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  for i_c.1 (0,2)
    for k.0 (0,14)
      for i_c.2 (0,7)
        for j_c.2 (0,2)
          for k.1 (0,4)
            for i_c.3 (0,2)
              vectorize j_c.3 (0,2)
                out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 12	GFLOPS: 26.58 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.62, Tstamp:1696659832.42)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@ (0,784)
  for j.1 (0,2)
    for k.0 (0,7)
      for k.1 (0,8)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 13	GFLOPS: 109.68 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696659832.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 64
  for k.0 (0,14)
    for i_c.2 (0,4)
      for k.1 (0,4)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 14	GFLOPS: 13.47 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.65, Tstamp:1696659832.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,112)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,56)
          out.local = ...
  for i.1 (0,2)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 15	GFLOPS: 40.62 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659833.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for k.0 (0,56)
      for i_c.2 (0,2)
        for j_c.2 (0,14)
          for i_c.3 (0,14)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,14)
      out = ...

==================================================
No: 16	GFLOPS: 21.01 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659833.42)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,112)
  for i.1 (0,7)
    for k.0 (0,7)
      for i.2 (0,2)
        for k.1 (0,8)
          for i.3 (0,2)
            out = ...

==================================================
No: 17	GFLOPS: 42.94 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659838.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,56)
    for i.2 (0,14)
      for j.2 (0,28)
        out = ...

==================================================
No: 18	GFLOPS: 39.57 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659838.17)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,28)
    for i.2 (0,7)
      for j.2 (0,28)
        for k.1 (0,2)
          for i.3 (0,4)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 19	GFLOPS: 132.76 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696659838.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  out.local auto_unroll: 64
  for k.1 (0,56)
    for i_c.3 (0,8)
      vectorize j_c.3 (0,7)
        out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,7)
      out = ...

==================================================
No: 20	GFLOPS: 77.75 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696659838.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,14)
    for j_c.2 (0,28)
      for k.1 (0,4)
        for i_c.3 (0,7)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,7)
    for j.2 (0,56)
      out = ...

==================================================
No: 21	GFLOPS: 16.91 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659838.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,784)
  for i.1 (0,2)
    for k.0 (0,28)
      for j_c.2 (0,2)
        for k.1 (0,2)
          out.local = ...
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 22	GFLOPS: 26.09 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659838.98)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,56)
    for i.2 (0,2)
      for j.2 (0,14)
        out = ...

==================================================
No: 23	GFLOPS: 154.82 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696659839.33)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@ (0,7)
  for i.1 (0,2)
    for k.0 (0,4)
      for i.2 (0,2)
        for j.2 (0,56)
          for k.1 (0,14)
            for i.3 (0,2)
              out = ...

==================================================
No: 24	GFLOPS: 23.97 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659839.46)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,196)
  for j.1 (0,8)
    for k.0 (0,56)
      for i.2 (0,2)
        out = ...

==================================================
No: 25	GFLOPS: 106.71 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659839.64)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,8)
        for i_c.2 (0,4)
          for j_c.2 (0,4)
            for k.1 (0,7)
              vectorize j_c.3 (0,7)
                out.local = ...
  for i.1 (0,8)
    for j.1 (0,56)
      out = ...

==================================================
No: 26	GFLOPS: 34.43 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.70, Tstamp:1696659839.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,392)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,4)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,2)
      out = ...

==================================================
No: 27	GFLOPS: 67.23 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659839.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,8)
      for j_c.2 (0,14)
        for k.1 (0,28)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 28	GFLOPS: 22.03 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.72, Tstamp:1696659840.11)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,7)
    for j.2 (0,4)
      for k.1 (0,8)
        for i.3 (0,28)
          out = ...

==================================================
No: 29	GFLOPS: 16................****************
.51 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696659840.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  out.local auto_unroll: 64
  for k.0 (0,56)
    for i_c.2 (0,7)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 30	GFLOPS: 92.33 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696659840.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for j_c.1 (0,2)
    for k.0 (0,56)
      for i_c.2 (0,7)
        for j_c.2 (0,7)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 31	GFLOPS: 16.38 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659840.64)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,2)
    for i.2 (0,56)
      for j.2 (0,2)
        for k.1 (0,28)
          vectorize j.3 (0,14)
            out = ...

==================================================
No: 32	GFLOPS: 27.76 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659840.92)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,56)
  for j.1 (0,4)
    for k.0 (0,7)
      for j.2 (0,2)
        for k.1 (0,8)
          for i.3 (0,7)
            out = ...

==================================================
No: 33	GFLOPS: 63.43 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659845.26)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,28)
    for k.1 (0,56)
      vectorize j.3 (0,7)
        out = ...

==================================================
No: 34	GFLOPS: 70.45 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659845.55)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,14)
      for j_c.2 (0,4)
        for k.1 (0,14)
          for i_c.3 (0,2)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 35	GFLOPS: 27.25 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659845.89)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,196)
  for i.1 (0,2)
    for j.1 (0,4)
      for k.1 (0,56)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 36	GFLOPS: 101.87 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659846.17)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,56)
  for k.0 (0,4)
    for j.2 (0,14)
      for k.1 (0,14)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 37	GFLOPS: 112.25 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659846.37)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,8)
    for k.1 (0,7)
      for i_c.3 (0,7)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 38	GFLOPS: 94.87 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.61, Tstamp:1696659846.61)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,7)
    for k.1 (0,8)
      for i.3 (0,2)
        for j.3 (0,28)
          out = ...

==================================================
No: 39	GFLOPS: 19.07 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659846.88)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,7)
    for i.2 (0,7)
      for j.2 (0,4)
        for k.1 (0,8)
          for i.3 (0,8)
            vectorize j.3 (0,7)
              out = ...

==================================================
No: 40	GFLOPS: 12.49 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659847.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  out.local auto_unroll: 64
  for j_c.2 (0,14)
    for k.1 (0,56)
      out.local = ...
  vectorize j.2 (0,14)
    out = ...

==================================================
No: 41	GFLOPS: 8.45 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.30, Tstamp:1696659847.16)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,8)
    for i.2 (0,14)
      for k.1 (0,7)
        for i.3 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 42	GFLOPS: 53.23 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696659847.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,7)
  for k.0 (0,28)
    for i.2 (0,2)
      for j.2 (0,28)
        for k.1 (0,2)
          for i.3 (0,4)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 43	GFLOPS: 92.03 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696659847.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,7)
  for k.0 (0,14)
    for i_c.2 (0,56)
      for j_c.2 (0,2)
        for k.1 (0,4)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 44	GFLOPS: 23.52 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696659847.84)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,112)
  for j.1 (0,4)
    for k.0 (0,14)
      for i.2 (0,7)
        for k.1 (0,4)
          out = ...

==================================================
No: 45	GFLOPS: 53.72 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.78, Tstamp:1696659847.97)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for j_c.1 (0,7)
    for k.0 (0,14)
      for i_c.2 (0,56)
        for k.1 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 46	GFLOPS: 105.82 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659848.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for i_c.2 (0,7)
      for j_c.2 (0,4)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.1 (0,14)
    for j.1 (0,28)
      out = ...

==================================================
No: 47	GFLOPS: 18.55 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659848.45)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,28)
      for j_c.2 (0,4)
        for k.1 (0,14)
          vectorize j_c.3 (0,14)
            out.local = ...
  for i.2 (0,2................****************
8)
    for j.2 (0,56)
      out = ...

==================================================
No: 48	GFLOPS: 20.74 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696659848.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,224)
  for i.1 (0,7)
    out.local auto_unroll: 64
    for k.0 (0,56)
      for i_c.3 (0,2)
        out.local = ...
    for i.2 (0,2)
      out = ...

==================================================
No: 49	GFLOPS: 91.95 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696659853.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for i.1 (0,2)
    for k.0 (0,28)
      for i_c.2 (0,2)
        for j_c.2 (0,8)
          for k.1 (0,2)
            vectorize j_c.3 (0,7)
              out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,56)
        out = ...

==================================================
No: 50	GFLOPS: 84.92 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696659854.02)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.1 (0,56)
    for j.3 (0,28)
      out = ...

==================================================
No: 51	GFLOPS: 50.55 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696659854.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,7)
  for k.0 (0,14)
    for i.2 (0,2)
      for j.2 (0,28)
        for k.1 (0,4)
          for i.3 (0,4)
            vectorize j.3 (0,2)
              out = ...

==================================================
No: 52	GFLOPS: 47.26 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.86, Tstamp:1696659854.43)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 512
  for j_c.1 (0,2)
    for k.0 (0,7)
      for i_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,14)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 53	GFLOPS: 52.04 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.46, Tstamp:1696659854.72)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for k.0 (0,14)
        for k.1 (0,4)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,14)
              out.local = ...
  for i.1 (0,4)
    for j.1 (0,28)
      out = ...

==================================================
No: 54	GFLOPS: 0.59 / 169.08	results: MeasureResult(cost:[0.0006], error_no:0, all_cost:0.48, Tstamp:1696659854.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,56)
    for i.2 (0,2)
      for j.2 (0,7)
        for i.3 (0,28)
          out = ...

==================================================
No: 55	GFLOPS: 50.18 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659855.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for i_c.2 (0,14)
      for j_c.2 (0,7)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 56	GFLOPS: 16.07 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.51, Tstamp:1696659855.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for i_c.1 (0,7)
    for j_c.1 (0,2)
      for i_c.2 (0,8)
        for k.1 (0,56)
          vectorize j_c.3 (0,14)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 57	GFLOPS: 94.35 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696659855.61)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  for k.0 (0,7)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,7)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 58	GFLOPS: 36.09 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659855.75)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,28)
  for i.2 (0,14)
    for k.1 (0,56)
      for i.3 (0,4)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 59	GFLOPS: 35.74 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696659856.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,98)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,14)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 60	GFLOPS: 13.19 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.29, Tstamp:1696659856.18)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,16)
  for j.1 (0,28)
    out.local auto_unroll: 64
    for i_c.2 (0,7)
      for k.1 (0,56)
        out.local = ...
    for i.2 (0,7)
      out = ...

==================================================
No: 61	GFLOPS: 20.10 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659856.31)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,56)
    for j.2 (0,4)
      for i.3 (0,2)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 62	GFLOPS: 18.08 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659856.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,14)
    for k.0 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,14)
              out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 63	GFLOPS: 51.89 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.11, Tstamp:1696659856.72)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,14)
  for k.0 (0,28)
    for i.2 (0,28)
      for j.2 (0,4)
        for k.1 (0,2)
          for i.3 (0,2)
            out = ...

==================================================
No: 64	GFLOPS: 54.71 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696659856.85)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,392)
  for k.0 (0,56)
    for i.3 (0,4)
      vectorize j.3 (0,2)
        out = ...

Time elapsed for measurement: 29.80 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.14 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1930	fail_ct: 24	Time elapsed: 1.12
GA Iter: 0	Max score: 0.9994	Min score: 0.9410	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9999	Min score: 0.9878	#Pop: 128	#M+: 1377	#M-: 76
EvolutionarySearch		#s: 128	Time elapsed: 5.34
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 48.71 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696659867.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 16
  for k.0 (0,14)
    for i_c.2 (0,2)
      for k.1 (0,4)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,14)
      out = ...

==================================================
No: 66	GFLOPS: 10.15 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659867.44)
==================================================
Placeholder: A, B
for j.1 (0,56)
  out.local auto_unroll: 64
  for k.0 (0,56)
    for i_c.3 (0,56)
      out.local = ...
  for i.2 (0,56)
    out = ...

==================================================
No: 67	GFLOPS: 37.49 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696659867.58)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,14)
    for j_c.1 (0,7)
      for k.0 (0,56)
        for j_c.2 (0,2)
          for i_c.3 (0,4)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 68	GFLOPS: 31.97 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696659867.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for j_c.2 (0,2)
      for i_c.3 (0,56)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 69	GFLOPS: 33.69 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659867.84)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,49)
  for k.0 (0,8)
    for j_c.2 (0,8)
      for k.1 (0,7)
        for i_c.3 (0,8)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 70	GFLOPS: 43.79 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.25, Tstamp:1696659867.96)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,196)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,4)
      for i_c.3 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 71	GFLOPS: 65.61 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.35, Tstamp:1696659868.20)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,196)
  out.local auto_unroll: 64
  for k.0 (0,4)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,14)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,4)
    for j.2 (0,4)
      out = ...

==================================================
No: 72	GFLOPS: 12.69 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659868.32)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,8)
  for j.1 (0,2)
    for i.2 (0,28)
      for j.2 (0,7)
        for k.1 (0,56)
          out = ...

==================================================
No: 73	GFLOPS: 86.59 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696659868.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.2 (0,2)
    for j_c.2 (0,28)
      for k.1 (0,56)
        for i_c.3 (0,7)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,14)
    for j.1 (0,56)
      out = ...

==================================================
No: 74	GFLOPS: 4................****************
.29 / 169.08	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.27, Tstamp:1696659868.75)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,7)
    for i.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,28)
          out = ...

==================================================
No: 75	GFLOPS: 50.74 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659869.01)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  for i.1 (0,2)
    out.local auto_unroll: 16
    for k.0 (0,56)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 76	GFLOPS: 32.68 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.45, Tstamp:1696659869.13)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,98)
  for j.2 (0,4)
    for k.1 (0,56)
      for i.3 (0,8)
        out = ...

==================================================
No: 77	GFLOPS: 19.46 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696659869.26)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for i_c.2 (0,2)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 78	GFLOPS: 25.24 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659869.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,7)
  for k.0 (0,8)
    for i.2 (0,56)
      for j.2 (0,4)
        for k.1 (0,7)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 79	GFLOPS: 6.36 / 169.08	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:1.15, Tstamp:1696659869.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,28)
    for j_c.1 (0,14)
      for k.0 (0,2)
        for i_c.2 (0,2)
          for k.1 (0,28)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 80	GFLOPS: 43.79 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.32, Tstamp:1696659869.95)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for j_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,2)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 81	GFLOPS: 23.04 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659873.26)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,784)
  for j.2 (0,2)
    for k.1 (0,56)
      for i.3 (0,2)
        out = ...

==================================================
No: 82	GFLOPS: 28.70 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696659873.39)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,56)
      for k.1 (0,28)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 83	GFLOPS: 2.83 / 169.08	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.73, Tstamp:1696659873.67)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,7)
    for j.2 (0,2)
      for k.1 (0,8)
        for i.3 (0,28)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 84	GFLOPS: 63.83 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696659873.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.1 (0,56)
    for i_c.3 (0,56)
      vectorize j_c.3 (0,14)
        out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 85	GFLOPS: 25.60 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659874.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,4)
      for i_c.3 (0,7)
        out.local = ...
  for i.2 (0,28)
    out = ...

==================================================
No: 86	GFLOPS: 34.47 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696659874.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,7)
          for k.1 (0,56)
            for i_c.3 (0,7)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 87	GFLOPS: 40.51 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.36, Tstamp:1696659874.40)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,32)
  out.local auto_unroll: 512
  for j_c.2 (0,14)
    for k.1 (0,56)
      for i_c.3 (0,7)
        out.local = ...
  for i.2 (0,7)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 88	GFLOPS: 39.95 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696659874.69)
==================================================
Placeholder: A, B
for k.0 (0,7)
  for i_c.2 (0,56)
    for j_c.2 (0,8)
      for k.1 (0,8)
        vectorize j_c.3 (0,7)
          out.local = ...
for i.2 (0,56)
  for j.2 (0,56)
    out = ...

==================================================
No: 89	GFLOPS: 41.79 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696659874.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for i_c.2 (0,4)
      for k.1 (0,4)
        for i_c.3 (0,14)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 90	GFLOPS: 43.94 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696659874.95)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,112)
  for k.0 (0,28)
    for k.1 (0,2)
      for j.3 (0,28)
        out = ...

==================================================
No: 91	GFLOPS: 48.12 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696659875.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for j_c.1 (0,14)
    for k.0 (0,14)
      for k.1 (0,4)
        for i_c.3 (0,28)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 92	GFLOPS: 79.17 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696659875.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for k.0 (0,56)
      for j_c.2 (0,28)
        for i_c.3 (0,14)
          out.lo....****
cal = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 93	GFLOPS: 67.24 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.48, Tstamp:1696659875.80)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,14)
  for k.0 (0,4)
    for i.2 (0,4)
      for j.2 (0,8)
        for k.1 (0,14)
          vectorize j.3 (0,7)
            out = ...

==================================================
No: 94	GFLOPS: 41.01 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696659876.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  out.local auto_unroll: 16
  for k.0 (0,4)
    for i_c.2 (0,2)
      for k.1 (0,14)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 95	GFLOPS: 101.08 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696659876.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 16
  for k.0 (0,14)
    for j_c.2 (0,7)
      for k.1 (0,4)
        vectorize j_c.3 (0,4)
          out.local = ...
  for j.2 (0,28)
    out = ...

==================================================
No: 96	GFLOPS: 52.90 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696659876.65)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 16
  for k.0 (0,56)
    for i_c.2 (0,2)
      for i_c.3 (0,7)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 97	GFLOPS: 10.97 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.19, Tstamp:1696659878.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,448)
  for j.1 (0,7)
    out.local auto_unroll: 16
    for k.0 (0,56)
      out.local = ...
    out = ...

==================================================
No: 98	GFLOPS: 139.16 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696659878.77)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,28)
    for i.2 (0,14)
      for k.1 (0,2)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 99	GFLOPS: 58.78 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696659878.90)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,7)
    for j_c.1 (0,14)
      for k.0 (0,28)
        for k.1 (0,2)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 100	GFLOPS: 62.26 / 169.08	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696659879.13)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for j_c.2 (0,2)
      for k.1 (0,2)
        vectorize j_c.3 (0,7)
          out.local = ...
  for j.2 (0,14)
    out = ...

Time elapsed for measurement: 15.64 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((56, 56), "float32"), B: T.Buffer((56, 56), "float32"), out: T.Buffer((56, 56), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(56):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 56
            out_1 = T.Buffer((3136,), data=out.data)
            out_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 8:cse_var_1 + 8 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 16:cse_var_1 + 16 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 24:cse_var_1 + 24 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 32:cse_var_1 + 32 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 40:cse_var_1 + 40 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 48:cse_var_1 + 48 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer in range(56):
                cse_var_9: T.int32 = k_outer * 56
                cse_var_8: T.int32 = cse_var_1 + k_outer
                cse_var_7: T.int32 = cse_var_1 + 8
                cse_var_6: T.int32 = cse_var_1 + 48
                cse_var_5: T.int32 = cse_var_1 + 40
                cse_var_4: T.int32 = cse_var_1 + 32
                cse_var_3: T.int32 = cse_var_1 + 24
                cse_var_2: T.int32 = cse_var_1 + 16
                A_1 = T.Buffer((3136,), data=A.data)
                B_1 = T.Buffer((3136,), data=B.data)
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9:cse_var_9 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 8:cse_var_9 + 8 + 8]
                out_1[cse_var_2:cse_var_2 + 8] = out_1[cse_var_2:cse_var_2 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 16:cse_var_9 + 16 + 8]
                out_1[cse_var_3:cse_var_3 + 8] = out_1[cse_var_3:cse_var_3 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 24:cse_var_9 + 24 + 8]
                out_1[cse_var_4:cse_var_4 + 8] = out_1[cse_var_4:cse_var_4 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 32:cse_var_9 + 32 + 8]
                out_1[cse_var_5:cse_var_5 + 8] = out_1[cse_var_5:cse_var_5 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 40:cse_var_9 + 40 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 48:cse_var_9 + 48 + 8]
Execution time of this operator: max:1.591 us   median:1.508 us   min:1.459 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=1)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=8)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=7)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=1)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 16)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

