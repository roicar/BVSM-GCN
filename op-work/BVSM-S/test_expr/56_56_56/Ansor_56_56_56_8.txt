----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Generate Sketches		#s: 3
Sample Initial Population	#s: 1943	fail_ct: 15	Time elapsed: 1.06
GA Iter: 0	Max score: 0.9987	Min score: 0.9206	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9874	#Pop: 128	#M+: 1381	#M-: 75
EvolutionarySearch		#s: 128	Time elapsed: 5.15
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 64 programs to measure:
................****************Computational DAG:
A = PLACEHOLDER [56, 56]
B = PLACEHOLDER [56, 56]
out(i, j) += (A[i, k]*B[k, j])


==================================================
No: 1	GFLOPS: 105.17 / 105.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696660245.44)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  out.local auto_unroll: 512
  for k.0 (0,14)
    for i_c.2 (0,2)
      for j_c.2 (0,14)
        for k.1 (0,4)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 2	GFLOPS: 30.54 / 105.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696660245.73)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,448)
  out.local auto_unroll: 64
  for k.0 (0,7)
    for i_c.2 (0,7)
      for k.1 (0,8)
        out.local = ...
  for i.2 (0,7)
    out = ...

==================================================
No: 3	GFLOPS: 90.65 / 105.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696660246.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for i_c.1 (0,2)
    for k.0 (0,14)
      for i_c.2 (0,14)
        for j_c.2 (0,2)
          for k.1 (0,4)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,28)
    for j.1 (0,8)
      out = ...

==================================================
No: 4	GFLOPS: 23.38 / 105.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696660246.29)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,4)
    for i.2 (0,7)
      for j.2 (0,4)
        for k.1 (0,14)
          for i.3 (0,2)
            out = ...

==================================================
No: 5	GFLOPS: 100.57 / 105.17	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696660246.47)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,224)
  for k.0 (0,14)
    for i.2 (0,2)
      for k.1 (0,4)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 6	GFLOPS: 146.98 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696660246.69)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,14)
    for j.2 (0,7)
      for k.1 (0,4)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 7	GFLOPS: 101.16 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696660247.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 16
  for k.0 (0,2)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,28)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,7)
              out.local = ...
  for i.1 (0,8)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 8	GFLOPS: 15.87 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.65, Tstamp:1696660247.33)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 512
  for i_c.1 (0,4)
    for j_c.1 (0,2)
      for k.0 (0,2)
        for i_c.2 (0,14)
          for j_c.2 (0,4)
            for k.1 (0,28)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 9	GFLOPS: 21.13 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660247.46)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for i_c.2 (0,4)
    for j_c.2 (0,7)
      for k.1 (0,56)
        for i_c.3 (0,2)
          out.local = ...
  for i.2 (0,8)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 10	GFLOPS: 23.8................****************
6 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660247.74)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  for j_c.1 (0,4)
    for k.0 (0,28)
      for i_c.2 (0,4)
        for k.1 (0,2)
          out.local = ...
  for i.1 (0,4)
    vectorize j.1 (0,4)
      out = ...

==================================================
No: 11	GFLOPS: 68.99 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660247.87)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,112)
  for k.0 (0,56)
    for j.2 (0,7)
      for i.3 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 12	GFLOPS: 21.89 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.26, Tstamp:1696660248.08)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,98)
  for j.1 (0,4)
    out.local auto_unroll: 512
    for k.0 (0,14)
      for i_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,4)
            out.local = ...
    for i.2 (0,8)
      out = ...

==================================================
No: 13	GFLOPS: 27.77 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660248.21)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,392)
  for j.1 (0,2)
    out.local auto_unroll: 16
    for k.0 (0,7)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,2)
            out.local = ...
    for i.2 (0,2)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 14	GFLOPS: 42.98 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696660248.49)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  for k.0 (0,28)
    for i_c.2 (0,8)
      for j_c.2 (0,2)
        for k.1 (0,2)
          for i_c.3 (0,7)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 15	GFLOPS: 66.61 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660248.71)
==================================================
Placeholder: A, B
parallel i.0@ (0,28)
  for j.0 (0,2)
    for j.1 (0,2)
      out.local auto_unroll: 64
      for k.0 (0,14)
        for i_c.2 (0,2)
          for j_c.2 (0,14)
            for k.1 (0,4)
              out.local = ...
      for i.2 (0,2)
        vectorize j.2 (0,14)
          out = ...

==================================================
No: 16	GFLOPS: 12.60 / 146.98	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660249.00)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,56)
  out.local auto_unroll: 64
  for i_c.1 (0,56)
    for k.0 (0,56)
      out.local = ...
  for i.1 (0,56)
    out = ...

==================================================
No: 17	GFLOPS: 173.29 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.48, Tstamp:1696660254.18)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,4)
    for k.1 (0,14)
      for i.3 (0,7)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 18	GFLOPS: 11.71 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696660254.31)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,8)
    for j.2 (0,7)
      for k.1 (0,7)
        for i.3 (0,56)
          vectorize j.3 (0,4)
            out = ...

==================================================
No: 19	GFLOPS: 30.80 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660254.60)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,14)
    for i_c.2 (0,4)
      for j_c.2 (0,2)
        for k.1 (0,4)
          for i_c.3 (0,14)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 20	GFLOPS: 127.27 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.28, Tstamp:1696660254.82)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,7)
    for j.2 (0,14)
      for k.1 (0,8)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 21	GFLOPS: 72.26 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660255.06)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 16
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,28)
        for k.1 (0,7)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,56)
      out = ...

==================================================
No: 22	GFLOPS: 96.01 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.28, Tstamp:1696660255.40)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,32)
  for k.0 (0,2)
    for i.2 (0,14)
      for k.1 (0,28)
        vectorize j.3 (0,7)
          out = ...

==================================================
No: 23	GFLOPS: 34.30 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660255.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for j_c.2 (0,14)
      for k.1 (0,28)
        vectorize j_c.3 (0,2)
          out.local = ...
  for j.2 (0,28)
    out = ...

==================================================
No: 24	GFLOPS: 49.11 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660255.97)
==================================================
Placeholder: A, B
for i_c.1 (0,28)
  for k.0 (0,14)
    for i_c.2 (0,2)
      for j_c.2 (0,7)
        for k.1 (0,4)
          vectorize j_c.3 (0,8)
            out.local = ...
for i.1 (0,56)
  vectorize j.1 (0,56)
    out = ...

==================================================
No: 25	GFLOPS: 36.13 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.52, Tstamp:1696660256.10)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,14)
  for k.0 (0,7)
    for i.2 (0,7)
      for j.2 (0,2)
        for k.1 (0,8)
          for i.3 (0,4)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 26	GFLOPS: 17.87 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660256.38)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,2)
    for i.2 (0,14)
      for j.2 (0,2)
        for k.1 (0,28)
          for i.3 (0,2)
            out = ...

==================================================
No: 27	GFLOPS: 23.14 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.23, Tstamp:1696660256.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  for i_c.1 (0,2)
    for j_c.1 (0,8)
      for k.0 (0,14)
        for k.1 (0,4)
          for i_c.3 (0,28)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 28	GFLOPS: 99.55 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696660256.76)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 64
  for j_c.1 (0,14)
    for k................****************
.0 (0,28)
      for i_c.2 (0,2)
        for j_c.2 (0,4)
          for k.1 (0,2)
            for i_c.3 (0,4)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,56)
      out = ...

==================================================
No: 29	GFLOPS: 22.65 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660256.93)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 64
  for i_c.1 (0,14)
    for j_c.1 (0,7)
      for k.0 (0,8)
        for i_c.2 (0,4)
          for j_c.2 (0,2)
            for k.1 (0,7)
              out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 30	GFLOPS: 55.13 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660257.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,8)
  for k.0 (0,14)
    for i_c.2 (0,2)
      for j_c.2 (0,7)
        for k.1 (0,4)
          for i_c.3 (0,14)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.2 (0,28)
    for j.2 (0,14)
      out = ...

==================================================
No: 31	GFLOPS: 173.12 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:3.12, Tstamp:1696660257.37)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,28)
  for j.1 (0,2)
    for k.0 (0,56)
      for i.3 (0,4)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 32	GFLOPS: 51.25 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660257.50)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for k.0 (0,28)
    for i.2 (0,14)
      for j.2 (0,7)
        for k.1 (0,2)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 33	GFLOPS: 33.67 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.39, Tstamp:1696660260.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,392)
  out.local auto_unroll: 64
  for k.0 (0,14)
    for i_c.2 (0,8)
      for k.1 (0,4)
        out.local = ...
  for i.2 (0,8)
    out = ...

==================================================
No: 34	GFLOPS: 49.23 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.61, Tstamp:1696660261.04)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for j_c.1 (0,28)
      for k.0 (0,7)
        for k.1 (0,8)
          for i_c.3 (0,14)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,28)
      out = ...

==================================================
No: 35	GFLOPS: 18.42 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.24, Tstamp:1696660261.17)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,448)
  for k.0 (0,2)
    for i.2 (0,7)
      for k.1 (0,28)
        out = ...

==================================================
No: 36	GFLOPS: 54.08 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660261.30)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,28)
    for i.2 (0,7)
      for j.2 (0,7)
        for k.1 (0,2)
          out = ...

==================================================
No: 37	GFLOPS: 94.71 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696660261.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,8)
    for i_c.2 (0,2)
      for j_c.2 (0,28)
        for k.1 (0,7)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,28)
      out = ...

==================================================
No: 38	GFLOPS: 39.45 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.20, Tstamp:1696660261.63)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,224)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,2)
      for k.1 (0,2)
        vectorize j_c.3 (0,7)
          out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 39	GFLOPS: 30.83 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.24, Tstamp:1696660261.76)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@j.1@ (0,16)
  for i.2 (0,7)
    for k.1 (0,56)
      for i.3 (0,2)
        vectorize j.3 (0,14)
          out = ...

==================================================
No: 40	GFLOPS: 19.58 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.27, Tstamp:1696660261.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,98)
  for i.1 (0,2)
    for j.1 (0,2)
      for j_c.2 (0,4)
        for k.1 (0,56)
          for i_c.3 (0,2)
            out.local = ...
      for i.2 (0,2)
        vectorize j.2 (0,4)
          out = ...

==================================================
No: 41	GFLOPS: 66.91 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696660262.15)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,8)
  for j.1 (0,2)
    for k.0 (0,8)
      for i.2 (0,2)
        for j.2 (0,7)
          for k.1 (0,7)
            for i.3 (0,7)
              vectorize j.3 (0,2)
                out = ...

==================================================
No: 42	GFLOPS: 66.73 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696660262.37)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for j_c.1 (0,8)
    for k.0 (0,28)
      for k.1 (0,2)
        for i_c.3 (0,28)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 43	GFLOPS: 100.47 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.01, Tstamp:1696660262.62)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  for i.1 (0,4)
    out.local auto_unroll: 512
    for k.0 (0,2)
      for i_c.2 (0,2)
        for j_c.2 (0,4)
          for k.1 (0,28)
            vectorize j_c.3 (0,14)
              out.local = ...
    for i.2 (0,2)
      for j.2 (0,56)
        out = ...

==================================================
No: 44	GFLOPS: 54.43 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.91, Tstamp:1696660262.86)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,4)
  for k.0 (0,2)
    for i.2 (0,4)
      for j.2 (0,4)
        for k.1 (0,28)
          for i.3 (0,7)
            vectorize j.3 (0,7)
              out = ...

==================================================
No: 45	GFLOPS: 7.49 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.90, Tstamp:1696660263.11)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@ (0,112)
  for k.0 (0,2)
    for j.2 (0,7)
      for k.1 (0,28)
        for i.3 (0,4)
          out = ...

==================================================
No: 46	GFLOPS: 40.10 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.18, Tstamp:1696660263.24)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,784)
  for k.0 (0,28)
    for k.1 (0,2)
      for i.3 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 47	GFLOPS: 43.44 / 17................****************
3.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.37, Tstamp:1696660263.53)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,784)
  for k.0 (0,4)
    for k.1 (0,14)
      for i.3 (0,2)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 48	GFLOPS: 93.40 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696660263.71)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,4)
    for k.1 (0,14)
      for i.3 (0,14)
        vectorize j.3 (0,8)
          out = ...

==================================================
No: 49	GFLOPS: 44.48 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.50, Tstamp:1696660266.23)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.1 (0,7)
    for k.0 (0,2)
      for i_c.2 (0,2)
        for j_c.2 (0,2)
          for k.1 (0,28)
            for i_c.3 (0,14)
              vectorize j_c.3 (0,4)
                out.local = ...
  for i.1 (0,28)
    for j.1 (0,56)
      out = ...

==================================================
No: 50	GFLOPS: 49.34 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660266.50)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,112)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for j_c.2 (0,14)
      for k.1 (0,2)
        vectorize j_c.3 (0,2)
          out.local = ...
  for j.2 (0,28)
    out = ...

==================================================
No: 51	GFLOPS: 87.76 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696660266.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,224)
  for k.0 (0,7)
    for j.2 (0,7)
      for k.1 (0,8)
        vectorize j.3 (0,2)
          out = ...

==================================================
No: 52	GFLOPS: 47.60 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696660266.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 16
  for i_c.1 (0,2)
    for k.0 (0,56)
      for i_c.2 (0,2)
        for j_c.2 (0,28)
          for i_c.3 (0,14)
            out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 53	GFLOPS: 37.10 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.70, Tstamp:1696660267.27)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,16)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,14)
      for j_c.2 (0,14)
        for k.1 (0,14)
          out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 54	GFLOPS: 49.87 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.40, Tstamp:1696660267.41)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  for k.0 (0,4)
    for k.1 (0,14)
      for i_c.3 (0,28)
        vectorize j_c.3 (0,14)
          out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 55	GFLOPS: 25.42 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660267.54)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@ (0,2)
  for j.1 (0,28)
    for k.0 (0,14)
      for i.2 (0,28)
        for k.1 (0,4)
          vectorize j.3 (0,2)
            out = ...

==================================================
No: 56	GFLOPS: 33.04 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660267.83)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,56)
    for i_c.2 (0,7)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 57	GFLOPS: 26.45 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660268.12)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@ (0,56)
  for j.1 (0,28)
    for k.0 (0,14)
      for j.2 (0,2)
        for k.1 (0,4)
          out = ...

==================================================
No: 58	GFLOPS: 0.66 / 173.29	results: MeasureResult(cost:[0.0005], error_no:0, all_cost:0.35, Tstamp:1696660268.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,28)
    for i.2 (0,4)
      for j.2 (0,2)
        for k.1 (0,2)
          for i.3 (0,14)
            out = ...

==================================================
No: 59	GFLOPS: 40.12 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696660268.54)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,14)
  for j.1 (0,4)
    out.local auto_unroll: 512
    for k.0 (0,56)
      for i_c.2 (0,28)
        for j_c.2 (0,2)
          out.local = ...
    for i.2 (0,28)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 60	GFLOPS: 51.04 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660268.83)
==================================================
Placeholder: A, B
out auto_unroll: 16
parallel i.0@j.0@i.1@ (0,112)
  for j.1 (0,7)
    for k.0 (0,56)
      for j.2 (0,4)
        out = ...

==================================================
No: 61	GFLOPS: 5.29 / 173.29	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.42, Tstamp:1696660269.12)
==================================================
Placeholder: A, B
out.local auto_unroll: 16
for i_c.1 (0,2)
  for j_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,28)
            for i_c.3 (0,7)
              vectorize j_c.3 (0,14)
                out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 62	GFLOPS: 61.27 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696660269.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 16
  for j_c.2 (0,14)
    for k.1 (0,56)
      for i_c.3 (0,4)
        vectorize j_c.3 (0,2)
          out.local = ...
  for i.2 (0,4)
    for j.2 (0,28)
      out = ...

==================================================
No: 63	GFLOPS: 26.28 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660269.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,14)
      for j_c.2 (0,2)
        for k.1 (0,2)
          out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 64	GFLOPS: 39.04 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696660269.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  for k.0 (0,2)
    for i_c.2 (0,2)
      for k.1 (0,28)
        for i_c.3 (0,28)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,56)
    vectorize j.2 (0,2)
      out = ...

Time elapsed for measurement: 27.39 s
----------------------------------------------------------------------
------------------------------  [ Train cost model ]
----------------------------------------------------------------------
Time elapsed for training: 0.14 s
----------------------------------------------------------------------
------------------------------  [ Search ]
----------------------------------------------------------------------
Sample Initial Population	#s: 1928	fail_ct: 23	Time elapsed: 1.17
GA Iter: 0	Max score: 0.9988	Min score: 0.9306	#Pop: 128	#M+: 0	#M-: 0
GA Iter: 4	Max score: 0.9998	Min score: 0.9877	#Pop: 128	#M+: 1380	#M-: 77
EvolutionarySearch		#s: 128	Time elapsed: 5.13
----------------------------------------------------------------------
------------------------------  [ Measure ]
----------------------------------------------------------------------
Get 36 programs to measure:
................****************
==================================================
No: 65	GFLOPS: 19.33 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696660279.68)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,224)
  out.local auto_unroll: 64
  for j_c.2 (0,7)
    for k.1 (0,56)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,7)
      out = ...

==================================================
No: 66	GFLOPS: 34.87 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.73, Tstamp:1696660279.80)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,784)
  for k.1 (0,56)
    for i.3 (0,4)
      out = ...

==================================================
No: 67	GFLOPS: 6.44 / 173.29	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:1.08, Tstamp:1696660279.94)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,8)
  out.local auto_unroll: 512
  for i_c.1 (0,14)
    for j_c.1 (0,14)
      for k.0 (0,56)
        for i_c.2 (0,2)
          out.local = ...
  for i.1 (0,28)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 68	GFLOPS: 114.57 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696660280.14)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  for i_c.1 (0,4)
    for k.0 (0,28)
      for j_c.2 (0,4)
        for k.1 (0,2)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,7)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,28)
      out = ...

==================================================
No: 69	GFLOPS: 76.94 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660280.41)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 64
  for i_c.1 (0,4)
    for k.0 (0,8)
      for i_c.2 (0,7)
        for k.1 (0,7)
          for i_c.3 (0,2)
            vectorize j_c.3 (0,4)
              out.local = ...
  for i.1 (0,56)
    for j.1 (0,4)
      out = ...

==================================================
No: 70	GFLOPS: 36.80 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.36, Tstamp:1696660280.70)
==================================================
Placeholder: A, B
out auto_unroll: 64
parallel i.0@j.0@i.1@j.1@ (0,784)
  for k.0 (0,14)
    for j.2 (0,2)
      for k.1 (0,4)
        for i.3 (0,2)
          out = ...

==================================================
No: 71	GFLOPS: 126.52 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.41, Tstamp:1696660281.03)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for j_c.2 (0,2)
      for k.1 (0,28)
        for i_c.3 (0,4)
          vectorize j_c.3 (0,7)
            out.local = ...
  for i.2 (0,4)
    vectorize j.2 (0,14)
      out = ...

==================================================
No: 72	GFLOPS: 125.68 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.30, Tstamp:1696660281.26)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,14)
      vectorize j_c.3 (0,4)
        out.local = ...
  for i.2 (0,14)
    for j.2 (0,4)
      out = ...

==================================================
No: 73	GFLOPS: 131.94 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.48, Tstamp:1696660281.44)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,49)
  for k.0 (0,28)
    for j.2 (0,8)
      for k.1 (0,2)
        for i.3 (0,8)
          out = ...

==================================================
No: 74	GFLOPS: 63.91 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0................****************
.47, Tstamp:1696660281.69)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 16
  for i_c.1 (0,4)
    for j_c.1 (0,7)
      for k.0 (0,8)
        for i_c.2 (0,2)
          for j_c.2 (0,8)
            for k.1 (0,7)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,56)
      out = ...

==================================================
No: 75	GFLOPS: 55.32 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.42, Tstamp:1696660281.98)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 64
  for i_c.1 (0,2)
    for j_c.1 (0,14)
      for k.0 (0,28)
        for k.1 (0,2)
          for i_c.3 (0,4)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,8)
    for j.1 (0,28)
      out = ...

==================================================
No: 76	GFLOPS: 126.88 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660282.15)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,28)
  out.local auto_unroll: 512
  for i_c.1 (0,2)
    for k.0 (0,2)
      for i_c.2 (0,2)
        for k.1 (0,28)
          for j_c.3 (0,28)
            out.local = ...
  for i.1 (0,4)
    for j.1 (0,28)
      out = ...

==================================================
No: 77	GFLOPS: 138.26 / 173.29	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696660282.33)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,7)
  out.local auto_unroll: 64
  for k.0 (0,8)
    for i_c.2 (0,4)
      for k.1 (0,7)
        for i_c.3 (0,14)
          vectorize j_c.3 (0,8)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,8)
      out = ...

==================================================
No: 78	GFLOPS: 211.62 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696660282.51)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,7)
    for j.2 (0,7)
      for k.1 (0,8)
        vectorize j.3 (0,8)
          out = ...

==================================================
No: 79	GFLOPS: 12.05 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.34, Tstamp:1696660282.78)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,448)
  out.local auto_unroll: 16
  for i_c.2 (0,7)
    for k.1 (0,56)
      out.local = ...
  for i.2 (0,7)
    out = ...

==================================================
No: 80	GFLOPS: 22.89 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:1.75, Tstamp:1696660283.05)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,7)
  for i.2 (0,7)
    for j.2 (0,8)
      for k.1 (0,56)
        for i.3 (0,8)
          out = ...

==================================================
No: 81	GFLOPS: 23.38 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.26, Tstamp:1696660287.84)
==================================================
Placeholder: A, B
out.local auto_unroll: 512
for j_c.1 (0,14)
  for k.0 (0,8)
    for i_c.2 (0,56)
      for j_c.2 (0,2)
        for k.1 (0,7)
          vectorize j_c.3 (0,2)
            out.local = ...
for i.1 (0,56)
  for j.1 (0,56)
    out = ...

==================================================
No: 82	GFLOPS: 26.73 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.44, Tstamp:1696660288.19)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,112)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,4)
      for i_c.3 (0,7)
        out.local = ...
  for i.2 (0,28)
    out = ...

==================================================
No: 83	GFLOPS: 43.42 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.45, Tstamp:1696660288.48)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,14)
  out.local auto_unroll: 512
  for k.0 (0,4)
    for i_c.2 (0,28)
      for j_c.2 (0,4)
        for k.1 (0,14)
          vectorize j_c.3 (0,2)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 84	GFLOPS: 89.06 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696660288.70)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for k.0 (0,28)
    for i_c.2 (0,2)
      for k.1 (0,2)
        for i_c.3 (0,7)
          vectorize j_c.3 (0,4)
            out.local = ...
  for i.2 (0,14)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 85	GFLOPS: 31.80 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.47, Tstamp:1696660288.99)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i.1@j.1@ (0,64)
  for k.0 (0,56)
    for i.2 (0,7)
      for j.2 (0,7)
        out = ...

==================================================
No: 86	GFLOPS: 21.30 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.21, Tstamp:1696660289.11)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,196)
  out.local auto_unroll: 64
  for j_c.2 (0,8)
    for k.1 (0,56)
      for i_c.3 (0,2)
        out.local = ...
  for i.2 (0,2)
    vectorize j.2 (0,8)
      out = ...

==================================================
No: 87	GFLOPS: 11.11 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696660289.24)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  for j_c.1 (0,28)
    for k.1 (0,56)
      for i_c.3 (0,56)
        out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 88	GFLOPS: 71.72 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.43, Tstamp:1696660289.53)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 64
  for k.0 (0,7)
    for i_c.2 (0,7)
      for j_c.2 (0,4)
        for k.1 (0,8)
          for i_c.3 (0,4)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,4)
      out = ...

==================================================
No: 89	GFLOPS: 22.01 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:2.91, Tstamp:1696660289.66)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@ (0,98)
  for j.1 (0,4)
    out.local auto_unroll: 512
    for k.0 (0,2)
      for i_c.2 (0,4)
        for j_c.2 (0,2)
          for k.1 (0,28)
            out.local = ...
    for i.2 (0,4)
      vectorize j.2 (0,2)
        out = ...

==================================================
No: 90	GFLOPS: 72.68 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.86, Tstamp:1696660289.85)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,4)
  out.local auto_unroll: 512
  for k.0 (0,28)
    for i_c.2 (0,7)
      for j_c.2 (0,14)
        for k.1 (0,2)
          for i_c.3 (0,8)
            out.local = ...
  for i.1 (0,56)
    vectorize j.1 (0,14)
      out = ...

==================================================
No: 91	GFLOPS: 53.73 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696660290.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,196)
  for k.0 (0,28)
    for k.1 (0,2)
      for i.3 (0,4)
        vectorize j.3 (0,4)
          out = ...

==================================================
No: 92	GFLOPS: 22.38 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.52, Tstamp:1696660290.26)
==================================================
Placeholder: A, B
out auto_unroll: 512
parallel i.0@j.0@i....****
.1@j.1@ (0,1568)
  for k.0 (0,2)
    for k.1 (0,28)
      for i.3 (0,2)
        out = ...

==================================================
No: 93	GFLOPS: 85.64 / 211.62	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.31, Tstamp:1696660290.42)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,14)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for i_c.2 (0,2)
      for j_c.2 (0,28)
        for k.1 (0,2)
          for i_c.3 (0,4)
            out.local = ...
  for i.1 (0,8)
    for j.1 (0,28)
      out = ...

==================================================
No: 94	GFLOPS: 215.06 / 215.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.38, Tstamp:1696660290.75)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  for k.0 (0,56)
    for j.2 (0,7)
      vectorize j.3 (0,8)
        out = ...

==================================================
No: 95	GFLOPS: 24.20 / 215.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.25, Tstamp:1696660290.88)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,56)
  out.local auto_unroll: 16
  for k.0 (0,7)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for k.1 (0,8)
          for i_c.3 (0,14)
            out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,2)
      out = ...

==================================================
No: 96	GFLOPS: 28.83 / 215.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.57, Tstamp:1696660291.17)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,4)
  out.local auto_unroll: 64
  for k.0 (0,28)
    for k.1 (0,2)
      for i_c.3 (0,28)
        vectorize j_c.3 (0,28)
          out.local = ...
  for i.2 (0,28)
    vectorize j.2 (0,28)
      out = ...

==================================================
No: 97	GFLOPS: 155.74 / 215.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.49, Tstamp:1696660293.12)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,28)
  out.local auto_unroll: 512
  for k.0 (0,56)
    for i_c.2 (0,2)
      for j_c.2 (0,2)
        for j_c.3 (0,28)
          out.local = ...
  for i.2 (0,2)
    for j.2 (0,56)
      out = ...

==================================================
No: 98	GFLOPS: 5.30 / 215.06	results: MeasureResult(cost:[0.0001], error_no:0, all_cost:0.27, Tstamp:1696660293.25)
==================================================
Placeholder: A, B
parallel i.0@j.0@i.1@j.1@ (0,2)
  for k.0 (0,8)
    for i.2 (0,8)
      for j.2 (0,7)
        for k.1 (0,7)
          for i.3 (0,7)
            vectorize j.3 (0,4)
              out = ...

==================================================
No: 99	GFLOPS: 38.21 / 215.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.22, Tstamp:1696660293.38)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,2)
  out.local auto_unroll: 64
  for k.0 (0,2)
    for i_c.2 (0,7)
      for j_c.2 (0,14)
        for k.1 (0,28)
          for i_c.3 (0,8)
            vectorize j_c.3 (0,2)
              out.local = ...
  for i.1 (0,56)
    for j.1 (0,28)
      out = ...

==================================================
No: 100	GFLOPS: 22.08 / 215.06	results: MeasureResult(cost:[0.0000], error_no:0, all_cost:0.33, Tstamp:1696660293.67)
==================================================
Placeholder: A, B
parallel i.0@j.0@ (0,784)
  for i.1 (0,2)
    for k.0 (0,56)
      for i.2 (0,2)
        out = ...

Time elapsed for measurement: 17.69 s
----------------------------------------------------------------------
------------------------------  [ Done ]
----------------------------------------------------------------------
Lowered TIR:
# from tvm.script import ir as I
# from tvm.script import tir as T

@I.ir_module
class Module:
    @T.prim_func
    def main(A: T.Buffer((56, 56), "float32"), B: T.Buffer((56, 56), "float32"), out: T.Buffer((56, 56), "float32")):
        T.func_attr({"from_legacy_te_schedule": T.bool(True), "global_symbol": "main", "tir.noalias": T.bool(True)})
        for i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused in T.parallel(56):
            cse_var_1: T.int32 = i_outer_outer_outer_j_outer_outer_outer_fused_i_outer_outer_inner_fused_j_outer_outer_inner_fused * 56
            out_1 = T.Buffer((3136,), data=out.data)
            out_1[cse_var_1:cse_var_1 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 8:cse_var_1 + 8 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 16:cse_var_1 + 16 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 24:cse_var_1 + 24 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 32:cse_var_1 + 32 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 40:cse_var_1 + 40 + 8] = T.Broadcast(T.float32(0), 8)
            out_1[cse_var_1 + 48:cse_var_1 + 48 + 8] = T.Broadcast(T.float32(0), 8)
            for k_outer in range(56):
                cse_var_9: T.int32 = k_outer * 56
                cse_var_8: T.int32 = cse_var_1 + k_outer
                cse_var_7: T.int32 = cse_var_1 + 8
                cse_var_6: T.int32 = cse_var_1 + 48
                cse_var_5: T.int32 = cse_var_1 + 40
                cse_var_4: T.int32 = cse_var_1 + 32
                cse_var_3: T.int32 = cse_var_1 + 24
                cse_var_2: T.int32 = cse_var_1 + 16
                A_1 = T.Buffer((3136,), data=A.data)
                B_1 = T.Buffer((3136,), data=B.data)
                out_1[cse_var_1:cse_var_1 + 8] = out_1[cse_var_1:cse_var_1 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9:cse_var_9 + 8]
                out_1[cse_var_7:cse_var_7 + 8] = out_1[cse_var_7:cse_var_7 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 8:cse_var_9 + 8 + 8]
                out_1[cse_var_2:cse_var_2 + 8] = out_1[cse_var_2:cse_var_2 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 16:cse_var_9 + 16 + 8]
                out_1[cse_var_3:cse_var_3 + 8] = out_1[cse_var_3:cse_var_3 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 24:cse_var_9 + 24 + 8]
                out_1[cse_var_4:cse_var_4 + 8] = out_1[cse_var_4:cse_var_4 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 32:cse_var_9 + 32 + 8]
                out_1[cse_var_5:cse_var_5 + 8] = out_1[cse_var_5:cse_var_5 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 40:cse_var_9 + 40 + 8]
                out_1[cse_var_6:cse_var_6 + 8] = out_1[cse_var_6:cse_var_6 + 8] + T.Broadcast(A_1[cse_var_8], 8) * B_1[cse_var_9 + 48:cse_var_9 + 48 + 8]
Execution time of this operator: max:1.546 us   median:1.514 us   min:1.424 us
Equivalent python schedule:
out_i, out_j, out_k = tuple(out.op.axis) + tuple(out.op.reduce_axis)
out_i_o_i, out_i_i = s[out].split(out_i, factor=1)
out_i_o_o_i, out_i_o_i = s[out].split(out_i_o_i, factor=1)
out_i_o_o_o, out_i_o_o_i = s[out].split(out_i_o_o_i, factor=8)
out_j_o_i, out_j_i = s[out].split(out_j, factor=8)
out_j_o_o_i, out_j_o_i = s[out].split(out_j_o_i, factor=7)
out_j_o_o_o, out_j_o_o_i = s[out].split(out_j_o_o_i, factor=1)
out_k_o, out_k_i = s[out].split(out_k, factor=1)
s[out].reorder(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i, out_k_o, out_i_o_i, out_j_o_i, out_k_i, out_i_i, out_j_i)
out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused = s[out].fuse(out_i_o_o_o, out_j_o_o_o, out_i_o_o_i, out_j_o_o_i)
s[out].parallel(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "auto_unroll_max_step", 16)
s[out].pragma(out_i_o_o_o_j_o_o_o_fused_i_o_o_i_fused_j_o_o_i_fused, "unroll_explicit", True)
s[out].vectorize(out_j_i)

